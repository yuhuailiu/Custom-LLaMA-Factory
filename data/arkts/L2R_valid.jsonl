{"path": "component-collection~harmonyos_samples~391/entry/src/main/ets/pages/universal/gesture/swipeSample/SwipeSample.ets", "project_name": "component-collection~harmonyos_samples~391", "text": "import { IntroductionTitle } from '../../../../common/IntroductionTitle';\nimport { TitleBar } from '../../../../common/TitleBar';\nimport { getStringData } from '../../../../data/ResourceDataHandle';\n\n@Entry\n@Component\nstruct SwipeExample {\n  @State rotateAngle: number = 0;\n  @State speed: number = 1;\n\n  build() {\n    Column() {\n      TitleBar({ title: $r('app.string.swipe_gesture') })\n      IntroductionTitle({ introduction: $r('app.string.swipe_description') })\n      Row() {\n        Column() {\n          Text(getStringData($r('app.string.swipe_text_speed')) + this.speed)\n          Text(getStringData($r('app.string.swipe_text_angle')) + this.rotateAngle)\n        }\n        .padding(20)\n        .id('swipe_column')\n        .border({ width: 3 })\n        .width(300)\n        .height(150)\n        .rotate({ angle: this.rotateAngle })\n        // This event is triggered when a single finger slides vertically\n        .gesture(\n          SwipeGesture({ direction: SwipeDirection.All, fingers: 1, speed: 100 })\n            .onAction((event: GestureEvent) => {\n              this.speed = event.speed;\n              this.rotateAngle = event.angle;\n            })\n        )\n      }\n      .justifyContent(FlexAlign.Center)\n      .borderRadius(24)\n      .backgroundColor(Color.White)\n      .height(350)\n      .margin({ left: 12, right: 12 })\n      .width('100%')\n    }\n    .height('100%')\n    .width('100%')\n    .backgroundColor($r('app.color.background_shallow_grey'))\n  }\n}", "id": "13d10b079a1d656262e3c4a89d5972102b9c1295fe7d0f7091311a9d0b1711a1", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "结构完整，生态耦合自然，具备良好的ArkTS实践与交互逻辑。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2239, "completion_tokens": 66, "total_tokens": 2305, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"结构完整，生态耦合自然，具备良好的ArkTS实践与交互逻辑。\"\n}", "llm_formatted": "import { IntroductionTitle } from '../../../../common/IntroductionTitle';\nimport { TitleBar } from '../../../../common/TitleBar';\nimport { getStringData } from '../../../../data/ResourceDataHandle';\n\n@Entry\n@Component\nstruct SwipeExample {\n  @State rotateAngle: number = 0;\n  @State speed: number = 1;\n\n  build() {\n    Column() {\n      TitleBar({ title: $r('app.string.swipe_gesture') })\n      IntroductionTitle({ introduction: $r('app.string.swipe_description') })\n      Row() {\n        Column() {\n          Text(getStringData($r('app.string.swipe_text_speed')) + this.speed)\n          Text(getStringData($r('app.string.swipe_text_angle')) + this.rotateAngle)\n        }\n        .padding(20)\n        .id('swipe_column')\n        .border({ width: 3 })\n        .width(300)\n        .height(150)\n        .rotate({ angle: this.rotateAngle })\n        .gesture(\n          SwipeGesture({ direction: SwipeDirection.All, fingers: 1, speed: 100 })\n            .onAction((event: GestureEvent) => {\n              this.speed = event.speed;\n              this.rotateAngle = event.angle;\n            })\n        )\n      }\n      .justifyContent(FlexAlign.Center)\n      .borderRadius(24)\n      .backgroundColor(Color.White)\n      .height(350)\n      .margin({ left: 12, right: 12 })\n      .width('100%')\n    }\n    .height('100%')\n    .width('100%')\n    .backgroundColor($r('app.color.background_shallow_grey'))\n  }\n}", "leaked": true, "text_tokens": 370, "split": "valid"}
{"path": "arkui_ace_engine~OpenHarmony~1897/examples/PickerDialog/entry/src/main/ets/pages/textpickerdialog/TextPickerDialogExample003.ets", "project_name": "arkui_ace_engine~OpenHarmony~1897", "text": "@Entry\n@Component\nstruct TextPickerDialogExample {\n  private select: number | number[] = 0;\n  private fruits: string[] = ['apple1', 'orange2', 'peach3', 'grape4', 'banana5'];\n  @State v: string = '';\n\n  build() {\n    Row() {\n      Column() {\n        Button('TextPickerDialog:' + this.v)\n          .margin(20)\n          .onClick(() => {\n            TextPickerDialog.show({ // 建议使用 this.getUIContext().showTextPickerDialog()接口\n              range: this.fruits,\n              selected: this.select,\n              disappearTextStyle: { color: Color.Red, font: { size: 15, weight: FontWeight.Lighter }},\n              textStyle: { color: Color.Black, font: { size: 20, weight: FontWeight.Normal }},\n              selectedTextStyle: { color: Color.Blue, font: { size: 30, weight: FontWeight.Bolder }},\n              onAccept: (value: TextPickerResult) => {\n                // 设置select为按下确定按钮时候的选中项index，这样当弹窗再次弹出时显示选中的是上一次确定的选项\n                this.select = value.index;\n                console.log(this.select + '');\n                // 点击确定后，被选到的文本数据展示到页面\n                this.v = value.value as string;\n                console.info('TextPickerDialog:onAccept()' + JSON.stringify(value));\n              },\n              onCancel: () => {\n                console.info('TextPickerDialog:onCancel()');\n              },\n              onChange: (value: TextPickerResult) => {\n                console.info('TextPickerDialog:onChange()' + JSON.stringify(value));\n              },\n              onScrollStop: (value: TextPickerResult) => {\n                console.info('TextPickerDialog:onScrollStop()' + JSON.stringify(value));\n              },\n              onDidAppear: () => {\n                console.info('TextPickerDialog:onDidAppear()');\n              },\n              onDidDisappear: () => {\n                console.info('TextPickerDialog:onDidDisappear()');\n              },\n              onWillAppear: () => {\n                console.info('TextPickerDialog:onWillAppear()');\n              },\n              onWillDisappear: () => {\n                console.info('TextPickerDialog:onWillDisappear()');\n              },\n              enableHoverMode: true,\n              hoverModeArea: HoverModeAreaType.TOP_SCREEN\n            })\n          })\n      }.width('100%')\n    }.height('100%')\n  }\n}\n", "id": "782db6b2e005d86fb462e76680f15890acc02a7e3c8fde1662bc8a11cacbb803", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "ArkTS语法规范，生态耦合自然，逻辑完整，具学习价值", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 1784, "completion_tokens": 69, "total_tokens": 1853, "raw_response": "```json\n{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"ArkTS语法规范，生态耦合自然，逻辑完整，具学习价值\"\n}\n```", "llm_formatted": "@Entry\n@Component\nstruct TextPickerDialogExample {\n  private select: number | number[] = 0;\n  private fruits: string[] = ['apple1', 'orange2', 'peach3', 'grape4', 'banana5'];\n  @State v: string = '';\n\n  build() {\n    Row() {\n      Column() {\n        Button('TextPickerDialog:' + this.v)\n          .margin(20)\n          .onClick(() => {\n            TextPickerDialog.show({\n              range: this.fruits,\n              selected: this.select,\n              disappearTextStyle: { color: Color.Red, font: { size: 15, weight: FontWeight.Lighter }},\n              textStyle: { color: Color.Black, font: { size: 20, weight: FontWeight.Normal }},\n              selectedTextStyle: { color: Color.Blue, font: { size: 30, weight: FontWeight.Bolder }},\n              onAccept: (value: TextPickerResult) => {\n                this.select = value.index;\n                console.log(this.select + '');\n                this.v = value.value as string;\n                console.info('TextPickerDialog:onAccept()' + JSON.stringify(value));\n              },\n              onCancel: () => {\n                console.info('TextPickerDialog:onCancel()');\n              },\n              onChange: (value: TextPickerResult) => {\n                console.info('TextPickerDialog:onChange()' + JSON.stringify(value));\n              },\n              onScrollStop: (value: TextPickerResult) => {\n                console.info('TextPickerDialog:onScrollStop()' + JSON.stringify(value));\n              },\n              onDidAppear: () => {\n                console.info('TextPickerDialog:onDidAppear()');\n              },\n              onDidDisappear: () => {\n                console.info('TextPickerDialog:onDidDisappear()');\n              },\n              onWillAppear: () => {\n                console.info('TextPickerDialog:onWillAppear()');\n              },\n              onWillDisappear: () => {\n                console.info('TextPickerDialog:onWillDisappear()');\n              },\n              enableHoverMode: true,\n              hoverModeArea: HoverModeAreaType.TOP_SCREEN\n            })\n          })\n      }.width('100%')\n    }.height('100%')\n  }\n}", "leaked": true, "text_tokens": 516, "split": "valid"}
{"path": "app_samples~openharmony~1421/Account/AppAccountManager/entry/src/main/ets/MainAbility/pages/Login.ets", "project_name": "app_samples~openharmony~1421", "text": "import router from '@ohos.router'\nimport { LoginInfo } from '../common/LoginInfo'\nimport { NavigationBar } from '../common/NavigationBar'\n\n@Entry\n@Component\nstruct Login {\n  @State bundleName: string = <string> router.getParams()[\"bundleName\"]\n\n  build() {\n    Column() {\n      NavigationBar({ title: $r('app.string.register_login'), flag: true, url: 'pages/Index' })\n\n      LoginInfo({ bundleName: this.bundleName })\n    }\n    .width('100%')\n    .height('100%')\n  }\n}", "id": "91147776e15d416067f907b1193f818c99903345465a0a37d3daa6680891790e", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 3.0, "confidence": 0.9, "rationale": "ArkTS结构完整，生态耦合自然，具一定学习价值", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 1391, "completion_tokens": 66, "total_tokens": 1457, "raw_response": "```json\n{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 3,\n  \"confidence\": 0.9,\n  \"rationale\": \"ArkTS结构完整，生态耦合自然，具一定学习价值\"\n}\n```", "llm_formatted": "import router from '@ohos.router'\nimport { LoginInfo } from '../common/LoginInfo'\nimport { NavigationBar } from '../common/NavigationBar'\n\n@Entry\n@Component\nstruct Login {\n  @State bundleName: string = <string> router.getParams()[\"bundleName\"]\n\n  build() {\n    Column() {\n      NavigationBar({ title: $r('app.string.register_login'), flag: true, url: 'pages/Index' })\n\n      LoginInfo({ bundleName: this.bundleName })\n    }\n    .width('100%')\n    .height('100%')\n  }\n}", "leaked": true, "text_tokens": 123, "split": "valid"}
{"path": "applications_permission_manager~OpenHarmony~815/permissionmanager/src/main/ets/common/permissionGroupManager/DocumentsDirectoryStrategy.ets", "project_name": "applications_permission_manager~OpenHarmony~815", "text": "import { BasePermissionStrategy } from '../base/BasePermissionStrategy';\nimport { Permission, PermissionGroup } from '../model/definition';\nimport { PermissionGroupConfig } from '../model/typedef';\nimport { DeviceUtil } from '../utils/deviceUtil';\n\nconst groupConfig: PermissionGroupConfig = new PermissionGroupConfig({\n  groupName: PermissionGroup.DOCUMENTS_DIRECTORY,\n  permissions: [Permission.READ_WRITE_DOCUMENTS_DIRECTORY],\n  icon: $r('app.media.ic_public_folder'),\n  title: '',\n  reason: '',\n  buttonList: []\n})\n\nexport class DocumentsDirectoryStrategy extends BasePermissionStrategy {\n  public override getPermissionGroupConfig(): PermissionGroupConfig {\n    return groupConfig;\n  }\n\n  public override getGroupTitle(appName: string, locationFlag: number): ResourceStr {\n    return $r('app.string.group_label_document_folder', appName);\n  }\n\n  public override isSupport(permission: Permission): boolean {\n    return DeviceUtil.isPC() || DeviceUtil.isTablet();\n  }\n}", "id": "3c4d8ea4cde3a7b36943ecad04cb526d2862e5d63b18287338b7d6b4e21f7379", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 3.0, "confidence": 0.9, "rationale": "结构清晰，生态耦合自然，具备一定可迁移性", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 1469, "completion_tokens": 61, "total_tokens": 1530, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 3,\n  \"confidence\": 0.9,\n  \"rationale\": \"结构清晰，生态耦合自然，具备一定可迁移性\"\n}", "llm_formatted": "import { BasePermissionStrategy } from '../base/BasePermissionStrategy';\nimport { Permission, PermissionGroup } from '../model/definition';\nimport { PermissionGroupConfig } from '../model/typedef';\nimport { DeviceUtil } from '../utils/deviceUtil';\n\nconst groupConfig: PermissionGroupConfig = new PermissionGroupConfig({\n  groupName: PermissionGroup.DOCUMENTS_DIRECTORY,\n  permissions: [Permission.READ_WRITE_DOCUMENTS_DIRECTORY],\n  icon: $r('app.media.ic_public_folder'),\n  title: '',\n  reason: '',\n  buttonList: []\n})\n\nexport class DocumentsDirectoryStrategy extends BasePermissionStrategy {\n  public override getPermissionGroupConfig(): PermissionGroupConfig {\n    return groupConfig;\n  }\n\n  public override getGroupTitle(appName: string, locationFlag: number): ResourceStr {\n    return $r('app.string.group_label_document_folder', appName);\n  }\n\n  public override isSupport(permission: Permission): boolean {\n    return DeviceUtil.isPC() || DeviceUtil.isTablet();\n  }\n}", "leaked": true, "text_tokens": 201, "split": "valid"}
{"path": "callkit-samplecode-voipdemo-arkts~harmonyos_samples~549/entry/src/main/ets/model/TypeUtils.ets", "project_name": "callkit-samplecode-voipdemo-arkts~harmonyos_samples~549", "text": "import { voipCall } from '@kit.CallKit';\n\nexport default class DefaultCallData {\n  public callId: string = '';\n  public callState: voipCall.VoipCallState = -1;\n  public callType: voipCall.VoipCallType = voipCall.VoipCallType.VOIP_CALL_VOICE;\n  public startTime?: number = -1;\n  public isVoiceAnswerSupported?: boolean = true;\n}\n", "id": "9f93791b4103d209cd1322b8ab0c12ac134acadcc5de73068fe31b50bfb54b66", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 3.0, "confidence": 0.9, "rationale": "符合 ArkTS 规范，类型定义清晰，具备一定学习价值", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 1361, "completion_tokens": 67, "total_tokens": 1428, "raw_response": "```json\n{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 3,\n  \"confidence\": 0.9,\n  \"rationale\": \"符合 ArkTS 规范，类型定义清晰，具备一定学习价值\"\n}\n```", "llm_formatted": "import { voipCall } from '@kit.CallKit';\n\nexport default class DefaultCallData {\n  public callId: string = '';\n  public callState: voipCall.VoipCallState = -1;\n  public callType: voipCall.VoipCallType = voipCall.VoipCallType.VOIP_CALL_VOICE;\n  public startTime?: number = -1;\n  public isVoiceAnswerSupported?: boolean = true;\n}", "leaked": true, "text_tokens": 93, "split": "valid"}
{"path": "applications_mms~openharmony~1285/entry/src/main/ets/pages/queryreport/queryReportController.ets", "project_name": "applications_mms~openharmony~1285", "text": "import common from '../../data/commonData';\nimport dateUtil from '../../utils/DateUtil';\nimport router from '@system.router';\nimport HiLog from '../../utils/HiLog'\n\nconst TAG = 'QueryReportController';\n\nlet queryReportCtrl;\n\nexport default class QueryReportController {\n    // MMS or not\n    isMsm: boolean = true;\n    // Sending Status Description\n    sendStatusDesc: Resource;\n    // Sending Status\n    sendStatus: number = 0;\n    // Time\n    mmsTime: Resource;\n    // Specific morning and afternoon time\n    specificTime: Resource;\n    // Timestamp\n    timeMillisecond: string = '0';\n    // telephoneNo\n    telephone: string = '';\n\n    static getInstance() {\n        if (queryReportCtrl == null) {\n            queryReportCtrl = new QueryReportController();\n            AppStorage.SetAndLink('QueryReportController', queryReportCtrl);\n        }\n        return queryReportCtrl;\n    };\n\n    onInit() {\n        HiLog.i(TAG, 'onInit')\n        this.isMsm = router.getParams().isMsm == undefined ? true : Boolean(router.getParams().isMsm);\n        this.sendStatus = router.getParams().sendStatus == undefined ? 0 : Number(router.getParams().sendStatus);\n        this.timeMillisecond =\n            router.getParams().timeMillisecond == undefined ? '0' : String(router.getParams().timeMillisecond);\n        this.telephone = router.getParams().telephone == undefined ? '' : String(router.getParams().telephone)\n    };\n\n    onShow() {\n        HiLog.i(TAG, 'onShow')\n        // The status is changed to Chinese description.\n        this.dealSendStatus();\n        // Time Conversion\n        this.dealTime();\n    };\n\n    dealSendStatus() {\n        HiLog.i(TAG, 'dealSendStatus sendStatus=' + this.sendStatus)\n        if (this.sendStatus == common.int.SEND_MESSAGE_SUCCESS) {\n            this.sendStatusDesc = $r('app.string.received');\n        } else if (this.sendStatus == common.int.SEND_MESSAGE_FAILED) {\n            this.sendStatusDesc = this.isMsm ? $r('app.string.refused') : $r('app.string.failed');\n        } else {\n            this.sendStatusDesc = $r('app.string.rending');\n        }\n    };\n\n    dealTime() {\n        this.mmsTime = dateUtil.convertTimeStampDate(this.timeMillisecond);\n        this.specificTime = dateUtil.convertTimeStampTime(this.timeMillisecond, false)\n    }\n}", "id": "9f046e741efadb8c93197213e9788c05026d728968be5632ea7e4b7ebe423f5a", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 3.0, "confidence": 0.9, "rationale": "ArkTS类结构清晰，生态耦合自然，具备实用性和学习价值。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2388, "completion_tokens": 65, "total_tokens": 2453, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 3,\n  \"confidence\": 0.9,\n  \"rationale\": \"ArkTS类结构清晰，生态耦合自然，具备实用性和学习价值。\"\n}", "llm_formatted": "import common from '../../data/commonData';\nimport dateUtil from '../../utils/DateUtil';\nimport router from '@system.router';\nimport HiLog from '../../utils/HiLog'\n\nconst TAG = 'QueryReportController';\n\nlet queryReportCtrl;\n\nexport default class QueryReportController {\n    // MMS or not\n    isMsm: boolean = true;\n    // Sending Status Description\n    sendStatusDesc: Resource;\n    // Sending Status\n    sendStatus: number = 0;\n    // Time\n    mmsTime: Resource;\n    // Specific morning and afternoon time\n    specificTime: Resource;\n    // Timestamp\n    timeMillisecond: string = '0';\n    // telephoneNo\n    telephone: string = '';\n\n    static getInstance() {\n        if (queryReportCtrl == null) {\n            queryReportCtrl = new QueryReportController();\n            AppStorage.SetAndLink('QueryReportController', queryReportCtrl);\n        }\n        return queryReportCtrl;\n    };\n\n    onInit() {\n        HiLog.i(TAG, 'onInit')\n        this.isMsm = router.getParams().isMsm == undefined ? true : Boolean(router.getParams().isMsm);\n        this.sendStatus = router.getParams().sendStatus == undefined ? 0 : Number(router.getParams().sendStatus);\n        this.timeMillisecond =\n            router.getParams().timeMillisecond == undefined ? '0' : String(router.getParams().timeMillisecond);\n        this.telephone = router.getParams().telephone == undefined ? '' : String(router.getParams().telephone)\n    };\n\n    onShow() {\n        HiLog.i(TAG, 'onShow')\n        // The status is changed to Chinese description.\n        this.dealSendStatus();\n        // Time Conversion\n        this.dealTime();\n    };\n\n    dealSendStatus() {\n        HiLog.i(TAG, 'dealSendStatus sendStatus=' + this.sendStatus)\n        if (this.sendStatus == common.int.SEND_MESSAGE_SUCCESS) {\n            this.sendStatusDesc = $r('app.string.received');\n        } else if (this.sendStatus == common.int.SEND_MESSAGE_FAILED) {\n            this.sendStatusDesc = this.isMsm ? $r('app.string.refused') : $r('app.string.failed');\n        } else {\n            this.sendStatusDesc = $r('app.string.rending');\n        }\n    };\n\n    dealTime() {\n        this.mmsTime = dateUtil.convertTimeStampDate(this.timeMillisecond);\n        this.specificTime = dateUtil.convertTimeStampTime(this.timeMillisecond, false)\n    }\n}", "leaked": true, "text_tokens": 519, "split": "valid"}
{"path": "NetAdaptiveVideoStream~harmonyos_samples~358/entry/src/main/ets/viewmodel/NetInfoViewModel.ets", "project_name": "NetAdaptiveVideoStream~harmonyos_samples~358", "text": "import { netQuality } from '@kit.NetworkBoostKit';\nimport { NetInfoModel } from '../model/NetInfoModel';\n\n@Observed\nexport class NetInfoViewModel {\n  @Track netInfoList: Array<NetInfoModel>;\n\n  constructor() {\n    this.netInfoList = [\n      new NetInfoModel(netQuality.PathType.CELLULAR_PRIMARY),\n      new NetInfoModel(netQuality.PathType.CELLULAR_SECONDARY),\n      new NetInfoModel(netQuality.PathType.WIFI_PRIMARY),\n      new NetInfoModel(netQuality.PathType.WIFI_SECONDARY)\n    ];\n  }\n\n  public setAllCallback(weakNetCallback: Callback<string>) {\n    netQuality.on('netQosChange', (netQosList: Array<netQuality.NetworkQos>) => {\n      this.netQosChangeCallback(netQosList);\n    });\n    netQuality.on('netSceneChange', (netSceneList: Array<netQuality.NetworkScene>) => {\n      this.netSceneChangeCallback(netSceneList);\n      this.weakNetCallback(netSceneList, weakNetCallback);\n    });\n  }\n\n  public clearAllCallback() {\n    netQuality.off('netQosChange');\n    netQuality.off('netSceneChange');\n  }\n\n  private netQosChangeCallback(netQosList: Array<netQuality.NetworkQos>) {\n    if (netQosList.length <= 0) {\n      return;\n    }\n    netQosList.forEach((qos) => {\n      const pathType = qos.pathType;\n      this.netInfoList[pathType].qosDownBandWidth = qos.linkDownBandwidth;\n      this.netInfoList[pathType].qosDownRate = qos.linkDownRate;\n      this.netInfoList[pathType].qosRttMs = qos.rttMs;\n    });\n  }\n\n  private netSceneChangeCallback(netSceneList: Array<netQuality.NetworkScene>) {\n    if (netSceneList.length <= 0) {\n      return;\n    }\n    netSceneList.forEach((scene) => {\n      const pathType = scene.pathType;\n      this.netInfoList[pathType].scene = scene.scene;\n      this.netInfoList[pathType].recommendedAction = scene.recommendedAction;\n    });\n  }\n\n  private weakNetCallback(netSceneList: Array<netQuality.NetworkScene>, customCallback: Callback<string>) {\n    if (netSceneList.length <= 0) {\n      return;\n    }\n    netSceneList.forEach((scene) => {\n      customCallback(scene.scene);\n    });\n  }\n}", "id": "62def957194f22fb9e107f764fc03750fd63cd19b4d52da6220bbb2fb9eb5eaf", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "结构清晰，类型规范，生态耦合自然，具备良好学习价值。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2391, "completion_tokens": 65, "total_tokens": 2456, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"结构清晰，类型规范，生态耦合自然，具备良好学习价值。\"\n}", "llm_formatted": "import { netQuality } from '@kit.NetworkBoostKit';\nimport { NetInfoModel } from '../model/NetInfoModel';\n\n@Observed\nexport class NetInfoViewModel {\n  @Track netInfoList: Array<NetInfoModel>;\n\n  constructor() {\n    this.netInfoList = [\n      new NetInfoModel(netQuality.PathType.CELLULAR_PRIMARY),\n      new NetInfoModel(netQuality.PathType.CELLULAR_SECONDARY),\n      new NetInfoModel(netQuality.PathType.WIFI_PRIMARY),\n      new NetInfoModel(netQuality.PathType.WIFI_SECONDARY)\n    ];\n  }\n\n  public setAllCallback(weakNetCallback: Callback<string>) {\n    netQuality.on('netQosChange', (netQosList: Array<netQuality.NetworkQos>) => {\n      this.netQosChangeCallback(netQosList);\n    });\n    netQuality.on('netSceneChange', (netSceneList: Array<netQuality.NetworkScene>) => {\n      this.netSceneChangeCallback(netSceneList);\n      this.weakNetCallback(netSceneList, weakNetCallback);\n    });\n  }\n\n  public clearAllCallback() {\n    netQuality.off('netQosChange');\n    netQuality.off('netSceneChange');\n  }\n\n  private netQosChangeCallback(netQosList: Array<netQuality.NetworkQos>) {\n    if (netQosList.length <= 0) {\n      return;\n    }\n    netQosList.forEach((qos) => {\n      const pathType = qos.pathType;\n      this.netInfoList[pathType].qosDownBandWidth = qos.linkDownBandwidth;\n      this.netInfoList[pathType].qosDownRate = qos.linkDownRate;\n      this.netInfoList[pathType].qosRttMs = qos.rttMs;\n    });\n  }\n\n  private netSceneChangeCallback(netSceneList: Array<netQuality.NetworkScene>) {\n    if (netSceneList.length <= 0) {\n      return;\n    }\n    netSceneList.forEach((scene) => {\n      const pathType = scene.pathType;\n      this.netInfoList[pathType].scene = scene.scene;\n      this.netInfoList[pathType].recommendedAction = scene.recommendedAction;\n    });\n  }\n\n  private weakNetCallback(netSceneList: Array<netQuality.NetworkScene>, customCallback: Callback<string>) {\n    if (netSceneList.length <= 0) {\n      return;\n    }\n    netSceneList.forEach((scene) => {\n      customCallback(scene.scene);\n    });\n  }\n}", "leaked": true, "text_tokens": 522, "split": "valid"}
{"path": "xts_acts~openharmony~1331/arkui/ace_c_arkui_test/entry/src/ohosTest/ets/test/xcomponent/XComponentSourceIdTest.test.ets", "project_name": "xts_acts~openharmony~1331", "text": "import { beforeEach, describe, expect, it, Level } from '@ohos/hypium';\nimport Utils from '../common/Utils';\nimport nativeFunc from 'libnativefunc.so'\n\nexport default function xComponentSourceIdTest() {\n\n  describe('XComponentSourceIdTest', () => {\n\n    beforeEach(async (done: Function) => {\n      await Utils.sleep(100);\n      done();\n    });\n\n    /*\n     * @tc.number     : SUB_ARKUI_CAPI_XCOMPONENT_SOURCEID_0100\n     * @tc.name       : testXComponentSourceId001\n     * @tc.desc       : testing sourceId for XComponent with normal value\n     * @tc.size       : MediumTest\n     * @tc.type       : Function\n     * @tc.level      : Level 1\n     */\n    it('testXComponentSourceId001', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testXComponentSourceId001()).assertEqual(0)\n      done()\n    })\n\n    /*\n     * @tc.number     : SUB_ARKUI_CAPI_XCOMPONENT_SOURCEID_0200\n     * @tc.name       : testXComponentSourceId002\n     * @tc.desc       : testing sourceId for XComponent with normal value\n     * @tc.size       : MediumTest\n     * @tc.type       : Function\n     * @tc.level      : Level 2\n     */\n    it('testXComponentSourceId002', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testXComponentSourceId002()).assertEqual(0)\n      done()\n    })\n\n    /*\n     * @tc.number     : SUB_ARKUI_CAPI_XCOMPONENT_SOURCEID_0300\n     * @tc.name       : testXComponentSourceId003\n     * @tc.desc       : testing sourceId for XComponent with null value\n     * @tc.size       : MediumTest\n     * @tc.type       : Function\n     * @tc.level      : Level 2\n     */\n    it('testXComponentSourceId003', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testXComponentSourceId003()).assertEqual(0)\n      done()\n    })\n\n    /*\n     * @tc.number     : SUB_ARKUI_CAPI_XCOMPONENT_SOURCEID_0400\n     * @tc.name       : testXComponentSourceId004\n     * @tc.desc       : testing sourceId for XComponent with NULL\n     * @tc.size       : MediumTest\n     * @tc.type       : Function\n     * @tc.level      : Level 2\n     */\n    it('testXComponentSourceId004', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testXComponentSourceId004()).assertEqual(0)\n      done()\n    })\n    \n  })\n}\n", "id": "dc31a16d66e516c657ebed7f8083a6f32013f5ab6e77174a346ce749792d2a39", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 3.0, "confidence": 0.9, "rationale": "符合ArkTS生态，结构清晰，具备测试代码的学习价值。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2516, "completion_tokens": 62, "total_tokens": 2578, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 3,\n  \"confidence\": 0.9,\n  \"rationale\": \"符合ArkTS生态，结构清晰，具备测试代码的学习价值。\"\n}", "llm_formatted": "import { beforeEach, describe, expect, it, Level } from '@ohos/hypium';\nimport Utils from '../common/Utils';\nimport nativeFunc from 'libnativefunc.so'\n\nexport default function xComponentSourceIdTest() {\n\n  describe('XComponentSourceIdTest', () => {\n\n    beforeEach(async (done: Function) => {\n      await Utils.sleep(100);\n      done();\n    });\n\n    /*\n     * @tc.number     : SUB_ARKUI_CAPI_XCOMPONENT_SOURCEID_0100\n     * @tc.name       : testXComponentSourceId001\n     * @tc.desc       : testing sourceId for XComponent with normal value\n     * @tc.size       : MediumTest\n     * @tc.type       : Function\n     * @tc.level      : Level 1\n     */\n    it('testXComponentSourceId001', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testXComponentSourceId001()).assertEqual(0)\n      done()\n    })\n\n    /*\n     * @tc.number     : SUB_ARKUI_CAPI_XCOMPONENT_SOURCEID_0200\n     * @tc.name       : testXComponentSourceId002\n     * @tc.desc       : testing sourceId for XComponent with normal value\n     * @tc.size       : MediumTest\n     * @tc.type       : Function\n     * @tc.level      : Level 2\n     */\n    it('testXComponentSourceId002', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testXComponentSourceId002()).assertEqual(0)\n      done()\n    })\n\n    /*\n     * @tc.number     : SUB_ARKUI_CAPI_XCOMPONENT_SOURCEID_0300\n     * @tc.name       : testXComponentSourceId003\n     * @tc.desc       : testing sourceId for XComponent with null value\n     * @tc.size       : MediumTest\n     * @tc.type       : Function\n     * @tc.level      : Level 2\n     */\n    it('testXComponentSourceId003', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testXComponentSourceId003()).assertEqual(0)\n      done()\n    })\n\n    /*\n     * @tc.number     : SUB_ARKUI_CAPI_XCOMPONENT_SOURCEID_0400\n     * @tc.name       : testXComponentSourceId004\n     * @tc.desc       : testing sourceId for XComponent with NULL\n     * @tc.size       : MediumTest\n     * @tc.type       : Function\n     * @tc.level      : Level 2\n     */\n    it('testXComponentSourceId004', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testXComponentSourceId004()).assertEqual(0)\n      done()\n    })\n    \n  })\n}\n", "leaked": true, "text_tokens": 647, "split": "valid"}
{"path": "xts_acts~openharmony~1331/arkui/ace_c_arkui_test_api16/entry/src/ohosTest/ets/test/textInput/TextInputLetterSpacing.test.ets", "project_name": "xts_acts~openharmony~1331", "text": "import { beforeEach, describe, expect, it, Level } from '@ohos/hypium';\nimport Utils from '../common/Utils';\nimport { Driver, ON, PointerMatrix, Rect } from '@ohos.UiTest';\n\nexport default function TextInputLetterSpacing(){\n\n  describe('TextInputLetterSpacing', () => {\n    beforeEach(async (done: Function) => {\n      await Utils.sleep(100);\n      done();\n    });\n\n    /*\n     * @tc.number     : SUB_ARKUI_CAPI_CUSTOM_PRPPERTY_0100\n     * @tc.name       : TextInputLetterSpacing001\n     * @tc.desc       : The letterspacing property of the textInput component \n                          and the previewText callback interface\n     * @tc.size       : MediumTest\n     * @tc.type       : Function\n     * @tc.level      : Level 1\n     */\n\n    it('textInputLetterSpacing001', Level.LEVEL1, async (done: Function) => {\n      let PAGE_TAG = 'TextInputLetterSpacing';\n      await Utils.pushPage(`textInput/${PAGE_TAG}`);\n      console.info(\"[textInputLetterSpacing001] start succ\");\n      await Utils.sleep(500);\n      let driver = await Driver.create();\n      await Utils.sleep(500);\n\n      let textinput = await driver.findComponent(ON.id('textinput'));\n      await Utils.sleep(500);\n      await textinput.click();\n      await Utils.sleep(500);\n      await driver.triggerKey(2017);\n      await Utils.sleep(500);\n      await driver.triggerKey(2047);\n      await Utils.sleep(500);\n      await driver.triggerKey(2017);\n      await Utils.sleep(500);\n      await driver.triggerKey(2047);\n      await Utils.sleep(500);\n      await driver.triggerKey(2024);\n      await Utils.sleep(500);\n      await driver.triggerKey(2047);\n      await Utils.sleep(500);\n      let strJson2 = getInspectorByKey('text6');\n      await Utils.sleep(200);\n      let obj2: ESObject = JSON.parse(strJson2);\n      console.info(\"[textInputLetterSpacing001] component obj2 is: \" + JSON.stringify(obj2));\n      console.info(\"[textInputLetterSpacing001] content is: \" + JSON.stringify(obj2.$attrs.backgroundColor));\n      await Utils.sleep(500);\n      expect(obj2.$attrs.backgroundColor).assertEqual('#FFE31111');\n\n      done()\n    })\n  })\n}", "id": "6f7453e0f8e2f45d644369b94f34257d5f6f688df027e80a1335b4378e53e890", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 3.0, "confidence": 0.9, "rationale": "ArkTS语法规范，含生态调用与测试逻辑，具一定学习价值", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 1815, "completion_tokens": 69, "total_tokens": 1884, "raw_response": "```json\n{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 3,\n  \"confidence\": 0.9,\n  \"rationale\": \"ArkTS语法规范，含生态调用与测试逻辑，具一定学习价值\"\n}\n```", "llm_formatted": "import { beforeEach, describe, expect, it, Level } from '@ohos/hypium';\nimport Utils from '../common/Utils';\nimport { Driver, ON, PointerMatrix, Rect } from '@ohos.UiTest';\n\nexport default function TextInputLetterSpacing() {\n  describe('TextInputLetterSpacing', () => {\n    beforeEach(async (done: Function) => {\n      await Utils.sleep(100);\n      done();\n    });\n\n    it('textInputLetterSpacing001', Level.LEVEL1, async (done: Function) => {\n      let PAGE_TAG = 'TextInputLetterSpacing';\n      await Utils.pushPage(`textInput/${PAGE_TAG}`);\n      console.info(\"[textInputLetterSpacing001] start succ\");\n      await Utils.sleep(500);\n      let driver = await Driver.create();\n      await Utils.sleep(500);\n\n      let textinput = await driver.findComponent(ON.id('textinput'));\n      await Utils.sleep(500);\n      await textinput.click();\n      await Utils.sleep(500);\n      await driver.triggerKey(2017);\n      await Utils.sleep(500);\n      await driver.triggerKey(2047);\n      await Utils.sleep(500);\n      await driver.triggerKey(2017);\n      await Utils.sleep(500);\n      await driver.triggerKey(2047);\n      await Utils.sleep(500);\n      await driver.triggerKey(2024);\n      await Utils.sleep(500);\n      await driver.triggerKey(2047);\n      await Utils.sleep(500);\n      let strJson2 = getInspectorByKey('text6');\n      await Utils.sleep(200);\n      let obj2: ESObject = JSON.parse(strJson2);\n      console.info(\"[textInputLetterSpacing001] component obj2 is: \" + JSON.stringify(obj2));\n      console.info(\"[textInputLetterSpacing001] content is: \" + JSON.stringify(obj2.$attrs.backgroundColor));\n      await Utils.sleep(500);\n      expect(obj2.$attrs.backgroundColor).assertEqual('#FFE31111');\n\n      done();\n    });\n  });\n}", "leaked": true, "text_tokens": 547, "split": "valid"}
{"path": "ui-test~harmonyos_samples~524/entry/src/main/ets/pages/Pinch.ets", "project_name": "ui-test~harmonyos_samples~524", "text": "@Entry\n@Component\nstruct ScreenExample {\n  @State myscale: number = 1;\n\n  build() {\n    Column() {\n      Text(this.myscale.toString())\n      Image($r('app.media.icon'))\n        .objectFit(ImageFit.Auto)\n        .height(200)\n        .width(200)\n        .id(\"pinch_ima\")\n        .scale({ x: this.myscale, y: this.myscale, z: this.myscale })\n        .gesture(\n          PinchGesture()\n            .onActionStart((event: GestureEvent) => {\n              console.info('Pinch start');\n            })\n            .onActionUpdate((event: GestureEvent) => {\n              this.myscale = event.scale;\n            })\n            .onActionEnd(() => {\n              console.info('Pinch end');\n            })\n        )\n    }\n    .width('100%')\n    .height('100%')\n  }\n}", "id": "2d1325608b98e4bcc90204964e69c82bfd637110cef3dd0e283bbdee8526bde4", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "ArkTS语法规范，生态耦合自然，具备良好可迁移性与学习价值", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 1465, "completion_tokens": 67, "total_tokens": 1532, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"ArkTS语法规范，生态耦合自然，具备良好可迁移性与学习价值\"\n}", "llm_formatted": "@Entry\n@Component\nstruct ScreenExample {\n  @State myscale: number = 1;\n\n  build() {\n    Column() {\n      Text(this.myscale.toString())\n      Image($r('app.media.icon'))\n        .objectFit(ImageFit.Auto)\n        .height(200)\n        .width(200)\n        .id(\"pinch_ima\")\n        .scale({ x: this.myscale, y: this.myscale, z: this.myscale })\n        .gesture(\n          PinchGesture()\n            .onActionStart((event: GestureEvent) => {\n              console.info('Pinch start');\n            })\n            .onActionUpdate((event: GestureEvent) => {\n              this.myscale = event.scale;\n            })\n            .onActionEnd(() => {\n              console.info('Pinch end');\n            })\n        )\n    }\n    .width('100%')\n    .height('100%')\n  }\n}", "leaked": true, "text_tokens": 197, "split": "valid"}
{"path": "DocsSample_Graphics~harmonyos_samples~1310/NdkDrawingApiSamples/entry/src/main/ets/drawing/pages/PixelMapDrawing.ets", "project_name": "DocsSample_Graphics~harmonyos_samples~1310", "text": "import XComponentContext from '../../interface/XComponentContext';\nimport { image } from '@kit.ImageKit';\nimport { resourceManager } from '@kit.LocalizationKit';\nimport { BusinessError } from '@kit.BasicServicesKit';\n\n@Entry\n@Component\nstruct PixelMapDrawing {\n  private xComponentContext: XComponentContext | undefined = undefined;\n  private pMap: image.PixelMap | undefined = undefined;\n  aboutToAppear() {\n    const context: Context = getContext(this);\n    const resourceMgr: resourceManager.ResourceManager = context.resourceManager;\n    resourceMgr.getRawFileContent('startIcon.png').then((fileData: Uint8Array) => {\n      console.log('Succeeded in getting RawFileContent');\n      const buffer = fileData.buffer.slice(0);\n      const imageSource: image.ImageSource = image.createImageSource(buffer);\n      imageSource.createPixelMap().then((pMap: image.PixelMap) => {\n        this.pMap = pMap;\n      }).catch((err: BusinessError) => {\n        console.error('Failed to creating PixelMap');\n      });\n    }).catch((err: BusinessError) => {\n      console.error('Failed to get RawFileContent');\n    });\n  }\n\n  build() {\n    Column() {\n      XComponent({ id: 'basicEffectXComponent', type: XComponentType.SURFACE, libraryname: 'entry' })\n        .onLoad((xComponentContext) => {\n          this.xComponentContext = xComponentContext as XComponentContext;\n        })\n        .backgroundColor(Color.White)\n        .width('100%')\n        .height('70%')\n      Flex({\n        direction: FlexDirection.Row,\n        wrap: FlexWrap.Wrap,\n        justifyContent: FlexAlign.Start,\n        alignItems: ItemAlign.Start\n      }) {\n        Button('LocalPixelMap')\n          .onClick((): void => {\n            if (this.xComponentContext) {\n              this.xComponentContext.drawImage('CanvasGet', 'LocalPixelMap', this.pMap);\n            }\n          })\n          .margin({ top: 10, bottom: 10, left: 10, right: 10 })\n        Button('CustomPixelMap')\n          .onClick((): void => {\n            if (this.xComponentContext) {\n              this.xComponentContext.draw('CanvasGet', 'CustomPixelMap');\n            }\n          })\n          .margin({ top: 10, bottom: 10, left: 10, right: 10 })\n      }\n      .width('100%')\n      .height('30%')\n    }\n  }\n}", "id": "cd4ad20590b8d82038899b6fd1fedffaa1da7ed7acfc7136029f601bad0f0a26", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "结构完整，生态耦合自然，具备实际业务逻辑与ArkTS特性。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2404, "completion_tokens": 66, "total_tokens": 2470, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"结构完整，生态耦合自然，具备实际业务逻辑与ArkTS特性。\"\n}", "llm_formatted": "import XComponentContext from '../../interface/XComponentContext';\nimport { image } from '@kit.ImageKit';\nimport { resourceManager } from '@kit.LocalizationKit';\nimport { BusinessError } from '@kit.BasicServicesKit';\n\n@Entry\n@Component\nstruct PixelMapDrawing {\n  private xComponentContext: XComponentContext | undefined = undefined;\n  private pMap: image.PixelMap | undefined = undefined;\n  aboutToAppear() {\n    const context: Context = getContext(this);\n    const resourceMgr: resourceManager.ResourceManager = context.resourceManager;\n    resourceMgr.getRawFileContent('startIcon.png').then((fileData: Uint8Array) => {\n      console.log('Succeeded in getting RawFileContent');\n      const buffer = fileData.buffer.slice(0);\n      const imageSource: image.ImageSource = image.createImageSource(buffer);\n      imageSource.createPixelMap().then((pMap: image.PixelMap) => {\n        this.pMap = pMap;\n      }).catch((err: BusinessError) => {\n        console.error('Failed to creating PixelMap');\n      });\n    }).catch((err: BusinessError) => {\n      console.error('Failed to get RawFileContent');\n    });\n  }\n\n  build() {\n    Column() {\n      XComponent({ id: 'basicEffectXComponent', type: XComponentType.SURFACE, libraryname: 'entry' })\n        .onLoad((xComponentContext) => {\n          this.xComponentContext = xComponentContext as XComponentContext;\n        })\n        .backgroundColor(Color.White)\n        .width('100%')\n        .height('70%')\n      Flex({\n        direction: FlexDirection.Row,\n        wrap: FlexWrap.Wrap,\n        justifyContent: FlexAlign.Start,\n        alignItems: ItemAlign.Start\n      }) {\n        Button('LocalPixelMap')\n          .onClick((): void => {\n            if (this.xComponentContext) {\n              this.xComponentContext.drawImage('CanvasGet', 'LocalPixelMap', this.pMap);\n            }\n          })\n          .margin({ top: 10, bottom: 10, left: 10, right: 10 })\n        Button('CustomPixelMap')\n          .onClick((): void => {\n            if (this.xComponentContext) {\n              this.xComponentContext.draw('CanvasGet', 'CustomPixelMap');\n            }\n          })\n          .margin({ top: 10, bottom: 10, left: 10, right: 10 })\n      }\n      .width('100%')\n      .height('30%')\n    }\n  }\n}", "leaked": true, "text_tokens": 535, "split": "valid"}
{"path": "HMOS_world_simple_api9~HexWarrior6~2478/features/quickstart/src/main/ets/view/Banner.ets", "project_name": "HMOS_world_simple_api9~HexWarrior6~2478", "text": "import { BannerClass } from '../model/BannerClass';\nimport { bufferToString } from '../util/BufferUtil';\n\n\n\n@Preview\n@Component\nexport struct Banner {\n  @State bannerList: BannerClass[] = [];\n  str1:string = 'app.media.banner_pic0'\n\n  aboutToAppear(): void {\n    this.getBannerDataFromJSON();\n  }\n\n  getBannerDataFromJSON() {\n    getContext(this).resourceManager.getRawFileContent('BannerData.json').then(value => {\n      this.bannerList = JSON.parse(bufferToString(value.buffer)) as BannerClass[];\n    })\n  }\n\n  build() {\n    Swiper() {\n      ForEach(this.bannerList, (item: BannerClass, index: number) => {\n        Image($rawfile(item.imageSrc))\n          .objectFit(ImageFit.Cover)\n          .width('100%')\n          .borderRadius(16)\n          .padding({ top: 11, left: 16, right: 16 })\n      }, (item: BannerClass, index: number) => item.id)\n    }\n    .autoPlay(true)\n    .loop(true)\n  }\n}", "id": "b217672f06a61a88d4b54899722f566c0c6d5aa4140353c2c3bd5c9f5002e29e", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "ArkTS语法规范，生态耦合自然，结构清晰，具学习价值", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 1504, "completion_tokens": 65, "total_tokens": 1569, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"ArkTS语法规范，生态耦合自然，结构清晰，具学习价值\"\n}", "llm_formatted": "import { BannerClass } from '../model/BannerClass';\nimport { bufferToString } from '../util/BufferUtil';\n\n@Preview\n@Component\nexport struct Banner {\n  @State bannerList: BannerClass[] = [];\n  str1: string = 'app.media.banner_pic0';\n\n  aboutToAppear(): void {\n    this.getBannerDataFromJSON();\n  }\n\n  getBannerDataFromJSON() {\n    getContext(this).resourceManager.getRawFileContent('BannerData.json').then(value => {\n      this.bannerList = JSON.parse(bufferToString(value.buffer)) as BannerClass[];\n    });\n  }\n\n  build() {\n    Swiper() {\n      ForEach(this.bannerList, (item: BannerClass, index: number) => {\n        Image($rawfile(item.imageSrc))\n          .objectFit(ImageFit.Cover)\n          .width('100%')\n          .borderRadius(16)\n          .padding({ top: 11, left: 16, right: 16 });\n      }, (item: BannerClass, index: number) => item.id);\n    }\n    .autoPlay(true)\n    .loop(true);\n  }\n}", "leaked": true, "text_tokens": 236, "split": "valid"}
{"path": "arkui_ace_engine~OpenHarmony~1897/examples/Picker/Picker/entry/src/main/ets/pages/calendarpicker_dialog/CalendarPickerDialogExample004.ets", "project_name": "arkui_ace_engine~OpenHarmony~1897", "text": "@Entry\n@Component\nstruct CalendarPickerDialogExample {\n  private selectedDate: Date = new Date('2024-04-23');\n\n  build() {\n    Column() {\n      Button(\"Show CalendarPicker Dialog\")\n        .margin(20)\n        .onClick(() => {\n          console.info(\"CalendarDialog.show\");\n          CalendarPickerDialog.show({\n            selected: this.selectedDate,\n            hintRadius: 1,\n            onAccept: (value) => {\n              this.selectedDate = value;\n              console.info(\"calendar onAccept:\" + JSON.stringify(value));\n            }\n          });\n        })\n    }.width('100%')\n  }\n}\n", "id": "8bf72a6224aef1edd8efeeccb9d9e1ff6b1da30ea96cc7d1fd2d2aaf8ba8ba74", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 3.0, "confidence": 0.9, "rationale": "ArkTS语法规范，生态耦合自然，具实用教学价值", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 1404, "completion_tokens": 66, "total_tokens": 1470, "raw_response": "```json\n{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 3,\n  \"confidence\": 0.9,\n  \"rationale\": \"ArkTS语法规范，生态耦合自然，具实用教学价值\"\n}\n```", "llm_formatted": "@Entry\n@Component\nstruct CalendarPickerDialogExample {\n  private selectedDate: Date = new Date('2024-04-23');\n\n  build() {\n    Column() {\n      Button(\"Show CalendarPicker Dialog\")\n        .margin(20)\n        .onClick(() => {\n          console.info(\"CalendarDialog.show\");\n          CalendarPickerDialog.show({\n            selected: this.selectedDate,\n            hintRadius: 1,\n            onAccept: (value) => {\n              this.selectedDate = value;\n              console.info(\"calendar onAccept:\" + JSON.stringify(value));\n            }\n          });\n        })\n    }.width('100%')\n  }\n}\n", "leaked": true, "text_tokens": 136, "split": "valid"}
{"path": "multi-nav-bar~harmonyos_samples~278/entry/src/main/ets/view/SideBarView.ets", "project_name": "multi-nav-bar~harmonyos_samples~278", "text": "import { TabDataModel } from '../model/TabDataModel';\nimport { TabViewModel } from '../viewmodel/TabViewModel';\n\n@Component\nexport struct SideBarView {\n  @Link firstLevelIndex: number;\n  @Link secondLevelIndex: number;\n  @Link tabViewModel: TabViewModel;\n  @Link tabData: TabDataModel;\n  @State isShow: boolean = true;\n\n  build() {\n    // [Start side_bar_view]\n    // entry/src/main/ets/view/SideBarView.ets\n    Column() {\n      // [StartExclude side_bar_view]\n      Row({ space: 8 }) {\n        Image($r('app.media.startIcon'))\n          .height(24)\n        Text($r('app.string.EntryAbility_label'))\n          .fontSize('16fp')\n          .fontWeight(FontWeight.Medium)\n      }\n      .padding({ left: 8 })\n      .height(56)\n      // [EndExclude side_bar_view]\n      Column({ space: 2 }) {\n        ForEach(this.tabData.getFirstList(), (item: string, index: number) => {\n          Column() {\n            Row() {\n              Row({ space: 8 }) {\n                // [StartExclude side_bar_view]\n                Image(index === this.firstLevelIndex ? $r('app.media.ic_tabs_mine_selected') :\n                  $r('app.media.ic_tabs_mine'))\n                  .width(24)\n                  .height(24)\n                // [EndExclude side_bar_view]\n                Text(item)\n                  .fontSize('16fp')\n                  .fontWeight(index === this.firstLevelIndex ? FontWeight.Bold : FontWeight.Medium)\n              }\n\n              if (this.tabData.getSecondList(item).length > 0) {\n                Image((index === this.firstLevelIndex && this.isShow) ? $r('app.media.chevron_up') : $r('app.media.arrow_down'))\n                  .width(20)\n                  .height(20)\n              }\n            }\n            // [StartExclude side_bar_view]\n            .justifyContent(FlexAlign.SpaceBetween)\n            .width('100%')\n            .height(40)\n            .padding({\n              left: 8\n            })\n            // [EndExclude side_bar_view]\n            Column({ space: 2 }) {\n              ForEach(this.tabData.getSecondList(item), (item: string, index: number) => {\n                Row() {\n                  Text(item)\n                    // [StartExclude side_bar_view]\n                    .fontSize('16fp')\n                    .fontWeight(index === this.secondLevelIndex ? FontWeight.Bold : FontWeight.Medium)\n                    .margin({ left: 40 })\n                  // [EndExclude side_bar_view]\n                }\n                // [StartExclude side_bar_view]\n                .width('100%')\n                .height(40)\n                .borderRadius(8)\n                .backgroundColor(index === this.secondLevelIndex ? '#1A0A59F7' : '#00FFFFFF')\n                // [EndExclude side_bar_view]\n                .onClick(() => {\n                  this.secondLevelIndex = index;\n                })\n              }, (item: string, index: number) => index + item)\n            }\n            .visibility((index === this.firstLevelIndex && this.isShow) ? Visibility.Visible : Visibility.None)\n          }\n          .alignItems(HorizontalAlign.Start)\n          .onClick(() => {\n            if (this.firstLevelIndex === index) {\n              this.isShow = !this.isShow;\n            }\n            this.firstLevelIndex = index;\n          })\n        }, (item: string, index: number) => index + item)\n      }\n      .alignItems(HorizontalAlign.Start)\n    }\n    // [End side_bar_view]\n    // [StartExclude side_bar_view]\n    .alignItems(HorizontalAlign.Start)\n    .backgroundColor('#0D000000')\n    .padding({\n      left: 16,\n      right: 16\n    })\n    .height('100%')\n    .width('100%')\n  }\n}\n// [EndExclude side_bar_view]\n", "id": "1e2b1b602453153bc3e4e01ffb0a7bdc2c4f7f8d2cb2c156c832af00e5e64400", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "结构完整，符合ArkTS/ArkUI规范，具备良好可迁移性与学习价值。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2721, "completion_tokens": 69, "total_tokens": 2790, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"结构完整，符合ArkTS/ArkUI规范，具备良好可迁移性与学习价值。\"\n}", "llm_formatted": "import { TabDataModel } from '../model/TabDataModel';\nimport { TabViewModel } from '../viewmodel/TabViewModel';\n\n@Component\nexport struct SideBarView {\n  @Link firstLevelIndex: number;\n  @Link secondLevelIndex: number;\n  @Link tabViewModel: TabViewModel;\n  @Link tabData: TabDataModel;\n  @State isShow: boolean = true;\n\n  build() {\n    // [Start side_bar_view]\n    // entry/src/main/ets/view/SideBarView.ets\n    Column() {\n      // [StartExclude side_bar_view]\n      Row({ space: 8 }) {\n        Image($r('app.media.startIcon'))\n          .height(24)\n        Text($r('app.string.EntryAbility_label'))\n          .fontSize('16fp')\n          .fontWeight(FontWeight.Medium)\n      }\n      .padding({ left: 8 })\n      .height(56)\n      // [EndExclude side_bar_view]\n      Column({ space: 2 }) {\n        ForEach(this.tabData.getFirstList(), (item: string, index: number) => {\n          Column() {\n            Row() {\n              Row({ space: 8 }) {\n                // [StartExclude side_bar_view]\n                Image(index === this.firstLevelIndex ? $r('app.media.ic_tabs_mine_selected') :\n                  $r('app.media.ic_tabs_mine'))\n                  .width(24)\n                  .height(24)\n                // [EndExclude side_bar_view]\n                Text(item)\n                  .fontSize('16fp')\n                  .fontWeight(index === this.firstLevelIndex ? FontWeight.Bold : FontWeight.Medium)\n              }\n\n              if (this.tabData.getSecondList(item).length > 0) {\n                Image((index === this.firstLevelIndex && this.isShow) ? $r('app.media.chevron_up') : $r('app.media.arrow_down'))\n                  .width(20)\n                  .height(20)\n              }\n            }\n            // [StartExclude side_bar_view]\n            .justifyContent(FlexAlign.SpaceBetween)\n            .width('100%')\n            .height(40)\n            .padding({\n              left: 8\n            })\n            // [EndExclude side_bar_view]\n            Column({ space: 2 }) {\n              ForEach(this.tabData.getSecondList(item), (item: string, index: number) => {\n                Row() {\n                  Text(item)\n                    // [StartExclude side_bar_view]\n                    .fontSize('16fp')\n                    .fontWeight(index === this.secondLevelIndex ? FontWeight.Bold : FontWeight.Medium)\n                    .margin({ left: 40 })\n                  // [EndExclude side_bar_view]\n                }\n                // [StartExclude side_bar_view]\n                .width('100%')\n                .height(40)\n                .borderRadius(8)\n                .backgroundColor(index === this.secondLevelIndex ? '#1A0A59F7' : '#00FFFFFF')\n                // [EndExclude side_bar_view]\n                .onClick(() => {\n                  this.secondLevelIndex = index;\n                })\n              }, (item: string, index: number) => index + item)\n            }\n            .visibility((index === this.firstLevelIndex && this.isShow) ? Visibility.Visible : Visibility.None)\n          }\n          .alignItems(HorizontalAlign.Start)\n          .onClick(() => {\n            if (this.firstLevelIndex === index) {\n              this.isShow = !this.isShow;\n            }\n            this.firstLevelIndex = index;\n          })\n        }, (item: string, index: number) => index + item)\n      }\n      .alignItems(HorizontalAlign.Start)\n    }\n    // [End side_bar_view]\n    // [StartExclude side_bar_view]\n    .alignItems(HorizontalAlign.Start)\n    .backgroundColor('#0D000000')\n    .padding({\n      left: 16,\n      right: 16\n    })\n    .height('100%')\n    .width('100%')\n  }\n}\n// [EndExclude side_bar_view]\n", "leaked": true, "text_tokens": 852, "split": "valid"}
{"path": "applications_permission_manager~OpenHarmony~815/permissionmanager/src/main/ets/GlobalExtAbility/GlobalExtAbility.ets", "project_name": "applications_permission_manager~OpenHarmony~815", "text": "import extension from '@ohos.app.ability.ServiceExtensionAbility';\nimport window from '@ohos.window';\nimport display from '@ohos.display';\nimport { Want } from '@kit.AbilityKit';\nimport { Log } from '../common/utils/utils';\nimport { GlobalDialogModel } from './GlobalDialogModel';\n\nlet globalDialogModel: GlobalDialogModel = new GlobalDialogModel();\nlet globalWindow: window.Window | null;\n\nexport default class GlobalExtensionAbility extends extension {\n  /**\n  * Lifecycle function, called back when a service extension is started for initialization.\n  */\n  onCreate(want: Want): void {\n    Log.info('ServiceExtensionAbility onCreate, ability name is ' + want.abilityName);\n\n    if (!want.parameters) {\n      return;\n    }\n    let resource: string = want.parameters['ohos.sensitive.resource'] as string ?? '';\n\n    if (!globalDialogModel.permissionCheck()) {\n      this.context?.terminateSelf();\n      return;\n    }\n\n    if (!globalDialogModel.statusCheck(this.context, resource)) {\n      this.context?.terminateSelf();\n      return;\n    }\n\n    try {\n      let dis = display.getDefaultDisplaySync();\n      let navigationBarRect: display.Rect = {\n        left: 0,\n        top: 0,\n        width: dis.width,\n        height: dis.height\n      };\n      Log.info('want: ' + JSON.stringify(want));\n      let property: Record<string, Object> = { 'globalState': resource };\n      let storage: LocalStorage = new LocalStorage(property);\n      globalDialogModel.createWindow(this.context, navigationBarRect, storage).then(window => {\n        globalWindow = window;\n      })\n    } catch (exception) {\n      Log.error('Failed to obtain the default display object. Code: ' + JSON.stringify(exception));\n    };\n  }\n\n  /**\n  * Lifecycle function, called back when a service extension is started or recall.\n  */\n  onRequest(want: Want, startId: number): void {\n    Log.info('ServiceExtensionAbility onRequest. start id is ' + startId);\n  }\n\n  /**\n  * Lifecycle function, called back before a service extension is destroyed.\n  */\n  onDestroy(): void {\n    Log.info('ServiceExtensionAbility onDestroy.');\n    globalWindow?.destroyWindow();\n  }\n\n};", "id": "d24fe4c92c950f6ed5b922203f10ee1da943cd4c9ec69f459534e03a169a680c", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "生态耦合规范，逻辑完整，具备实用性和学习价值", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 1732, "completion_tokens": 66, "total_tokens": 1798, "raw_response": "```json\n{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"生态耦合规范，逻辑完整，具备实用性和学习价值\"\n}\n```", "llm_formatted": "import extension from '@ohos.app.ability.ServiceExtensionAbility';\nimport window from '@ohos.window';\nimport display from '@ohos.display';\nimport { Want } from '@kit.AbilityKit';\nimport { Log } from '../common/utils/utils';\nimport { GlobalDialogModel } from './GlobalDialogModel';\n\nlet globalDialogModel: GlobalDialogModel = new GlobalDialogModel();\nlet globalWindow: window.Window | null;\n\nexport default class GlobalExtensionAbility extends extension {\n  /**\n  * Lifecycle function, called back when a service extension is started for initialization.\n  */\n  onCreate(want: Want): void {\n    Log.info('ServiceExtensionAbility onCreate, ability name is ' + want.abilityName);\n\n    if (!want.parameters) {\n      return;\n    }\n    let resource: string = want.parameters['ohos.sensitive.resource'] as string ?? '';\n\n    if (!globalDialogModel.permissionCheck()) {\n      this.context?.terminateSelf();\n      return;\n    }\n\n    if (!globalDialogModel.statusCheck(this.context, resource)) {\n      this.context?.terminateSelf();\n      return;\n    }\n\n    try {\n      let dis = display.getDefaultDisplaySync();\n      let navigationBarRect: display.Rect = {\n        left: 0,\n        top: 0,\n        width: dis.width,\n        height: dis.height\n      };\n      Log.info('want: ' + JSON.stringify(want));\n      let property: Record<string, Object> = { 'globalState': resource };\n      let storage: LocalStorage = new LocalStorage(property);\n      globalDialogModel.createWindow(this.context, navigationBarRect, storage).then(window => {\n        globalWindow = window;\n      })\n    } catch (exception) {\n      Log.error('Failed to obtain the default display object. Code: ' + JSON.stringify(exception));\n    };\n  }\n\n  /**\n  * Lifecycle function, called back when a service extension is started or recall.\n  */\n  onRequest(want: Want, startId: number): void {\n    Log.info('ServiceExtensionAbility onRequest. start id is ' + startId);\n  }\n\n  /**\n  * Lifecycle function, called back before a service extension is destroyed.\n  */\n  onDestroy(): void {\n    Log.info('ServiceExtensionAbility onDestroy.');\n    globalWindow?.destroyWindow();\n  }\n\n};", "leaked": true, "text_tokens": 464, "split": "valid"}
{"path": "hmosworld~harmonyos_samples~1320/HMOSWorld/Application/features/learning/src/main/ets/service/LearningTrigger.ets", "project_name": "hmosworld~harmonyos_samples~1320", "text": "/*\n * Cloud function trigger.\n */\nexport enum LearningTrigger {\n  // Learning Modules - Learning Path\n  LEARNING_PATHS = 'learning-path',\n  // Learning Module - Update Learning Path\n  LEARNING_MODIFY = 'learning-modify',\n  LEARNING_COMMENTS = 'learning-comments'\n}", "id": "009241a3313597e68fa3e3837a139899b95e56878ab8a9c168b51913c2711f16", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 3.0, "confidence": 0.9, "rationale": "枚举定义清晰，符合 TS/ArkTS 规范，具备一定学习价值", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 1329, "completion_tokens": 70, "total_tokens": 1399, "raw_response": "```json\n{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 3,\n  \"confidence\": 0.9,\n  \"rationale\": \"枚举定义清晰，符合 TS/ArkTS 规范，具备一定学习价值\"\n}\n```", "llm_formatted": "export enum LearningTrigger {\n  LEARNING_PATHS = 'learning-path',\n  LEARNING_MODIFY = 'learning-modify',\n  LEARNING_COMMENTS = 'learning-comments'\n}", "leaked": true, "text_tokens": 61, "split": "valid"}
{"path": "video-show~harmonyos_samples~458/VideoComponent/src/main/ets/components/mock/LiveData.ets", "project_name": "video-show~harmonyos_samples~458", "text": "import { ILiveInfoDataModel } from '../model/LiveDataModel';\n\nexport const LiveData: Array<ILiveInfoDataModel> = [\n  {\n    uri: $rawfile('video1.mp4'),\n    name: $r('app.string.first_author'),\n    peopleNum: '520'\n  },\n\n  {\n    uri: $rawfile('video2.mp4'),\n    name: $r('app.string.two_author'),\n    peopleNum: '360'\n  },\n  {\n    uri: $rawfile('video3.mp4'),\n    name: $r('app.string.three_author'),\n    peopleNum: '777'\n  }\n];", "id": "d6280f5471d63a220c246d24c804cf8765ff292d67936b0549e2dbd6f08a81c5", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 3.0, "confidence": 0.95, "rationale": "符合ArkTS生态，结构清晰，具有实际应用价值。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2009, "completion_tokens": 62, "total_tokens": 2071, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 3,\n  \"confidence\": 0.95,\n  \"rationale\": \"符合ArkTS生态，结构清晰，具有实际应用价值。\"\n}", "llm_formatted": "import { ILiveInfoDataModel } from '../model/LiveDataModel';\n\nexport const LiveData: Array<ILiveInfoDataModel> = [\n  {\n    uri: $rawfile('video1.mp4'),\n    name: $r('app.string.first_author'),\n    peopleNum: '520'\n  },\n  {\n    uri: $rawfile('video2.mp4'),\n    name: $r('app.string.two_author'),\n    peopleNum: '360'\n  },\n  {\n    uri: $rawfile('video3.mp4'),\n    name: $r('app.string.three_author'),\n    peopleNum: '777'\n  }\n];", "leaked": true, "text_tokens": 140, "split": "valid"}
{"path": "xts_acts~openharmony~1331/arkui/ace_c_arkui_test/entry/src/ohosTest/ets/test/textarea/TextAreaPaddingTest.ets", "project_name": "xts_acts~openharmony~1331", "text": "import { expect, describe, it, afterEach, Level } from '@ohos/hypium';\nimport Utils from '../common/Utils';\nimport nativeFunc from 'libnativefunc.so'\n\nexport default function textAreaPaddingTest() {\n\n  describe('TextAreaPaddingTest', () => {\n\n    afterEach(async (done: Function) => {\n      await Utils.sleep(100);\n      done();\n    })\n\n    /*\n     * @tc.number: SUB_ARKUI_CAPI_TEXTAREA_PADDING_0100\n     * @tc.name: testTextAreaPadding001\n     * @tc.desc: testing padding for textArea with single value 16vp\n     * @tc.size: MediumTest\n     * @tc.type: Function\n     * @tc.level: Level 1\n     */\n    it('testTextAreaPadding001', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testTextAreaPadding001()).assertEqual(0)\n      done();\n    });\n\n    /*\n     * @tc.number: SUB_ARKUI_CAPI_TEXTAREA_PADDING_0200\n     * @tc.name: testTextAreaPadding002\n     * @tc.desc: testing padding for textArea with overall value array 8,16,10,20(vp)\n     * @tc.size: MediumTest\n     * @tc.type: Function\n     * @tc.level: Level 1\n     */\n    it('testTextAreaPadding002', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testTextAreaPadding002()).assertEqual(0)\n      done();\n    });\n  })\n}\n", "id": "0f958bc25601a9ad97f5658e1b17200ad8d76ac4a2dafccecb6906f2a3b82000", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 3.0, "confidence": 0.95, "rationale": "符合ArkTS生态，结构清晰，具备测试用例典型特征，有学习价值。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2220, "completion_tokens": 68, "total_tokens": 2288, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 3,\n  \"confidence\": 0.95,\n  \"rationale\": \"符合ArkTS生态，结构清晰，具备测试用例典型特征，有学习价值。\"\n}", "llm_formatted": "import { expect, describe, it, afterEach, Level } from '@ohos/hypium';\nimport Utils from '../common/Utils';\nimport nativeFunc from 'libnativefunc.so'\n\nexport default function textAreaPaddingTest() {\n\n  describe('TextAreaPaddingTest', () => {\n\n    afterEach(async (done: Function) => {\n      await Utils.sleep(100);\n      done();\n    })\n\n    /*\n     * @tc.number: SUB_ARKUI_CAPI_TEXTAREA_PADDING_0100\n     * @tc.name: testTextAreaPadding001\n     * @tc.desc: testing padding for textArea with single value 16vp\n     * @tc.size: MediumTest\n     * @tc.type: Function\n     * @tc.level: Level 1\n     */\n    it('testTextAreaPadding001', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testTextAreaPadding001()).assertEqual(0)\n      done();\n    });\n\n    /*\n     * @tc.number: SUB_ARKUI_CAPI_TEXTAREA_PADDING_0200\n     * @tc.name: testTextAreaPadding002\n     * @tc.desc: testing padding for textArea with overall value array 8,16,10,20(vp)\n     * @tc.size: MediumTest\n     * @tc.type: Function\n     * @tc.level: Level 1\n     */\n    it('testTextAreaPadding002', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testTextAreaPadding002()).assertEqual(0)\n      done();\n    });\n  })\n}\n", "leaked": true, "text_tokens": 351, "split": "valid"}
{"path": "xts_acts~openharmony~1331/arkui/ace_c_arkui_test/entry/src/ohosTest/ets/test/textinput/TextInputOnFocusTest.test.ets", "project_name": "xts_acts~openharmony~1331", "text": "import { beforeAll, describe, expect, it, Level } from '@ohos/hypium';\nimport Utils from '../common/Utils';\n\nexport default function textInputOnFocusTest() {\n\n  describe('TextInputOnFocusTest', () => {\n\n    let PAGE_TAG = 'TextInputOnFocusTest';\n\n    beforeAll(async (done: Function) => {\n      await Utils.pushPage(`textinput/${PAGE_TAG}`, done);\n    });\n\n\n    /*\n    * @tc.number     : SUB_ARKUI_CAPI_TEXTINPUT_ONFOCUS_0100\n    * @tc.name       : testTextInputOnFocus001\n    * @tc.desc       : test onFocus event callback\n    * @tc.size       : MediumTest\n    * @tc.type       : Function\n    * @tc.level      : Level 1\n    */\n    it('testTextInputOnFocus001', Level.LEVEL1, async (done: Function) => {\n      focusControl.requestFocus('OnFocusTestTextInputCompare')\n      await Utils.sleep(2000)\n      focusControl.requestFocus('OnFocusTestTextInput')\n      await Utils.sleep(2000)\n      expect(Utils.getComponentInfoByKey('OnFocusTestTextInput').$attrs.backgroundColor).assertEqual('#FF00FF00')\n      done()\n    })\n\n    /*\n    * @tc.number     : SUB_ARKUI_CAPI_TEXTINPUT_ONFOCUS_0200\n    * @tc.name       : testTextInputOnFocus002\n    * @tc.desc       : test onFocus event not callback\n    * @tc.size       : MediumTest\n    * @tc.type       : Function\n    * @tc.level      : Level 1\n    */\n    it('testTextInputOnFocus002', Level.LEVEL1, async (done: Function) => {\n      focusControl.requestFocus('OnFocusTestTextInput')\n      await Utils.sleep(2000)\n      focusControl.requestFocus('OnFocusTestTextInputDisable')\n      await Utils.sleep(2000)\n      expect(Utils.getComponentInfoByKey('OnFocusTestTextInputDisable').$attrs.backgroundColor).assertEqual('#FFFF0000')\n      done()\n    })\n\n  })\n}\n", "id": "1330c75b61b03e1a617132286264077dc6e0fedf8a5d07761b14e664b549c6ed", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 3.0, "confidence": 0.95, "rationale": "符合ArkTS生态，结构清晰，含测试用例与实际业务逻辑，具备学习价值。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2323, "completion_tokens": 70, "total_tokens": 2393, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 3,\n  \"confidence\": 0.95,\n  \"rationale\": \"符合ArkTS生态，结构清晰，含测试用例与实际业务逻辑，具备学习价值。\"\n}", "llm_formatted": "import { beforeAll, describe, expect, it, Level } from '@ohos/hypium';\nimport Utils from '../common/Utils';\n\nexport default function textInputOnFocusTest() {\n\n  describe('TextInputOnFocusTest', () => {\n\n    let PAGE_TAG = 'TextInputOnFocusTest';\n\n    beforeAll(async (done: Function) => {\n      await Utils.pushPage(`textinput/${PAGE_TAG}`, done);\n    });\n\n\n    /*\n    * @tc.number     : SUB_ARKUI_CAPI_TEXTINPUT_ONFOCUS_0100\n    * @tc.name       : testTextInputOnFocus001\n    * @tc.desc       : test onFocus event callback\n    * @tc.size       : MediumTest\n    * @tc.type       : Function\n    * @tc.level      : Level 1\n    */\n    it('testTextInputOnFocus001', Level.LEVEL1, async (done: Function) => {\n      focusControl.requestFocus('OnFocusTestTextInputCompare')\n      await Utils.sleep(2000)\n      focusControl.requestFocus('OnFocusTestTextInput')\n      await Utils.sleep(2000)\n      expect(Utils.getComponentInfoByKey('OnFocusTestTextInput').$attrs.backgroundColor).assertEqual('#FF00FF00')\n      done()\n    })\n\n    /*\n    * @tc.number     : SUB_ARKUI_CAPI_TEXTINPUT_ONFOCUS_0200\n    * @tc.name       : testTextInputOnFocus002\n    * @tc.desc       : test onFocus event not callback\n    * @tc.size       : MediumTest\n    * @tc.type       : Function\n    * @tc.level      : Level 1\n    */\n    it('testTextInputOnFocus002', Level.LEVEL1, async (done: Function) => {\n      focusControl.requestFocus('OnFocusTestTextInput')\n      await Utils.sleep(2000)\n      focusControl.requestFocus('OnFocusTestTextInputDisable')\n      await Utils.sleep(2000)\n      expect(Utils.getComponentInfoByKey('OnFocusTestTextInputDisable').$attrs.backgroundColor).assertEqual('#FFFF0000')\n      done()\n    })\n\n  })\n}\n", "leaked": true, "text_tokens": 454, "split": "valid"}
{"path": "privacy-radar-public~Chaos~2061/ohos-picker/entry/src/main/ets/widget/ToolBar.ets", "project_name": "privacy-radar-public~Chaos~2061", "text": "import App from '../app/App'\nimport { Constants } from '../util/Constants'\nimport { lpx2fp } from '../util/DesignShow'\n\n@Preview\n@Component\nexport struct ToolBar {\n  @State title?: string = ''\n  @State titleFontColor?: Resource = $r('app.color.color_333333')\n  @State titleBackgroundColor?: Resource = $r('app.color.white')\n  @State titleBackIcon?: Resource | null = $r('app.media.ic_back')\n  @State titleActionIcon?: Resource = $r('app.color.transparent')\n  @State titleBackEnable: boolean = true\n  @State shadowColor?: Resource = $r('app.color.color_1400001E')\n  titleActionClick: () => void = () => {\n  }\n\n  build() {\n    Row() {\n      if (this.titleBackEnable) {\n        Image(this.titleBackIcon)\n          .width($r('app.string.lpx_48'))\n          .height($r('app.string.lpx_48'))\n          .objectFit(ImageFit.Contain)\n          .margin({ left: $r('app.string.lpx_32') })\n          .onClick(() => {\n            if (this.titleBackEnable) {\n              App.get().back()\n            }\n          })\n      }\n\n      Text(this.title)\n        .layoutWeight(1)\n        .height($r('app.string.lpx_98'))\n        .fontSize(lpx2fp(36))\n        .fontColor(this.titleFontColor)\n        .fontWeight(FontWeight.Bold)\n        .textAlign(TextAlign.Start)\n        .padding({\n          left: $r('app.string.lpx_24'),\n          right: $r('app.string.lpx_24')\n        })\n\n      Image(this.titleActionIcon)\n        .width($r('app.string.lpx_48'))\n        .height($r('app.string.lpx_48'))\n        .objectFit(ImageFit.Contain)\n        .margin({ right: $r('app.string.lpx_32') })\n        .onClick(() => {\n          this.titleActionClick()\n        })\n    }\n    .expandSafeArea([SafeAreaType.KEYBOARD]) // 配置键盘弹出安全区域\n    .width(Constants.FULL_PARENT)\n    .backgroundColor(this.titleBackgroundColor)\n    .padding({ top: $r('app.string.lpx_60') })\n    .shadow({\n      radius: 5,\n      color: this.shadowColor,\n      offsetX: 5,\n      offsetY: 5\n    })\n    .zIndex(1)\n  }\n}", "id": "133f0038953055559c6f59bc3b8da29281cf7771d994a7a15812fb089f754516", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "结构清晰，符合ArkTS生态规范，具备实用性和学习价值。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2414, "completion_tokens": 64, "total_tokens": 2478, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"结构清晰，符合ArkTS生态规范，具备实用性和学习价值。\"\n}", "llm_formatted": "import App from '../app/App'\nimport { Constants } from '../util/Constants'\nimport { lpx2fp } from '../util/DesignShow'\n\n@Preview\n@Component\nexport struct ToolBar {\n  @State title?: string = ''\n  @State titleFontColor?: Resource = $r('app.color.color_333333')\n  @State titleBackgroundColor?: Resource = $r('app.color.white')\n  @State titleBackIcon?: Resource | null = $r('app.media.ic_back')\n  @State titleActionIcon?: Resource = $r('app.color.transparent')\n  @State titleBackEnable: boolean = true\n  @State shadowColor?: Resource = $r('app.color.color_1400001E')\n  titleActionClick: () => void = () => {\n  }\n\n  build() {\n    Row() {\n      if (this.titleBackEnable) {\n        Image(this.titleBackIcon)\n          .width($r('app.string.lpx_48'))\n          .height($r('app.string.lpx_48'))\n          .objectFit(ImageFit.Contain)\n          .margin({ left: $r('app.string.lpx_32') })\n          .onClick(() => {\n            if (this.titleBackEnable) {\n              App.get().back()\n            }\n          })\n      }\n\n      Text(this.title)\n        .layoutWeight(1)\n        .height($r('app.string.lpx_98'))\n        .fontSize(lpx2fp(36))\n        .fontColor(this.titleFontColor)\n        .fontWeight(FontWeight.Bold)\n        .textAlign(TextAlign.Start)\n        .padding({\n          left: $r('app.string.lpx_24'),\n          right: $r('app.string.lpx_24')\n        })\n\n      Image(this.titleActionIcon)\n        .width($r('app.string.lpx_48'))\n        .height($r('app.string.lpx_48'))\n        .objectFit(ImageFit.Contain)\n        .margin({ right: $r('app.string.lpx_32') })\n        .onClick(() => {\n          this.titleActionClick()\n        })\n    }\n    .expandSafeArea([SafeAreaType.KEYBOARD]) // 配置键盘弹出安全区域\n    .width(Constants.FULL_PARENT)\n    .backgroundColor(this.titleBackgroundColor)\n    .padding({ top: $r('app.string.lpx_60') })\n    .shadow({\n      radius: 5,\n      color: this.shadowColor,\n      offsetX: 5,\n      offsetY: 5\n    })\n    .zIndex(1)\n  }\n}", "leaked": true, "text_tokens": 545, "split": "valid"}
{"path": "xts_acts~openharmony~1331/distributeddatamgr/preferencesEtstest/entry/src/ohosTest/ets/test/PreferenceErrcodeTest.test.ets", "project_name": "xts_acts~openharmony~1331", "text": "import { describe, beforeAll, beforeEach, afterEach, afterAll, it, expect, Level, Size, TestType } from \"@ohos/hypium\";\nimport { BusinessError } from '@ohos.base';\nimport dataPreferences from '@ohos.data.preferences';\nimport lang from '@arkts.lang';\nimport collections from '@arkts.collections';\nimport AbilityDelegatorRegistry from '@ohos.app.ability.abilityDelegatorRegistry';\n\nconst options:dataPreferences.Options= {name:'test_preferences'}\nconst KEY_STRING = 'key_test_string';\n\nlet mPreferences:dataPreferences.Preferences;\nconst delegator = AbilityDelegatorRegistry.getAbilityDelegator();\nconst context = delegator.getAppContext().getApplicationContext();\nconst TAG = ['testlog']\n\nexport default function preferencesErrcodeTest() {\n  describe('preferencesErrcodeTest', () => {\n    beforeAll(async () => {\n      console.info('beforeAll');\n\n    });\n    afterAll(async () => {\n      console.info('afterAll');\n    });\n    beforeEach(async () => {\n      console.info('beforeEach');\n      mPreferences = await dataPreferences.getPreferences(context, options);\n      await mPreferences.clear();\n    });\n    afterEach(async () => {\n      console.info('afterEach');\n      await dataPreferences.removePreferencesFromCache(context, options)\n      await dataPreferences.deletePreferences(context, options);\n    });\n\n\n    /**\n     * @tc.name testPreferenceClearErrTest0100\n     * @tc.number SUB_DistributedData_Preference_SDK_PreferenceEtsErrApiCallbackTest_0100\n     * @tc.desc mPreference.clear()\n     * @tc.size MediumTest\n     * @tc.type Function\n     * @tc.level Level 2\n     */\n    it('testPreferenceClearErrTest0100', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, (done: Function) => {\n      console.log(\"testPreferenceClearErrTest0100 begin.\");\n      try {\n        mPreferences.clear((err) => {\n          if (err) {\n            console.log(\"clear err =\" + err + \", code =\" + err.code + \", message =\" + err.message);\n            expect(401).assertEqual(err.code);\n            expect(false).assertTrue();\n            done();\n          }\n          done();\n          console.log(\"testPreferenceClearErrTest0100 end.\");\n        });\n      } catch (err) {\n        console.log(\"trycatch err =\" + err + \", code =\" + err.code + \", message =\" + err.message);\n        expect(false).assertTrue();\n      }\n    });\n    /**\n     * @tc.name testPreferenceOnErrTest0100\n     * @tc.number SUB_DistributedData_Preference_SDK_PreferenceEtsErrApiCallbackTest_0200\n     * @tc.desc mPreference.On() interface test\n     * @tc.size MediumTest\n     * @tc.type Function\n     * @tc.level Level 2\n     */\n    it('testPreferenceOnErrTest0100', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, async (done: Function) => {\n      let observer = (key: string) => {\n        console.info(TAG + 'testPreferenceOnErrTest0100 keyValue' +\n        mPreferences.getSync(KEY_STRING, \"aaa\"));\n        done();\n        expect('abc').assertEqual(mPreferences.getSync(KEY_STRING, \"aaa\"));\n        mPreferences.off('multiProcessChange');\n      };\n      try {\n        mPreferences.on('multiProcessChange', null);\n        mPreferences.putSync(KEY_STRING, 'abc');\n        await mPreferences.flush();\n        expect().assertFail();\n        done();\n      } catch (err) {\n        console.log(\"clear err =\" + err + \", code =\" + err.code + \", message =\" + err.message);\n        expect('401').assertEqual(err.code);\n        done();\n      }\n    });\n    /**\n     * @tc.name testPreferenceOffErrTest0100\n     * @tc.number SUB_DistributedData_Preference_SDK_PreferenceEtsErrApiCallbackTest_0300\n     * @tc.desc mPreference.Off() interface test\n     * @tc.size MediumTest\n     * @tc.type Function\n     * @tc.level Level 2\n     */\n    it('testPreferenceOffErrTest0100', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, async (done: Function) => {\n      await mPreferences.clear();\n      let observer = (key: lang.ISendable) => {\n        console.info('testPreferenceOffErrTest0100 keyValue' +\n        mPreferences.getSync(KEY_STRING, \"aaa\"));\n        expect('abcd').assertEqual(mPreferences.getSync(KEY_STRING, \"aaa\"));\n        try {\n          mPreferences.off('dataChange', null);\n          expect().assertFail();\n          done();\n        } catch (err) {\n          console.log(\"clear err =\" + err + \", code =\" + err.code + \", message =\" + err.message);\n          expect('401').assertEqual(err.code);\n          done();\n        }\n      };\n      try {\n        await mPreferences.on('dataChange', null, observer);\n        await mPreferences.put(KEY_STRING, \"abcd\");\n        await mPreferences.flush();\n        expect().assertFail();\n        done();\n      } catch (err) {\n        console.log(\"clear err =\" + err + \", code =\" + err.code + \", message =\" + err.message);\n        expect('401').assertEqual(err.code);\n        done();\n      }\n    });\n  })\n}\n", "id": "2258854446ebb75d0d07ae588def7d8ba542cd4b51ccb942654e4be08a1a5fab", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "ArkTS单测代码，结构清晰，涉及OpenHarmony生态API，具备学习价值。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 3026, "completion_tokens": 69, "total_tokens": 3095, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"ArkTS单测代码，结构清晰，涉及OpenHarmony生态API，具备学习价值。\"\n}", "llm_formatted": "import { describe, beforeAll, beforeEach, afterEach, afterAll, it, expect, Level, Size, TestType } from \"@ohos/hypium\";\nimport { BusinessError } from '@ohos.base';\nimport dataPreferences from '@ohos.data.preferences';\nimport lang from '@arkts.lang';\nimport collections from '@arkts.collections';\nimport AbilityDelegatorRegistry from '@ohos.app.ability.abilityDelegatorRegistry';\n\nconst options:dataPreferences.Options= {name:'test_preferences'}\nconst KEY_STRING = 'key_test_string';\n\nlet mPreferences:dataPreferences.Preferences;\nconst delegator = AbilityDelegatorRegistry.getAbilityDelegator();\nconst context = delegator.getAppContext().getApplicationContext();\nconst TAG = ['testlog']\n\nexport default function preferencesErrcodeTest() {\n  describe('preferencesErrcodeTest', () => {\n    beforeAll(async () => {\n      console.info('beforeAll');\n\n    });\n    afterAll(async () => {\n      console.info('afterAll');\n    });\n    beforeEach(async () => {\n      console.info('beforeEach');\n      mPreferences = await dataPreferences.getPreferences(context, options);\n      await mPreferences.clear();\n    });\n    afterEach(async () => {\n      console.info('afterEach');\n      await dataPreferences.removePreferencesFromCache(context, options)\n      await dataPreferences.deletePreferences(context, options);\n    });\n\n\n    /**\n     * @tc.name testPreferenceClearErrTest0100\n     * @tc.number SUB_DistributedData_Preference_SDK_PreferenceEtsErrApiCallbackTest_0100\n     * @tc.desc mPreference.clear()\n     * @tc.size MediumTest\n     * @tc.type Function\n     * @tc.level Level 2\n     */\n    it('testPreferenceClearErrTest0100', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, (done: Function) => {\n      console.log(\"testPreferenceClearErrTest0100 begin.\");\n      try {\n        mPreferences.clear((err) => {\n          if (err) {\n            console.log(\"clear err =\" + err + \", code =\" + err.code + \", message =\" + err.message);\n            expect(401).assertEqual(err.code);\n            expect(false).assertTrue();\n            done();\n          }\n          done();\n          console.log(\"testPreferenceClearErrTest0100 end.\");\n        });\n      } catch (err) {\n        console.log(\"trycatch err =\" + err + \", code =\" + err.code + \", message =\" + err.message);\n        expect(false).assertTrue();\n      }\n    });\n    /**\n     * @tc.name testPreferenceOnErrTest0100\n     * @tc.number SUB_DistributedData_Preference_SDK_PreferenceEtsErrApiCallbackTest_0200\n     * @tc.desc mPreference.On() interface test\n     * @tc.size MediumTest\n     * @tc.type Function\n     * @tc.level Level 2\n     */\n    it('testPreferenceOnErrTest0100', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, async (done: Function) => {\n      let observer = (key: string) => {\n        console.info(TAG + 'testPreferenceOnErrTest0100 keyValue' +\n        mPreferences.getSync(KEY_STRING, \"aaa\"));\n        done();\n        expect('abc').assertEqual(mPreferences.getSync(KEY_STRING, \"aaa\"));\n        mPreferences.off('multiProcessChange');\n      };\n      try {\n        mPreferences.on('multiProcessChange', null);\n        mPreferences.putSync(KEY_STRING, 'abc');\n        await mPreferences.flush();\n        expect().assertFail();\n        done();\n      } catch (err) {\n        console.log(\"clear err =\" + err + \", code =\" + err.code + \", message =\" + err.message);\n        expect('401').assertEqual(err.code);\n        done();\n      }\n    });\n    /**\n     * @tc.name testPreferenceOffErrTest0100\n     * @tc.number SUB_DistributedData_Preference_SDK_PreferenceEtsErrApiCallbackTest_0300\n     * @tc.desc mPreference.Off() interface test\n     * @tc.size MediumTest\n     * @tc.type Function\n     * @tc.level Level 2\n     */\n    it('testPreferenceOffErrTest0100', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, async (done: Function) => {\n      await mPreferences.clear();\n      let observer = (key: lang.ISendable) => {\n        console.info('testPreferenceOffErrTest0100 keyValue' +\n        mPreferences.getSync(KEY_STRING, \"aaa\"));\n        expect('abcd').assertEqual(mPreferences.getSync(KEY_STRING, \"aaa\"));\n        try {\n          mPreferences.off('dataChange', null);\n          expect().assertFail();\n          done();\n        } catch (err) {\n          console.log(\"clear err =\" + err + \", code =\" + err.code + \", message =\" + err.message);\n          expect('401').assertEqual(err.code);\n          done();\n        }\n      };\n      try {\n        await mPreferences.on('dataChange', null, observer);\n        await mPreferences.put(KEY_STRING, \"abcd\");\n        await mPreferences.flush();\n        expect().assertFail();\n        done();\n      } catch (err) {\n        console.log(\"clear err =\" + err + \", code =\" + err.code + \", message =\" + err.message);\n        expect('401').assertEqual(err.code);\n        done();\n      }\n    });\n  })\n}\n", "leaked": true, "text_tokens": 1157, "split": "valid"}
{"path": "arkui_ace_engine~OpenHarmony~1897/examples/Picker/Picker/entry/src/main/ets/pages/datepicker/DatePickerExample003.ets", "project_name": "arkui_ace_engine~OpenHarmony~1897", "text": "@Entry\n@Component\nstruct DatePickerExample {\n  @State isLunar: boolean = false\n  private selectedDate: Date = new Date('2025-01-15')\n  @State datePickerModeList: (DatePickerMode)[] = [\n    DatePickerMode.DATE,\n    DatePickerMode.YEAR_AND_MONTH,\n    DatePickerMode.MONTH_AND_DAY,\n  ]\n  @State datePickerModeIndex: number = 0;\n\n  build() {\n    Column() {\n      Button('切换公历农历')\n        .margin({ top: 30, bottom: 30 })\n        .onClick(() => {\n          this.isLunar = !this.isLunar\n        })\n      DatePicker({\n        start: new Date('1970-1-1'),\n        end: new Date('2100-1-1'),\n        selected: this.selectedDate,\n        mode:this.datePickerModeList[this.datePickerModeIndex]\n      })\n        .lunar(this.isLunar)\n        .onDateChange((value: Date) => {\n          this.selectedDate = value\n          console.info('select current date is: ' + value.toString())\n        })\n\n      Button('mode :' + this.datePickerModeIndex).margin({ top: 20 })\n        .onClick(() => {\n          this.datePickerModeIndex++\n          if(this.datePickerModeIndex >= this.datePickerModeList.length){\n            this.datePickerModeIndex = 0\n          }\n        })\n    }.width('100%')\n  }\n}", "id": "fc441b08cef61dd787184cac5762bfe720eab170ec5fb4931d879ce0942a0c68", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "ArkTS语法规范，生态耦合自然，逻辑清晰，具学习价值", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 1581, "completion_tokens": 65, "total_tokens": 1646, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"ArkTS语法规范，生态耦合自然，逻辑清晰，具学习价值\"\n}", "llm_formatted": "@Entry\n@Component\nstruct DatePickerExample {\n  @State isLunar: boolean = false\n  private selectedDate: Date = new Date('2025-01-15')\n  @State datePickerModeList: (DatePickerMode)[] = [\n    DatePickerMode.DATE,\n    DatePickerMode.YEAR_AND_MONTH,\n    DatePickerMode.MONTH_AND_DAY,\n  ]\n  @State datePickerModeIndex: number = 0;\n\n  build() {\n    Column() {\n      Button('切换公历农历')\n        .margin({ top: 30, bottom: 30 })\n        .onClick(() => {\n          this.isLunar = !this.isLunar\n        })\n      DatePicker({\n        start: new Date('1970-1-1'),\n        end: new Date('2100-1-1'),\n        selected: this.selectedDate,\n        mode:this.datePickerModeList[this.datePickerModeIndex]\n      })\n        .lunar(this.isLunar)\n        .onDateChange((value: Date) => {\n          this.selectedDate = value\n          console.info('select current date is: ' + value.toString())\n        })\n\n      Button('mode :' + this.datePickerModeIndex).margin({ top: 20 })\n        .onClick(() => {\n          this.datePickerModeIndex++\n          if(this.datePickerModeIndex >= this.datePickerModeList.length){\n            this.datePickerModeIndex = 0\n          }\n        })\n    }.width('100%')\n  }\n}", "leaked": true, "text_tokens": 313, "split": "valid"}
{"path": "ohos-PickerView~openharmony-sig~1601/library/src/main/ets/components/common/SolarCalendar.ets", "project_name": "ohos-PickerView~openharmony-sig~1601", "text": "export function initializeSolarCalendar(rangeStart: number, rangeEnd: number): Array<SolarCalendar> {// 阳历 年\n  let YearsDataArray: Array<SolarCalendar> = []\n  let chinaYearRange : ChinaYearRange = new ChinaYearRange(rangeStart,rangeEnd)\n  let yearIndex : number = chinaYearRange.startYear\n  if(chinaYearRange.startYear > chinaYearRange.endYear ){\n    console.info(\"Time range error\")\n  }else{\n    for(let index = 0; index < 50; index ++ ){\n      if (yearIndex < chinaYearRange.endYear) {\n        let MonthAndDayArray: Array<MonthAndDay> = []\n        MonthJson.forEach(monthItem => {\n          let days:number[] = []\n          for (let index = 0; index < monthDays(yearIndex, monthItem); index++) {\n            days.push(index)\n          }\n          //let days = [...Array(monthDays(yearIndex, monthItem)).keys()]\n          let formatDays:string[] = []\n          days.forEach(dayItem => {\n            if ((dayItem + 1) < 10) {\n              formatDays.push('0' + (dayItem + 1))\n            } else {\n              formatDays.push((dayItem + 1).toString())\n            }\n          })\n          if (Number(monthItem) < 10) {\n            monthItem = '0' + monthItem\n          }\n          MonthAndDayArray.push(new MonthAndDay(monthItem, formatDays))\n        })\n        YearsDataArray.push(new SolarCalendar(index, yearIndex, MonthAndDayArray));\n        yearIndex = yearIndex + 1;\n      }\n    }\n  }\n  return YearsDataArray;\n}\n\nclass ChinaYearRange {\n  startYear: number\n  endYear: number\n\n  constructor(startYear: number, endYear: number) {\n    this.startYear = startYear;\n    this.endYear = endYear;\n  }\n}\n\nexport class SolarCalendar {\n  index:number;\n  year: number|string;\n  monthAndDay: Array<MonthAndDay>;\n  constructor(index:number, year: number, month : Array<MonthAndDay>) {\n    this.index = index\n    this.year = year;\n    this.monthAndDay = month;\n  }\n}\n\nexport class MonthAndDay {\n  month: number|string;\n  days: string[];\n  constructor( month : number|string, days : string[]) {\n    this.month = month;\n    this.days = days;\n  }\n}\n\nconst MonthJson :string[] = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'];\n\nfunction monthDays(year : number, month : string) : number {\n  if (month == '1' || month == '3' || month == '5' || month == '7' || month == '8' || month == '10' || month == '12') {\n    return 31;\n  } else if (month == '2'){\n    //闰年和平年的判断\n    if (year % 400 == 0 || (year % 4 == 0 && year % 100 != 0)) {\n      return 29;\n    } else {\n      return 28;\n    }\n  } else if (month == '4' || month == '6' || month == '9' || month == '11') {\n    return 30;\n  } else {\n    console.error(\"Invalid month value!\");\n    return -1;\n  }\n}", "id": "463dfb5ffb2d8cd1da1a9fbc3a4dd52065f9b7587ad88d66a34f1c5ae75127c2", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 3.0, "confidence": 0.9, "rationale": "结构清晰，类型规范，具备实际日历数据构造逻辑，符合ArkTS生态习惯。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2626, "completion_tokens": 68, "total_tokens": 2694, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 3,\n  \"confidence\": 0.9,\n  \"rationale\": \"结构清晰，类型规范，具备实际日历数据构造逻辑，符合ArkTS生态习惯。\"\n}", "llm_formatted": "export function initializeSolarCalendar(rangeStart: number, rangeEnd: number): Array<SolarCalendar> {// 阳历 年\n  let YearsDataArray: Array<SolarCalendar> = []\n  let chinaYearRange : ChinaYearRange = new ChinaYearRange(rangeStart,rangeEnd)\n  let yearIndex : number = chinaYearRange.startYear\n  if(chinaYearRange.startYear > chinaYearRange.endYear ){\n    console.info(\"Time range error\")\n  }else{\n    for(let index = 0; index < 50; index ++ ){\n      if (yearIndex < chinaYearRange.endYear) {\n        let MonthAndDayArray: Array<MonthAndDay> = []\n        MonthJson.forEach(monthItem => {\n          let days:number[] = []\n          for (let index = 0; index < monthDays(yearIndex, monthItem); index++) {\n            days.push(index)\n          }\n          //let days = [...Array(monthDays(yearIndex, monthItem)).keys()]\n          let formatDays:string[] = []\n          days.forEach(dayItem => {\n            if ((dayItem + 1) < 10) {\n              formatDays.push('0' + (dayItem + 1))\n            } else {\n              formatDays.push((dayItem + 1).toString())\n            }\n          })\n          if (Number(monthItem) < 10) {\n            monthItem = '0' + monthItem\n          }\n          MonthAndDayArray.push(new MonthAndDay(monthItem, formatDays))\n        })\n        YearsDataArray.push(new SolarCalendar(index, yearIndex, MonthAndDayArray));\n        yearIndex = yearIndex + 1;\n      }\n    }\n  }\n  return YearsDataArray;\n}\n\nclass ChinaYearRange {\n  startYear: number\n  endYear: number\n\n  constructor(startYear: number, endYear: number) {\n    this.startYear = startYear;\n    this.endYear = endYear;\n  }\n}\n\nexport class SolarCalendar {\n  index:number;\n  year: number|string;\n  monthAndDay: Array<MonthAndDay>;\n  constructor(index:number, year: number, month : Array<MonthAndDay>) {\n    this.index = index\n    this.year = year;\n    this.monthAndDay = month;\n  }\n}\n\nexport class MonthAndDay {\n  month: number|string;\n  days: string[];\n  constructor( month : number|string, days : string[]) {\n    this.month = month;\n    this.days = days;\n  }\n}\n\nconst MonthJson :string[] = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'];\n\nfunction monthDays(year : number, month : string) : number {\n  if (month == '1' || month == '3' || month == '5' || month == '7' || month == '8' || month == '10' || month == '12') {\n    return 31;\n  } else if (month == '2'){\n    //闰年和平年的判断\n    if (year % 400 == 0 || (year % 4 == 0 && year % 100 != 0)) {\n      return 29;\n    } else {\n      return 28;\n    }\n  } else if (month == '4' || month == '6' || month == '9' || month == '11') {\n    return 30;\n  } else {\n    console.error(\"Invalid month value!\");\n    return -1;\n  }\n}", "leaked": true, "text_tokens": 757, "split": "valid"}
{"path": "openharmony_tpc_samples~openharmony-tpc~1660/GSYVideoPlayer/library/src/main/ets/components/mainpage/CommonConstants.ets", "project_name": "openharmony_tpc_samples~openharmony-tpc~1660", "text": "/**\n * Player component status.\n */\nexport enum AvPlayerStatus {\n  IDLE = 'idle',\n  INITIALIZED = 'initialized',\n  PREPARED = 'prepared',\n  PLAYING = 'playing',\n  PAUSED = 'paused',\n  COMPLETED = 'completed',\n  STOPPED = 'stopped',\n  RELEASED = 'released',\n  ERROR = 'error'\n}\n\n/**\n * AVPlayer binding event.\n */\nexport enum Events {\n  STATE_CHANGE = 'stateChange',\n  TIME_UPDATE = 'timeUpdate',\n  AUDIO_INTERRUPT = 'audioInterrupt',\n  AUDIO_OUTPUT_DEVICECHANGE_WITH_INFO = 'audioOutputDeviceChangeWithInfo',\n  ERROR = 'error'\n}\n\nexport enum PlayStatus {\n  INIT,\n  PLAY,\n  PAUSE,\n  DONE\n}\n\nexport enum PlayerType {\n  IJK_PLAYER,\n  SYSTEM_AVPLAYER\n}\n", "id": "389ff2c00fff1112882c60d9bc2527bd2c4d4245edce5ff43f4896a19d3e0e8b", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 3.0, "confidence": 0.95, "rationale": "枚举定义清晰，符合 ArkTS/TS 规范，具备一定学习价值。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2040, "completion_tokens": 68, "total_tokens": 2108, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 3,\n  \"confidence\": 0.95,\n  \"rationale\": \"枚举定义清晰，符合 ArkTS/TS 规范，具备一定学习价值。\"\n}", "llm_formatted": "/**\n * Player component status.\n */\nexport enum AvPlayerStatus {\n  IDLE = 'idle',\n  INITIALIZED = 'initialized',\n  PREPARED = 'prepared',\n  PLAYING = 'playing',\n  PAUSED = 'paused',\n  COMPLETED = 'completed',\n  STOPPED = 'stopped',\n  RELEASED = 'released',\n  ERROR = 'error'\n}\n\n/**\n * AVPlayer binding event.\n */\nexport enum Events {\n  STATE_CHANGE = 'stateChange',\n  TIME_UPDATE = 'timeUpdate',\n  AUDIO_INTERRUPT = 'audioInterrupt',\n  AUDIO_OUTPUT_DEVICECHANGE_WITH_INFO = 'audioOutputDeviceChangeWithInfo',\n  ERROR = 'error'\n}\n\nexport enum PlayStatus {\n  INIT,\n  PLAY,\n  PAUSE,\n  DONE\n}\n\nexport enum PlayerType {\n  IJK_PLAYER,\n  SYSTEM_AVPLAYER\n}\n", "leaked": true, "text_tokens": 171, "split": "valid"}
{"path": "hmosworld~harmonyos_samples~1320/HMOSWorld/Application/features/discover/src/main/ets/service/DiscoverNetFunc.ets", "project_name": "hmosworld~harmonyos_samples~1320", "text": "/**\n * Using AGC Functions to Obtain Network Data.\n */\nimport { BusinessError } from '@kit.BasicServicesKit';\nimport { LearningResource } from '@ohos/mine';\nimport { Request } from '@ohos/network';\nimport { Logger, ResourcesType, ResponseData } from '@ohos/utils';\nimport { HomeResources } from '../model/HomeResource';\nimport { GetMoreResourcesParams, SearchParams, UserIdParams } from './DiscoverParams';\nimport { DiscoverTrigger } from './DiscoverTrigger';\n\nconst TAG = '[DiscoverNetFunc]';\nconst RESOURCE_PAGE_SIZE = 10;\n\nexport class DiscoverNetFunc {\n  /**\n   * @returns NetworkNewsResources\n   */\n  public getHomeResources(): Promise<HomeResources> {\n    const params: UserIdParams = {\n      userId: AppStorage.get<string>('userId') as string\n    };\n\n    return new Promise((resolve: (value: HomeResources | PromiseLike<HomeResources>) => void,\n                        reject: (reason?: Object) => void) => {\n      Request.call(DiscoverTrigger.HOME_RESOURCE, params).then((result: Object) => {\n        Logger.info(TAG, 'getHomeResources success--------' + JSON.stringify(result));\n        resolve(result as HomeResources);\n      }).catch((error: BusinessError) => {\n        Logger.error(TAG, 'getHomeResources error--------' + JSON.stringify(error));\n        reject(error);\n      });\n    });\n  }\n\n  /**\n   * @param pageNum\n   * @param type\n   * @returns ResourcesData\n   */\n  public getMoreResources(pageNum: number, type: ResourcesType): Promise<ResponseData<LearningResource>> {\n    const params: GetMoreResourcesParams = {\n      userId: AppStorage.get<string>('userId') as string,\n      type,\n      pageNum,\n      pageSize: RESOURCE_PAGE_SIZE\n    };\n\n    return new Promise((resolve: (value: ResponseData<LearningResource> | PromiseLike<ResponseData<LearningResource>>) => void,\n                        reject: (reason?: Object) => void) => {\n      Request.call(DiscoverTrigger.RESOURCE_PAGE, params).then((resourcesData: Object) => {\n        Logger.info(TAG, 'getMoreResources success--------' + JSON.stringify(resourcesData));\n        resolve(resourcesData as ResponseData<LearningResource>);\n      }).catch((error: BusinessError) => {\n        Logger.error(TAG, 'getMoreResources error--------' + JSON.stringify(error));\n        reject(error);\n      });\n    });\n  }\n\n  /**\n   * @returns LearningResource[]\n   */\n  public getHotList(): Promise<LearningResource[]> {\n    return new Promise((resolve: (value: LearningResource[] | PromiseLike<LearningResource[]>) => void,\n                        reject: (reason?: Object) => void) => {\n      Request.call(DiscoverTrigger.RESOURCE_HOT).then((resourcesData: Object) => {\n        Logger.info(TAG, 'get hot list success--------' + JSON.stringify(resourcesData));\n        resolve(resourcesData as LearningResource[]);\n      }).catch((error: BusinessError) => {\n        Logger.error(TAG, 'get hot list error--------' + JSON.stringify(error));\n        reject(error);\n      });\n    });\n  }\n\n  /**\n   * @param SearchParams\n   * @returns LearningResource[]\n   */\n  public search(params: SearchParams): Promise<LearningResource[]> {\n    return new Promise((resolve: (value: LearningResource[] | PromiseLike<LearningResource[]>) => void,\n                        reject: (reason?: Object) => void) => {\n      Request.call(DiscoverTrigger.RESOURCE_SEARCH, params).then((resourcesData: Object) => {\n        Logger.info(TAG, 'search success--------' + JSON.stringify(resourcesData));\n        resolve(resourcesData as LearningResource[]);\n      }).catch((error: BusinessError) => {\n        Logger.error(TAG, 'search error--------' + JSON.stringify(error));\n        reject(error);\n      });\n    });\n  }\n}", "id": "b4198ceafff16f002eaffd4f42651e1c0cac181b7c9f0eaec58114f3326e28bb", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "结构清晰，类型规范，生态耦合自然，具备良好学习价值", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2063, "completion_tokens": 64, "total_tokens": 2127, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"结构清晰，类型规范，生态耦合自然，具备良好学习价值\"\n}", "llm_formatted": "typescript\nimport { BusinessError } from '@kit.BasicServicesKit';\nimport { LearningResource } from '@ohos/mine';\nimport { Request } from '@ohos/network';\nimport { Logger, ResourcesType, ResponseData } from '@ohos/utils';\nimport { HomeResources } from '../model/HomeResource';\nimport { GetMoreResourcesParams, SearchParams, UserIdParams } from './DiscoverParams';\nimport { DiscoverTrigger } from './DiscoverTrigger';\n\nconst TAG = '[DiscoverNetFunc]';\nconst RESOURCE_PAGE_SIZE = 10;\n\nexport class DiscoverNetFunc {\n  public getHomeResources(): Promise<HomeResources> {\n    const params: UserIdParams = {\n      userId: AppStorage.get<string>('userId') as string\n    };\n\n    return new Promise((resolve: (value: HomeResources | PromiseLike<HomeResources>) => void,\n                        reject: (reason?: Object) => void) => {\n      Request.call(DiscoverTrigger.HOME_RESOURCE, params).then((result: Object) => {\n        Logger.info(TAG, 'getHomeResources success--------' + JSON.stringify(result));\n        resolve(result as HomeResources);\n      }).catch((error: BusinessError) => {\n        Logger.error(TAG, 'getHomeResources error--------' + JSON.stringify(error));\n        reject(error);\n      });\n    });\n  }\n\n  public getMoreResources(pageNum: number, type: ResourcesType): Promise<ResponseData<LearningResource>> {\n    const params: GetMoreResourcesParams = {\n      userId: AppStorage.get<string>('userId') as string,\n      type,\n      pageNum,\n      pageSize: RESOURCE_PAGE_SIZE\n    };\n\n    return new Promise((resolve: (value: ResponseData<LearningResource> | PromiseLike<ResponseData<LearningResource>>) => void,\n                        reject: (reason?: Object) => void) => {\n      Request.call(DiscoverTrigger.RESOURCE_PAGE, params).then((resourcesData: Object) => {\n        Logger.info(TAG, 'getMoreResources success--------' + JSON.stringify(resourcesData));\n        resolve(resourcesData as ResponseData<LearningResource>);\n      }).catch((error: BusinessError) => {\n        Logger.error(TAG, 'getMoreResources error--------' + JSON.stringify(error));\n        reject(error);\n      });\n    });\n  }\n\n  public getHotList(): Promise<LearningResource[]> {\n    return new Promise((resolve: (value: LearningResource[] | PromiseLike<LearningResource[]>) => void,\n                        reject: (reason?: Object) => void) => {\n      Request.call(DiscoverTrigger.RESOURCE_HOT).then((resourcesData: Object) => {\n        Logger.info(TAG, 'get hot list success--------' + JSON.stringify(resourcesData));\n        resolve(resourcesData as LearningResource[]);\n      }).catch((error: BusinessError) => {\n        Logger.error(TAG, 'get hot list error--------' + JSON.stringify(error));\n        reject(error);\n      });\n    });\n  }\n\n  public search(params: SearchParams): Promise<LearningResource[]> {\n    return new Promise((resolve: (value: LearningResource[] | PromiseLike<LearningResource[]>) => void,\n                        reject: (reason?: Object) => void) => {\n      Request.call(DiscoverTrigger.RESOURCE_SEARCH, params).then((resourcesData: Object) => {\n        Logger.info(TAG, 'search success--------' + JSON.stringify(resourcesData));\n        resolve(resourcesData as LearningResource[]);\n      }).catch((error: BusinessError) => {\n        Logger.error(TAG, 'search error--------' + JSON.stringify(error));\n        reject(error);\n      });\n    });\n  }\n}", "leaked": true, "text_tokens": 795, "split": "valid"}
{"path": "applications_dlp_manager~openharmony~1194/entry/src/main/ets/pages/alert.ets", "project_name": "applications_dlp_manager~openharmony~1194", "text": "import UIExtensionContentSession from '@ohos.app.ability.UIExtensionContentSession';\nimport { CustomContentDialog, ButtonOptions } from '@ohos.arkui.advanced.Dialog';\nimport GlobalContext from '../common/GlobalContext';\nimport { GetAlertMessage } from '../common/AlertMessage/GetAlertMessage';\nimport common from '@ohos.app.ability.common';\nimport Want from '@ohos.app.ability.Want';\nimport { BusinessError } from '@ohos.base';\nimport Constants from '../common/constant';\nimport ability from '@ohos.ability.ability';\nimport account_osAccount from '@ohos.account.osAccount';\nimport dlpPermission from '@ohos.dlpPermission';\nimport { sendDlpManagerAccountLogin, checkNetworkStatus } from '../common/FileUtils/utils';\nimport { HiLog } from '../common/HiLog';\n\nconst TAG = 'Alert';\nlet abilityResult: ability.AbilityResult = {\n  'resultCode': 0,\n  'want': {}\n};\n\nlet storage = LocalStorage.getShared();\n@Entry(storage)\n@Component\nstruct Index {\n  @State dialogUIExtWant: Want | undefined = GlobalContext.load('dialogUIExtWant');\n  @State session: UIExtensionContentSession | undefined =\n    storage === undefined ? undefined : storage.get<UIExtensionContentSession>('session');\n  @State title: ResourceStr = '';\n  @State message: ResourceStr = '';\n  @State cancel: ResourceStr = '';\n  @State actionButton: ResourceStr = '';\n  @State buttonOptions: ButtonOptions[] = [];\n\n  dialogControllerButton: CustomDialogController | null = new CustomDialogController({\n    builder: CustomContentDialog({\n      primaryTitle: this.title,\n      contentBuilder: () => {\n        this.buildContent();\n      },\n      buttons: this.buttonOptions\n    }),\n    autoCancel: false,\n    maskColor: Constants.TRANSPARENT_BACKGROUND_COLOR\n  });\n\n  async authWithPop(): Promise<void> {\n    HiLog.info(TAG, `authwithpop start`);\n    try {\n      await checkNetworkStatus();\n    } catch {\n      let errInfo = GetAlertMessage.getAlertMessage(\n        { code: Constants.ERR_JS_APP_NETWORK_INVALID } as BusinessError);\n      this.title = '';\n      this.message = errInfo.msg;\n      this.cancel = errInfo.cancel;\n      this.buttonOptions = [{\n        value: this.cancel ? this.cancel : $r('app.string.da_button'),\n        background: $r('sys.color.ohos_id_color_button_normal'), action: () => {\n          abilityResult.resultCode = 0;\n          (getContext(this) as common.UIAbilityContext).terminateSelfWithResult(abilityResult);\n      }}];\n      this.dialogControllerButton?.open();\n      HiLog.error(TAG, `network failed`);\n      return;\n    };\n    try {\n      account_osAccount.DomainAccountManager.authWithPopup({\n        onResult: async (resultCode: number, authResult: account_osAccount.AuthResult) => {\n          sendDlpManagerAccountLogin(resultCode);\n          HiLog.info(TAG, `auth resultCode: ${resultCode}`);\n          HiLog.info(TAG, `auth authResult: ${JSON.stringify(authResult)}`);\n        }\n      })\n      abilityResult.resultCode = 0;\n      (getContext(this) as common.UIAbilityContext).terminateSelfWithResult(abilityResult);\n    } catch (err) {\n      HiLog.error(TAG, `auth exception: ${JSON.stringify(err)}`);\n    }\n  }\n\n  getErrInfo(messageCode: number, errorMsg: BusinessError, accountType: number) {\n    let errInfo: Record<string, Resource> = {};\n    if ([\n      Constants.ERR_JS_APP_PARAM_ERROR,\n      Constants.ERR_JS_APP_OPEN_REJECTED,\n      Constants.ERR_JS_APP_ENCRYPTION_REJECTED,\n      Constants.ERR_JS_APP_ENCRYPTING,\n      Constants.ERR_JS_FILE_EXPIRATION,\n      Constants.ERR_JS_DLP_FILE_READ_ONLY,\n      Constants.ERR_JS_SYSTEM_NEED_TO_BE_UPGRADED,\n    ].includes(messageCode)) {\n      errInfo = GetAlertMessage.getAlertTitleMessage(errorMsg);\n    } else if ([Constants.ERR_JS_APP_SYSTEM_IS_AUTHENTICATED].includes(messageCode)) {\n      errInfo = GetAlertMessage.getAlertButtonMessage(errorMsg);\n    } else if ([Constants.ERR_JS_USER_NO_PERMISSION_2B].includes(messageCode)) {\n      errInfo = GetAlertMessage.getAlertTitleMessage(errorMsg);\n    } else if ([Constants.ERR_JS_USER_NO_PERMISSION_2C].includes(messageCode)) {\n      errInfo = GetAlertMessage.getAlertMessage(errorMsg);\n    } else {\n      errInfo = GetAlertMessage.getAlertMessage(errorMsg);\n    }\n    this.title = errInfo.title;\n    this.message = errInfo.msg;\n    this.cancel = errInfo.cancel;\n    this.actionButton = errInfo.ok;\n    this.buttonOptions = [{\n      value: this.cancel ? this.cancel : $r('app.string.da_button'),\n      background: $r('sys.color.ohos_id_color_button_normal'), action: () => {\n        abilityResult.resultCode = 0;\n        (getContext(this) as common.UIExtensionContext).terminateSelfWithResult(abilityResult);\n      }}];\n    if (errInfo.ok) {\n      this.buttonOptions.push({ value: this.actionButton, background: $r('sys.color.ohos_id_color_text_primary_activated'),\n        fontColor: $r('sys.color.font_on_primary'), action: () => {\n          this.authWithPop();\n        }});\n    }\n    this.dialogControllerButton?.open();\n  }\n\n  async aboutToAppear() {\n    HiLog.info(TAG, `alert aboutToAppear start`);\n    try {\n      let messageCode = -1;\n      let errorMsg = {} as BusinessError;\n      let accountType = -1;\n      if (this.session === undefined) {\n        // use dialog error\n        let errorCode = this.dialogUIExtWant?.parameters?.errorCode as number;\n        let errorMessage = this.dialogUIExtWant?.parameters?.errorMessage as string;\n        errorMsg.code = errorCode;\n        errorMsg.message = errorMessage;\n        messageCode = errorCode;\n        accountType = this.dialogUIExtWant?.parameters?.accountType as number;\n      } else {\n        // use session error\n        errorMsg = storage.get('error') as BusinessError;\n        messageCode = errorMsg.code;\n        accountType = dlpPermission.AccountType.DOMAIN_ACCOUNT;\n      }\n      this.getErrInfo(messageCode, errorMsg, accountType);\n    } catch (err) {\n      HiLog.error(TAG, `showErrorDialog failed: ${JSON.stringify(err)}`);\n    }\n  }\n\n  aboutToDisappear() {\n    this.dialogControllerButton = null;\n  }\n\n  build() {\n  }\n\n  @Builder\n  buildContent(): void {\n    Column() {\n      Text() {\n        Span(this.message)\n      }\n    }\n    .width(Constants.HEADER_TEXT_WIDTH)\n    .align(this.title ? Alignment.Start : Alignment.Center)\n    .margin({\n      bottom: Constants.START_ABILITY_CUSTOM_CONTENT_MARGIN_BOTTOM\n    })\n    .onDisAppear(() => {\n      HiLog.info(TAG, 'buildContent onDisAppear');\n      abilityResult.resultCode = 0;\n      (getContext(this) as common.UIExtensionContext).terminateSelfWithResult(abilityResult);\n    })\n  }\n}\n", "id": "8f1aac807274598c1444151c5a4f4bdc6a6c25fe8adcf79f6901ae2aa2902a01", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "ArkTS语法规范，生态耦合自然，逻辑完整，具学习价值", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2758, "completion_tokens": 69, "total_tokens": 2827, "raw_response": "```json\n{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"ArkTS语法规范，生态耦合自然，逻辑完整，具学习价值\"\n}\n```", "llm_formatted": "import UIExtensionContentSession from '@ohos.app.ability.UIExtensionContentSession';\nimport { CustomContentDialog, ButtonOptions } from '@ohos.arkui.advanced.Dialog';\nimport GlobalContext from '../common/GlobalContext';\nimport { GetAlertMessage } from '../common/AlertMessage/GetAlertMessage';\nimport common from '@ohos.app.ability.common';\nimport Want from '@ohos.app.ability.Want';\nimport { BusinessError } from '@ohos.base';\nimport Constants from '../common/constant';\nimport ability from '@ohos.ability.ability';\nimport account_osAccount from '@ohos.account.osAccount';\nimport dlpPermission from '@ohos.dlpPermission';\nimport { sendDlpManagerAccountLogin, checkNetworkStatus } from '../common/FileUtils/utils';\nimport { HiLog } from '../common/HiLog';\n\nconst TAG = 'Alert';\nlet abilityResult: ability.AbilityResult = {\n  'resultCode': 0,\n  'want': {}\n};\n\nlet storage = LocalStorage.getShared();\n@Entry(storage)\n@Component\nstruct Index {\n  @State dialogUIExtWant: Want | undefined = GlobalContext.load('dialogUIExtWant');\n  @State session: UIExtensionContentSession | undefined =\n    storage === undefined ? undefined : storage.get<UIExtensionContentSession>('session');\n  @State title: ResourceStr = '';\n  @State message: ResourceStr = '';\n  @State cancel: ResourceStr = '';\n  @State actionButton: ResourceStr = '';\n  @State buttonOptions: ButtonOptions[] = [];\n\n  dialogControllerButton: CustomDialogController | null = new CustomDialogController({\n    builder: CustomContentDialog({\n      primaryTitle: this.title,\n      contentBuilder: () => {\n        this.buildContent();\n      },\n      buttons: this.buttonOptions\n    }),\n    autoCancel: false,\n    maskColor: Constants.TRANSPARENT_BACKGROUND_COLOR\n  });\n\n  async authWithPop(): Promise<void> {\n    HiLog.info(TAG, `authwithpop start`);\n    try {\n      await checkNetworkStatus();\n    } catch {\n      let errInfo = GetAlertMessage.getAlertMessage(\n        { code: Constants.ERR_JS_APP_NETWORK_INVALID } as BusinessError);\n      this.title = '';\n      this.message = errInfo.msg;\n      this.cancel = errInfo.cancel;\n      this.buttonOptions = [{\n        value: this.cancel ? this.cancel : $r('app.string.da_button'),\n        background: $r('sys.color.ohos_id_color_button_normal'), action: () => {\n          abilityResult.resultCode = 0;\n          (getContext(this) as common.UIAbilityContext).terminateSelfWithResult(abilityResult);\n      }}];\n      this.dialogControllerButton?.open();\n      HiLog.error(TAG, `network failed`);\n      return;\n    };\n    try {\n      account_osAccount.DomainAccountManager.authWithPopup({\n        onResult: async (resultCode: number, authResult: account_osAccount.AuthResult) => {\n          sendDlpManagerAccountLogin(resultCode);\n          HiLog.info(TAG, `auth resultCode: ${resultCode}`);\n          HiLog.info(TAG, `auth authResult: ${JSON.stringify(authResult)}`);\n        }\n      })\n      abilityResult.resultCode = 0;\n      (getContext(this) as common.UIAbilityContext).terminateSelfWithResult(abilityResult);\n    } catch (err) {\n      HiLog.error(TAG, `auth exception: ${JSON.stringify(err)}`);\n    }\n  }\n\n  getErrInfo(messageCode: number, errorMsg: BusinessError, accountType: number) {\n    let errInfo: Record<string, Resource> = {};\n    if ([\n      Constants.ERR_JS_APP_PARAM_ERROR,\n      Constants.ERR_JS_APP_OPEN_REJECTED,\n      Constants.ERR_JS_APP_ENCRYPTION_REJECTED,\n      Constants.ERR_JS_APP_ENCRYPTING,\n      Constants.ERR_JS_FILE_EXPIRATION,\n      Constants.ERR_JS_DLP_FILE_READ_ONLY,\n      Constants.ERR_JS_SYSTEM_NEED_TO_BE_UPGRADED,\n    ].includes(messageCode)) {\n      errInfo = GetAlertMessage.getAlertTitleMessage(errorMsg);\n    } else if ([Constants.ERR_JS_APP_SYSTEM_IS_AUTHENTICATED].includes(messageCode)) {\n      errInfo = GetAlertMessage.getAlertButtonMessage(errorMsg);\n    } else if ([Constants.ERR_JS_USER_NO_PERMISSION_2B].includes(messageCode)) {\n      errInfo = GetAlertMessage.getAlertTitleMessage(errorMsg);\n    } else if ([Constants.ERR_JS_USER_NO_PERMISSION_2C].includes(messageCode)) {\n      errInfo = GetAlertMessage.getAlertMessage(errorMsg);\n    } else {\n      errInfo = GetAlertMessage.getAlertMessage(errorMsg);\n    }\n    this.title = errInfo.title;\n    this.message = errInfo.msg;\n    this.cancel = errInfo.cancel;\n    this.actionButton = errInfo.ok;\n    this.buttonOptions = [{\n      value: this.cancel ? this.cancel : $r('app.string.da_button'),\n      background: $r('sys.color.ohos_id_color_button_normal'), action: () => {\n        abilityResult.resultCode = 0;\n        (getContext(this) as common.UIExtensionContext).terminateSelfWithResult(abilityResult);\n      }}];\n    if (errInfo.ok) {\n      this.buttonOptions.push({ value: this.actionButton, background: $r('sys.color.ohos_id_color_text_primary_activated'),\n        fontColor: $r('sys.color.font_on_primary'), action: () => {\n          this.authWithPop();\n        }});\n    }\n    this.dialogControllerButton?.open();\n  }\n\n  async aboutToAppear() {\n    HiLog.info(TAG, `alert aboutToAppear start`);\n    try {\n      let messageCode = -1;\n      let errorMsg = {} as BusinessError;\n      let accountType = -1;\n      if (this.session === undefined) {\n        // use dialog error\n        let errorCode = this.dialogUIExtWant?.parameters?.errorCode as number;\n        let errorMessage = this.dialogUIExtWant?.parameters?.errorMessage as string;\n        errorMsg.code = errorCode;\n        errorMsg.message = errorMessage;\n        messageCode = errorCode;\n        accountType = this.dialogUIExtWant?.parameters?.accountType as number;\n      } else {\n        // use session error\n        errorMsg = storage.get('error') as BusinessError;\n        messageCode = errorMsg.code;\n        accountType = dlpPermission.AccountType.DOMAIN_ACCOUNT;\n      }\n      this.getErrInfo(messageCode, errorMsg, accountType);\n    } catch (err) {\n      HiLog.error(TAG, `showErrorDialog failed: ${JSON.stringify(err)}`);\n    }\n  }\n\n  aboutToDisappear() {\n    this.dialogControllerButton = null;\n  }\n\n  build() {\n  }\n\n  @Builder\n  buildContent(): void {\n    Column() {\n      Text() {\n        Span(this.message)\n      }\n    }\n    .width(Constants.HEADER_TEXT_WIDTH)\n    .align(this.title ? Alignment.Start : Alignment.Center)\n    .margin({\n      bottom: Constants.START_ABILITY_CUSTOM_CONTENT_MARGIN_BOTTOM\n    })\n    .onDisAppear(() => {\n      HiLog.info(TAG, 'buildContent onDisAppear');\n      abilityResult.resultCode = 0;\n      (getContext(this) as common.UIExtensionContext).terminateSelfWithResult(abilityResult);\n    })\n  }\n}\n", "leaked": true, "text_tokens": 1490, "split": "valid"}
{"path": "harmony-utils~桃花镇童长老~705/picker_utils/src/main/ets/PickerUtil.ets", "project_name": "harmony-utils~桃花镇童长老~705", "text": "import picker from '@ohos.file.picker';\nimport { camera, cameraPicker } from '@kit.CameraKit';\nimport { CameraOptions, PICKER_DEFAULT_SELECT_NUMBER } from './CameraOptions';\nimport { Utils } from './Utils';\n\n\n/**\n * TODO 拍照、文件(文件、图片、视频、音频)选择和保存,工具类\n *\n * author: 桃花镇童长老ᥫ᭡\n * since: 2024/05/01\n */\nexport class PickerUtil {\n\n\n  /**\n   * 调用系统相机，拍照、录视频\n   * @param options\n   * @returns\n   */\n  static async cameraEasy(options: CameraOptions = new CameraOptions()): Promise<string> {\n    let pickerResult = await PickerUtil.camera(options);\n    return pickerResult.resultUri;\n  }\n\n\n  /**\n   * 调用系统相机，拍照、录视频\n   * @param options\n   * @returns\n   */\n  static async camera(options: CameraOptions = new CameraOptions()): Promise<cameraPicker.PickerResult> {\n    const pickerProfile: cameraPicker.PickerProfile = {\n      cameraPosition: options.cameraPosition ? options.cameraPosition : camera.CameraPosition.CAMERA_POSITION_BACK,\n      videoDuration: options.videoDuration,\n      saveUri: options.saveUri\n    };\n    let pickerResult = await cameraPicker.pick(getContext(), options.mediaTypes, pickerProfile);\n    return pickerResult;\n  }\n\n\n  /**\n   * 通过选择模式拉起PhotoViewPicker界面，用户可以选择一个或多个图片/视频。（该方法系统已废弃，推荐使用PhotoHelper工具类）\n   * @param options\n   *  MIMEType PhotoViewMIMETypes 可选择的媒体文件类型，若无此参数，则默认为图片和视频类型。\n   *  maxSelectNumber\tnumber 选择媒体文件数量的最大值(默认值为50，最大值为500)。\n   * @returns\n   */\n  static async selectPhoto(options?: picker.PhotoSelectOptions): Promise<Array<string>> {\n    if (options === undefined) {\n      options = new picker.PhotoSelectOptions();\n      options.MIMEType = picker.PhotoViewMIMETypes.IMAGE_TYPE; //可选择的媒体文件类型，若无此参数，则默认为图片和视频类型。\n      options.maxSelectNumber = PICKER_DEFAULT_SELECT_NUMBER; //选择媒体文件数量的最大值,默认9。\n    }\n    const photoPicker = new picker.PhotoViewPicker(getContext());\n    let photoSelectResult: picker.PhotoSelectResult = await photoPicker.select(options);\n    return photoSelectResult.photoUris;\n  }\n\n\n  /**\n   * 通过保存模式拉起photoPicker进行保存图片或视频资源的文件名，若无此参数，则默认需要用户自行输入。（该方法系统已废弃，推荐使用PhotoHelper工具类）\n   * @param newFileNames 拉起photoPicker进行保存图片或视频资源的文件名，若无此参数，则默认需要用户自行输入。\n   * @returns\n   */\n  static async savePhoto(newFileNames?: Array<string>): Promise<Array<string>> {\n    const photoPicker = new picker.PhotoViewPicker(getContext());\n    const PhotoSaveOptions = new picker.PhotoSaveOptions();\n    if (newFileNames !== undefined && newFileNames.length > 0) {\n      PhotoSaveOptions.newFileNames = newFileNames;\n    }\n    return photoPicker.save(PhotoSaveOptions);\n  }\n\n\n  /**\n   * 通过选择模式拉起documentPicker界面，用户可以选择一个或多个文件。\n   * @param options\n   *  maxSelectNumber number 选择文件最大个数，上限500，有效值范围1-500（选择目录仅对具有该系统能力的设备开放。且目录选择的最大个数为1）。默认值是1。系统能力： SystemCapability.FileManagement.UserFileService\n   *  defaultFilePathUri string 指定选择的文件或者目录路径\n   *  fileSuffixFilters Array<string> 选择文件的后缀类型，传入字符串数组，每一项代表一个后缀选项，每一项内部用\"|\"分为两部分，第一部分为描述，第二部分为过滤后缀。没有\"|\"则没有描述，该项整体是一个过滤后缀。每项过滤后缀可以存在多个后缀名，则每一个后缀名之间用英文逗号进行分隔，传入数组长度不能超过100。仅对具有该系统能力的设备开放。默认全部过滤，即显示所有文件。系统能力： SystemCapability.FileManagement.UserFileService\n   *  selectMode DocumentSelectMode 支持选择的资源类型，比如：文件、文件夹和二者混合，仅对具有该系统能力的设备开放，默认值是文件类型。系统能力： SystemCapability.FileManagement.UserFileService.FolderSelection\n   *  authMode boolean 拉起授权picker，默认为false（非授权模式）。当authMode为true时为授权模式，defaultFilePathUri必填，表明待授权uri。仅对具有该系统能力的设备开放，系统能力： SystemCapability.FileManagement.UserFileService.FolderSelection\n   * @returns\n   */\n  static async selectDocument(options?: picker.DocumentSelectOptions): Promise<Array<string>> {\n    if (options === undefined) {\n      options = new picker.DocumentSelectOptions();\n      options.maxSelectNumber = PICKER_DEFAULT_SELECT_NUMBER; //选择媒体文件数量的最大值,默认9。\n      options.selectMode = picker.DocumentSelectMode.FILE; //支持选择的资源类型,默认文件\n    }\n    const documentPicker = new picker.DocumentViewPicker();\n    return documentPicker.select(options);\n  }\n\n\n  /**\n   * 通过保存模式拉起documentPicker界面，用户可以保存一个或多个文件。\n   * @param newFileNames Array<string> 拉起documentPicker进行保存的文件名，若无此参数，则默认需要用户自行输入。\n   * @returns 返回DOWNLOAD的文件夹下的文件path。\n   */\n  static async saveDocumentEasy(newFileNames: Array<string>): Promise<Array<string>> {\n    const documentSaveOptions = new picker.DocumentSaveOptions();\n    documentSaveOptions.pickerMode = picker.DocumentPickerMode.DOWNLOAD;\n    if (newFileNames !== undefined && newFileNames.length > 0) {\n      documentSaveOptions.newFileNames = newFileNames;\n    }\n    let downloadUri = await PickerUtil.saveDocument(documentSaveOptions);\n    const path = Utils.getFileUri(downloadUri[0]).path;\n    let uris = new Array<string>();\n    for (let index = 0; index < newFileNames.length; index++) {\n      uris.push(`${path}/${newFileNames[index]}`);\n    }\n    return uris;\n  }\n\n\n  /**\n   * 通过保存模式拉起documentPicker界面，用户可以保存一个或多个文件。\n   * @param options\n   *  newFileNames Array<string> 拉起documentPicker进行保存的文件名，若无此参数，则默认需要用户自行输入。\n   *  defaultFilePathUri string 指定保存的文件或者目录路径。\n   *  fileSuffixChoices Array<string> 保存文件的后缀类型。传入字符串数组，每一项代表一个后缀选项，每一项内部用\"|\"分为两部分，第一部分为描述，第二部分为要保存的后缀。没有\"|\"则没有描述，该项整体是一个保存的后缀。默认没有后缀类型。\n   *  pickerMode DocumentPickerMode 拉起picker的类型, 默认为DEFAULT。当pickerMode设置为DOWNLOAD时，用户配置的参数newFileNames、defaultFilePathUri和fileSuffixChoices将不会生效。\n   * @returns\n   */\n  static async saveDocument(options?: picker.DocumentSaveOptions): Promise<Array<string>> {\n    const documentPicker = new picker.DocumentViewPicker(getContext());\n    return documentPicker.save(options);\n  }\n\n\n  /**\n   * 通过选择模式拉起audioPicker界面（目前拉起的是documentPicker，audioPicker在规划中），用户可以选择一个或多个音频文件。\n   * @param maxSelectNumber number 选择媒体文件数量的最大值(默认值为50，最大值为500)。\n   * @returns\n   */\n  static async selectAudio(options?: picker.AudioSelectOptions): Promise<Array<string>> {\n    if (options === undefined) {\n      options = new picker.AudioSelectOptions();\n      options.maxSelectNumber = PICKER_DEFAULT_SELECT_NUMBER; //选择媒体文件数量的最大值,默认9\n    }\n    const audioPicker = new picker.AudioViewPicker(getContext());\n    return audioPicker.select(options);\n  }\n\n\n  /**\n   * 通过保存模式拉起audioPicker界面（目前拉起的是documentPicker，audioPicker在规划中），用户可以保存一个或多个音频文件。\n   * @param newFileNames 拉起audioPicker进行保存音频资源的文件名，若无此参数，则默认需要用户自行输入。\n   * @returns 返回保存文件的uri数组。\n   */\n  static async saveAudio(newFileNames?: Array<string>): Promise<Array<string>> {\n    const audioPicker = new picker.AudioViewPicker(getContext());\n    const audioSaveOptions = new picker.AudioSaveOptions();\n    if (newFileNames !== undefined && newFileNames.length > 0) {\n      audioSaveOptions.newFileNames = newFileNames;\n    }\n    return audioPicker.save(audioSaveOptions);\n  }\n\n\n}", "id": "1aa8b2098e1af6126d653da9775182bbf8e2016d6fe75956bf1ae6cf3dc9ad30", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "生态耦合自然，类型与命名规范，具备实用工具类价值", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 3242, "completion_tokens": 68, "total_tokens": 3310, "raw_response": "```json\n{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"生态耦合自然，类型与命名规范，具备实用工具类价值\"\n}\n```", "llm_formatted": "import picker from '@ohos.file.picker';\nimport { camera, cameraPicker } from '@kit.CameraKit';\nimport { CameraOptions, PICKER_DEFAULT_SELECT_NUMBER } from './CameraOptions';\nimport { Utils } from './Utils';\n\n\n/**\n * TODO 拍照、文件(文件、图片、视频、音频)选择和保存,工具类\n *\n * author: 桃花镇童长老ᥫ᭡\n * since: 2024/05/01\n */\nexport class PickerUtil {\n\n\n  /**\n   * 调用系统相机，拍照、录视频\n   * @param options\n   * @returns\n   */\n  static async cameraEasy(options: CameraOptions = new CameraOptions()): Promise<string> {\n    let pickerResult = await PickerUtil.camera(options);\n    return pickerResult.resultUri;\n  }\n\n\n  /**\n   * 调用系统相机，拍照、录视频\n   * @param options\n   * @returns\n   */\n  static async camera(options: CameraOptions = new CameraOptions()): Promise<cameraPicker.PickerResult> {\n    const pickerProfile: cameraPicker.PickerProfile = {\n      cameraPosition: options.cameraPosition ? options.cameraPosition : camera.CameraPosition.CAMERA_POSITION_BACK,\n      videoDuration: options.videoDuration,\n      saveUri: options.saveUri\n    };\n    let pickerResult = await cameraPicker.pick(getContext(), options.mediaTypes, pickerProfile);\n    return pickerResult;\n  }\n\n\n  /**\n   * 通过选择模式拉起PhotoViewPicker界面，用户可以选择一个或多个图片/视频。（该方法系统已废弃，推荐使用PhotoHelper工具类）\n   * @param options\n   *  MIMEType PhotoViewMIMETypes 可选择的媒体文件类型，若无此参数，则默认为图片和视频类型。\n   *  maxSelectNumber\tnumber 选择媒体文件数量的最大值(默认值为50，最大值为500)。\n   * @returns\n   */\n  static async selectPhoto(options?: picker.PhotoSelectOptions): Promise<Array<string>> {\n    if (options === undefined) {\n      options = new picker.PhotoSelectOptions();\n      options.MIMEType = picker.PhotoViewMIMETypes.IMAGE_TYPE; //可选择的媒体文件类型，若无此参数，则默认为图片和视频类型。\n      options.maxSelectNumber = PICKER_DEFAULT_SELECT_NUMBER; //选择媒体文件数量的最大值,默认9。\n    }\n    const photoPicker = new picker.PhotoViewPicker(getContext());\n    let photoSelectResult: picker.PhotoSelectResult = await photoPicker.select(options);\n    return photoSelectResult.photoUris;\n  }\n\n\n  /**\n   * 通过保存模式拉起photoPicker进行保存图片或视频资源的文件名，若无此参数，则默认需要用户自行输入。（该方法系统已废弃，推荐使用PhotoHelper工具类）\n   * @param newFileNames 拉起photoPicker进行保存图片或视频资源的文件名，若无此参数，则默认需要用户自行输入。\n   * @returns\n   */\n  static async savePhoto(newFileNames?: Array<string>): Promise<Array<string>> {\n    const photoPicker = new picker.PhotoViewPicker(getContext());\n    const PhotoSaveOptions = new picker.PhotoSaveOptions();\n    if (newFileNames !== undefined && newFileNames.length > 0) {\n      PhotoSaveOptions.newFileNames = newFileNames;\n    }\n    return photoPicker.save(PhotoSaveOptions);\n  }\n\n\n  /**\n   * 通过选择模式拉起documentPicker界面，用户可以选择一个或多个文件。\n   * @param options\n   *  maxSelectNumber number 选择文件最大个数，上限500，有效值范围1-500（选择目录仅对具有该系统能力的设备开放。且目录选择的最大个数为1）。默认值是1。系统能力： SystemCapability.FileManagement.UserFileService\n   *  defaultFilePathUri string 指定选择的文件或者目录路径\n   *  fileSuffixFilters Array<string> 选择文件的后缀类型，传入字符串数组，每一项代表一个后缀选项，每一项内部用\"|\"分为两部分，第一部分为描述，第二部分为过滤后缀。没有\"|\"则没有描述，该项整体是一个过滤后缀。每项过滤后缀可以存在多个后缀名，则每一个后缀名之间用英文逗号进行分隔，传入数组长度不能超过100。仅对具有该系统能力的设备开放。默认全部过滤，即显示所有文件。系统能力： SystemCapability.FileManagement.UserFileService\n   *  selectMode DocumentSelectMode 支持选择的资源类型，比如：文件、文件夹和二者混合，仅对具有该系统能力的设备开放，默认值是文件类型。系统能力： SystemCapability.FileManagement.UserFileService.FolderSelection\n   *  authMode boolean 拉起授权picker，默认为false（非授权模式）。当authMode为true时为授权模式，defaultFilePathUri必填，表明待授权uri。仅对具有该系统能力的设备开放，系统能力： SystemCapability.FileManagement.UserFileService.FolderSelection\n   * @returns\n   */\n  static async selectDocument(options?: picker.DocumentSelectOptions): Promise<Array<string>> {\n    if (options === undefined) {\n      options = new picker.DocumentSelectOptions();\n      options.maxSelectNumber = PICKER_DEFAULT_SELECT_NUMBER; //选择媒体文件数量的最大值,默认9。\n      options.selectMode = picker.DocumentSelectMode.FILE; //支持选择的资源类型,默认文件\n    }\n    const documentPicker = new picker.DocumentViewPicker();\n    return documentPicker.select(options);\n  }\n\n\n  /**\n   * 通过保存模式拉起documentPicker界面，用户可以保存一个或多个文件。\n   * @param newFileNames Array<string> 拉起documentPicker进行保存的文件名，若无此参数，则默认需要用户自行输入。\n   * @returns 返回DOWNLOAD的文件夹下的文件path。\n   */\n  static async saveDocumentEasy(newFileNames: Array<string>): Promise<Array<string>> {\n    const documentSaveOptions = new picker.DocumentSaveOptions();\n    documentSaveOptions.pickerMode = picker.DocumentPickerMode.DOWNLOAD;\n    if (newFileNames !== undefined && newFileNames.length > 0) {\n      documentSaveOptions.newFileNames = newFileNames;\n    }\n    let downloadUri = await PickerUtil.saveDocument(documentSaveOptions);\n    const path = Utils.getFileUri(downloadUri[0]).path;\n    let uris = new Array<string>();\n    for (let index = 0; index < newFileNames.length; index++) {\n      uris.push(`${path}/${newFileNames[index]}`);\n    }\n    return uris;\n  }\n\n\n  /**\n   * 通过保存模式拉起documentPicker界面，用户可以保存一个或多个文件。\n   * @param options\n   *  newFileNames Array<string> 拉起documentPicker进行保存的文件名，若无此参数，则默认需要用户自行输入。\n   *  defaultFilePathUri string 指定保存的文件或者目录路径。\n   *  fileSuffixChoices Array<string> 保存文件的后缀类型。传入字符串数组，每一项代表一个后缀选项，每一项内部用\"|\"分为两部分，第一部分为描述，第二部分为要保存的后缀。没有\"|\"则没有描述，该项整体是一个保存的后缀。默认没有后缀类型。\n   *  pickerMode DocumentPickerMode 拉起picker的类型, 默认为DEFAULT。当pickerMode设置为DOWNLOAD时，用户配置的参数newFileNames、defaultFilePathUri和fileSuffixChoices将不会生效。\n   * @returns\n   */\n  static async saveDocument(options?: picker.DocumentSaveOptions): Promise<Array<string>> {\n    const documentPicker = new picker.DocumentViewPicker(getContext());\n    return documentPicker.save(options);\n  }\n\n\n  /**\n   * 通过选择模式拉起audioPicker界面（目前拉起的是documentPicker，audioPicker在规划中），用户可以选择一个或多个音频文件。\n   * @param maxSelectNumber number 选择媒体文件数量的最大值(默认值为50，最大值为500)。\n   * @returns\n   */\n  static async selectAudio(options?: picker.AudioSelectOptions): Promise<Array<string>> {\n    if (options === undefined) {\n      options = new picker.AudioSelectOptions();\n      options.maxSelectNumber = PICKER_DEFAULT_SELECT_NUMBER; //选择媒体文件数量的最大值,默认9\n    }\n    const audioPicker = new picker.AudioViewPicker(getContext());\n    return audioPicker.select(options);\n  }\n\n\n  /**\n   * 通过保存模式拉起audioPicker界面（目前拉起的是documentPicker，audioPicker在规划中），用户可以保存一个或多个音频文件。\n   * @param newFileNames 拉起audioPicker进行保存音频资源的文件名，若无此参数，则默认需要用户自行输入。\n   * @returns 返回保存文件的uri数组。\n   */\n  static async saveAudio(newFileNames?: Array<string>): Promise<Array<string>> {\n    const audioPicker = new picker.AudioViewPicker(getContext());\n    const audioSaveOptions = new picker.AudioSaveOptions();\n    if (newFileNames !== undefined && newFileNames.length > 0) {\n      audioSaveOptions.newFileNames = newFileNames;\n    }\n    return audioPicker.save(audioSaveOptions);\n  }\n\n\n}", "leaked": true, "text_tokens": 1974, "split": "valid"}
{"path": "multi-news-read~harmonyos_samples~325/entry/src/main/ets/view/NewsWithImages.ets", "project_name": "multi-news-read~harmonyos_samples~325", "text": "import Constants from '../common/Constants';\nimport { News } from '../viewmodel/ImageAndTextViewModel';\n\n@Component\nexport default struct NewsWithImages {\n  @Prop news: News;\n\n  build() {\n    Column() {\n      Text(this.news.getTitle())\n        .fontSize($r(\"app.float.normal_font_size\"))\n        .lineHeight($r(\"app.float.multi_image_news_line_height\"))\n        .opacity(Constants.OPACITY[2])\n        .fontColor(Color.Black)\n        .fontWeight(Constants.FONT_WEIGHT[1])\n        .width(Constants.FULL_WIDTH)\n        .margin({ bottom: $r(\"app.float.text_margin_image\") })\n        .maxLines(1)\n        .textOverflow({ overflow: TextOverflow.Ellipsis })\n\n      Row() {\n        ForEach(this.news.getImages(), (item: Resource) => {\n          Image(item)\n            .width(Constants.ONE_THIRD_WIDTH)\n            .objectFit(ImageFit.Cover)\n        }, (item: Resource) => JSON.stringify(item))\n      }\n      .alignItems(VerticalAlign.Center)\n      .justifyContent(FlexAlign.SpaceBetween)\n      .width(Constants.FULL_WIDTH)\n\n      Row() {\n        Row() {\n          Text(this.news.getPublisher())\n            .opacity(Constants.OPACITY[0])\n            .fontFamily($r(\"app.string.font_family\"))\n            .fontSize($r(\"app.float.small_font_size\"))\n            .fontColor(Color.Black)\n            .fontWeight(Constants.FONT_WEIGHT[0])\n          Text(' ')\n          Text(this.news.getTimeToNow())\n            .opacity(Constants.OPACITY[0])\n            .fontFamily($r(\"app.string.font_family\"))\n            .fontSize($r(\"app.float.small_font_size\"))\n            .fontColor(Color.Black)\n            .fontWeight(Constants.FONT_WEIGHT[0])\n        }\n\n        Image($r(\"app.media.ic_small_more\"))\n          .width($r(\"app.float.small_more_icon_size\"))\n          .height($r(\"app.float.small_more_icon_size\"))\n      }\n      .width(Constants.FULL_WIDTH)\n      .height($r(\"app.float.bigger_line_height\"))\n      .justifyContent(FlexAlign.SpaceBetween)\n    }\n    .width(Constants.FULL_WIDTH)\n\n  }\n}", "id": "d11f87849146c19218f22377b3b66c2519d2914bfaaf6b31752de70c79b5c052", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "结构完整，符合ArkTS生态规范，具备良好的组件化与样式控制能力。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2308, "completion_tokens": 67, "total_tokens": 2375, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"结构完整，符合ArkTS生态规范，具备良好的组件化与样式控制能力。\"\n}", "llm_formatted": "import Constants from '../common/Constants';\nimport { News } from '../viewmodel/ImageAndTextViewModel';\n\n@Component\nexport default struct NewsWithImages {\n  @Prop news: News;\n\n  build() {\n    Column() {\n      Text(this.news.getTitle())\n        .fontSize($r(\"app.float.normal_font_size\"))\n        .lineHeight($r(\"app.float.multi_image_news_line_height\"))\n        .opacity(Constants.OPACITY[2])\n        .fontColor(Color.Black)\n        .fontWeight(Constants.FONT_WEIGHT[1])\n        .width(Constants.FULL_WIDTH)\n        .margin({ bottom: $r(\"app.float.text_margin_image\") })\n        .maxLines(1)\n        .textOverflow({ overflow: TextOverflow.Ellipsis })\n\n      Row() {\n        ForEach(this.news.getImages(), (item: Resource) => {\n          Image(item)\n            .width(Constants.ONE_THIRD_WIDTH)\n            .objectFit(ImageFit.Cover)\n        }, (item: Resource) => JSON.stringify(item))\n      }\n      .alignItems(VerticalAlign.Center)\n      .justifyContent(FlexAlign.SpaceBetween)\n      .width(Constants.FULL_WIDTH)\n\n      Row() {\n        Row() {\n          Text(this.news.getPublisher())\n            .opacity(Constants.OPACITY[0])\n            .fontFamily($r(\"app.string.font_family\"))\n            .fontSize($r(\"app.float.small_font_size\"))\n            .fontColor(Color.Black)\n            .fontWeight(Constants.FONT_WEIGHT[0])\n          Text(' ')\n          Text(this.news.getTimeToNow())\n            .opacity(Constants.OPACITY[0])\n            .fontFamily($r(\"app.string.font_family\"))\n            .fontSize($r(\"app.float.small_font_size\"))\n            .fontColor(Color.Black)\n            .fontWeight(Constants.FONT_WEIGHT[0])\n        }\n\n        Image($r(\"app.media.ic_small_more\"))\n          .width($r(\"app.float.small_more_icon_size\"))\n          .height($r(\"app.float.small_more_icon_size\"))\n      }\n      .width(Constants.FULL_WIDTH)\n      .height($r(\"app.float.bigger_line_height\"))\n      .justifyContent(FlexAlign.SpaceBetween)\n    }\n    .width(Constants.FULL_WIDTH)\n\n  }\n}", "leaked": true, "text_tokens": 439, "split": "valid"}
{"path": "char_freely~韩岩~3904/features/videoPlayer/src/main/ets/view/VideoPlayer.ets", "project_name": "char_freely~韩岩~3904", "text": "import { display, window } from '@kit.ArkUI';\nimport { Callback, deviceInfo } from '@kit.BasicServicesKit';\nimport { BreakpointConstants, CommonConstants } from '@ohos/constantscommon';\nimport {WindowUtil,AvPlayerUtil, Logger} from '@ohos/mediacommon'\nimport { PlayerConstants } from '../constants/PlayerConstants';\nimport { FooterEpisodes } from './FooterEpisodes';\nimport { SideEpisodes } from './SideEpisodes';\n\n@Component\nexport struct VideoPlayer {\n  @StorageLink('currentWidthBreakpoint') currentWidthBreakpoint: string = BreakpointConstants.BREAKPOINT_LG;\n  @StorageLink('currentHeightBreakpoint') currentHeightBreakpoint: string = BreakpointConstants.BREAKPOINT_LG;\n  @StorageLink('creaseRegion') creaseRegion: number[] = [];\n  @StorageLink('currentTime') currentTime: string = CommonConstants.INITIAL_TIME;\n  @StorageLink('totalTime') totalTime: string = CommonConstants.INITIAL_TIME;\n  @StorageLink('progress') progress: number = 0;\n  @StorageLink('avplayerState') avplayerState: string = '';\n  @StorageLink('isHalfFolded') isHalfFolded: boolean = false;\n  @State isShowingSideBar: boolean = false;\n  @State foldStatus: display.FoldStatus = display.getFoldStatus();\n  @StorageLink('pageIndexInfos') pageIndexInfos: NavPathStack = new NavPathStack();\n  private windowUtil?: WindowUtil;\n  private avPlayerUtil?: AvPlayerUtil;\n  private xComponentController: XComponentController = new XComponentController();\n  private onFoldStatusChange: Callback<display.FoldStatus> = (data: display.FoldStatus) => {\n    this.foldStatus = data;\n    if (data === display.FoldStatus.FOLD_STATUS_EXPANDED) {\n      if (this.windowUtil === undefined) {\n        return;\n      }\n      this.isHalfFolded = false;\n      this.windowUtil.setMainWindowOrientation(window.Orientation.AUTO_ROTATION_RESTRICTED);\n    } else {\n      if (this.windowUtil === undefined) {\n        return;\n      }\n      if (data === display.FoldStatus.FOLD_STATUS_HALF_FOLDED) {\n        this.isHalfFolded = true;\n      } else {\n        this.isHalfFolded = false;\n      }\n      this.windowUtil.setMainWindowOrientation(window.Orientation.AUTO_ROTATION_LANDSCAPE);\n    }\n  };\n\n  aboutToAppear() {\n    this.avPlayerUtil = AvPlayerUtil.getInstance();\n    this.windowUtil = WindowUtil.getInstance();\n    if (this.windowUtil !== undefined) {\n      if (deviceInfo.deviceType !== CommonConstants.DEVICE_TYPES[0]) {\n        this.windowUtil.disableWindowSystemBar();\n      }\n      if (this.currentHeightBreakpoint === 'lg' && this.currentWidthBreakpoint === 'sm') {\n        this.windowUtil.setMainWindowOrientation(window.Orientation.AUTO_ROTATION_LANDSCAPE);\n      }\n      if (this.currentHeightBreakpoint === 'md' && this.currentWidthBreakpoint === 'md' && this.isHalfFolded) {\n        this.windowUtil.setMainWindowOrientation(window.Orientation.AUTO_ROTATION_LANDSCAPE);\n      }\n    } else {\n      Logger.info(`Full-screen display in portrait mode`);\n    }\n  }\n\n  async aboutToDisappear() {\n    this.avPlayerUtil?.setSurfaceId(AppStorage.get('detailSurfaceId'));\n    if (this.windowUtil !== undefined) {\n      if (deviceInfo.deviceType !== CommonConstants.DEVICE_TYPES[0]) {\n        this.windowUtil.enableWindowSystemBar();\n      }\n      if (this.currentHeightBreakpoint === 'sm' && this.currentWidthBreakpoint === 'md') {\n        this.windowUtil.setMainWindowOrientation(window.Orientation.PORTRAIT);\n      } else if (this.currentHeightBreakpoint === 'sm' && this.currentWidthBreakpoint === 'lg') {\n        this.windowUtil.setMainWindowOrientation(window.Orientation.AUTO_ROTATION_LANDSCAPE);\n      } else {\n        this.windowUtil.setMainWindowOrientation(window.Orientation.AUTO_ROTATION_RESTRICTED);\n      }\n    } else {\n      Logger.info(`Normal return in portrait mode`);\n    }\n  }\n\n  build() {\n    NavDestination() {\n      Row() {\n        Column() {\n          Stack({ alignContent: Alignment.Center }) {\n            Flex({\n              direction: FlexDirection.Column,\n              justifyContent: this.isHalfFolded ? FlexAlign.Start : FlexAlign.Center,\n              alignItems: ItemAlign.Start\n            }) {\n              Column() {\n                XComponent({\n                  id: PlayerConstants.X_COMPONENT_ID,\n                  type: XComponentType.SURFACE,\n                  controller: this.xComponentController\n                })\n                  .onLoad(() => {\n                    this.avPlayerUtil?.setSurfaceId(this.xComponentController.getXComponentSurfaceId());\n                  })\n                  .aspectRatio(CommonConstants.VIDEO_ASPECT_RATIO)\n              }\n              .justifyContent(FlexAlign.Center)\n              .height(this.isHalfFolded ? this.creaseRegion[0] : CommonConstants.FULL_PERCENT)\n              .width(CommonConstants.FULL_PERCENT)\n            }\n            .width(CommonConstants.FULL_PERCENT)\n            .height(CommonConstants.FULL_PERCENT)\n            .onClick(() => {\n              if (this.isShowingSideBar) {\n                this.isShowingSideBar = false;\n              }\n            })\n\n            Column() {\n              Row() {\n                TimeText({ time: $currentTime })\n                  .margin({\n                    left: $r('app.float.current_time_left'),\n                    right: $r('app.float.current_time_right')\n                  })\n\n                Slider({ min: 0, max: CommonConstants.PROGRESS_HUNDRED, step: 1, value: this.progress })\n                  .onChange((value: number, mode: SliderChangeMode) => {\n                    this.avPlayerUtil?.sliderChange(value, mode);\n                  })\n                  .layoutWeight(1)\n                  .selectedColor($r('app.color.selected_color'))\n\n                TimeText({ time: $totalTime })\n                  .margin({\n                    left: $r('app.float.total_time_left'),\n                    right: $r('app.float.total_time_right')\n                  })\n              }\n              .width(CommonConstants.FULL_PERCENT)\n              .height($r('app.float.time_row_height'))\n              .alignItems(VerticalAlign.Center)\n\n              Row() {\n                Row() {\n                  Image(this.avplayerState === CommonConstants.AV_PLAYER_PLAYING_STATE ? $r('app.media.ic_public_pause')\n                    : $r('app.media.ic_public_play'))\n                    .height($r('app.float.icon_size'))\n                    .width($r('app.float.icon_size'))\n                    .margin({ left: $r('app.float.icon_margin') })\n                    .onClick(() => {\n                      this.avPlayerUtil?.playerStateControl();\n                    })\n                  ImgIcon({ img: $r('app.media.ic_public_play_next') })\n                  ImgIcon({ img: $r('app.media.ic_public_view_list_white') })\n                }\n                .margin({\n                  top: this.currentWidthBreakpoint === BreakpointConstants.BREAKPOINT_SM ? '0' : $r('app.float.icon_row_top'),\n                  bottom: this.currentWidthBreakpoint === BreakpointConstants.BREAKPOINT_SM ?\n                    $r('app.float.icon_row_bottom_sm') : $r('app.float.icon_row_bottom')\n                })\n\n                Blank()\n\n                Row() {\n                  TextButton({ content: PlayerConstants.PLAYER_TEXT_LIST[0] })\n                    .onClick(() => {\n                      this.isShowingSideBar = !this.isShowingSideBar;\n                    })\n                  TextButton({ content: PlayerConstants.PLAYER_TEXT_LIST[2] })\n                  TextButton({ content: PlayerConstants.PLAYER_TEXT_LIST[3] })\n                }\n                .margin({\n                  top: this.currentWidthBreakpoint === BreakpointConstants.BREAKPOINT_SM ? $r('app.float.button_row_top_sm') :\n                  $r('app.float.button_row_top'),\n                  bottom: this.currentWidthBreakpoint === BreakpointConstants.BREAKPOINT_SM ?\n                  $r('app.float.button_row_bottom_sm') : $r('app.float.button_row_bottom')\n                })\n              }\n              .height($r('app.float.icon_button_row_height'))\n              .width(CommonConstants.FULL_PERCENT)\n            }\n            .height(CommonConstants.FULL_PERCENT)\n            .width(CommonConstants.FULL_PERCENT)\n            .justifyContent(FlexAlign.End)\n            .visibility(this.isShowingSideBar ? Visibility.None : Visibility.Visible)\n\n            Image($r('app.media.ic_public_back'))\n              .height($r('app.float.icon_size'))\n              .width($r('app.float.icon_size'))\n              .position({\n                x: $r('app.float.back_position_x'),\n                y: this.isHalfFolded ? this.creaseRegion[0] + this.creaseRegion[1] : $r('app.float.back_position_y')\n              })\n              .fillColor(Color.White)\n              .onClick(() => {\n                this.pageIndexInfos.pop();\n              })\n              .visibility(!this.isShowingSideBar? Visibility.Visible : Visibility.None)\n          }\n          .width(CommonConstants.FULL_PERCENT)\n          .height(this.isShowingSideBar ? this.creaseRegion[0] : CommonConstants.FULL_PERCENT)\n          .layoutWeight(this.isHalfFolded? 0 : 1)\n\n          Blank()\n            .height(this.creaseRegion[1])\n            .width(CommonConstants.FULL_PERCENT)\n            .visibility(this.isHalfFolded && this.isShowingSideBar ? Visibility.Visible : Visibility.None)\n\n          FooterEpisodes({ isShowingSideBar: $isShowingSideBar, foldStatus: this.foldStatus })\n        }\n        .layoutWeight(3)\n\n        SideEpisodes({ isShowingSideBar: $isShowingSideBar, foldStatus: this.foldStatus })\n      }\n      .justifyContent(FlexAlign.Start)\n      .backgroundColor(Color.Black)\n      .height(CommonConstants.FULL_PERCENT)\n      .width(CommonConstants.FULL_PERCENT)\n    }\n    .hideTitleBar(true)\n    .onShown(() => {\n      if (this.avplayerState !== CommonConstants.AV_PLAYER_PLAYING_STATE) {\n        this.avPlayerUtil?.playerStateControl();\n      }\n      try {\n        display.on('foldStatusChange', this.onFoldStatusChange);\n      } catch (exception) {\n        Logger.error('Failed to register callback. Code: ' + JSON.stringify(exception));\n      }\n    })\n    .onHidden(() => {\n      display.off('foldStatusChange');\n    })\n  }\n}\n\n@Component\nstruct ImgIcon {\n  private img?: Resource;\n\n  build() {\n    Image(this.img !== undefined ? this.img : '')\n      .height($r('app.float.icon_size'))\n      .width($r('app.float.icon_size'))\n      .margin({ left: $r('app.float.icon_margin') })\n  }\n}\n\n@Component\nstruct TextButton {\n  private content: ResourceStr = '';\n\n  build() {\n    Text(this.content)\n      .fontSize($r('app.float.button_text_font'))\n      .fontWeight(FontWeight.Normal)\n      .fontColor(Color.White)\n      .margin({ right: $r('app.float.button_text_margin') })\n  }\n}\n\n@Component\nstruct TimeText {\n  @Link time: string;\n\n  build() {\n    Text(this.time)\n      .fontSize($r('app.float.time_font'))\n      .fontColor(Color.White)\n      .lineHeight($r('app.float.time_text_line'))\n      .width($r('app.float.time_text_width'))\n  }\n}", "id": "59f541c113d75b31fef3706d37b8a9cbe28a0ee2e0d47b3dad99aff043ccfdfa", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 5.0, "confidence": 0.95, "rationale": "ArkTS生态耦合自然，结构清晰，逻辑完整，具备高学习价值", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 3627, "completion_tokens": 70, "total_tokens": 3697, "raw_response": "```json\n{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 5,\n  \"confidence\": 0.95,\n  \"rationale\": \"ArkTS生态耦合自然，结构清晰，逻辑完整，具备高学习价值\"\n}\n```", "llm_formatted": "import { display, window } from '@kit.ArkUI';\nimport { Callback, deviceInfo } from '@kit.BasicServicesKit';\nimport { BreakpointConstants, CommonConstants } from '@ohos/constantscommon';\nimport {WindowUtil,AvPlayerUtil, Logger} from '@ohos/mediacommon'\nimport { PlayerConstants } from '../constants/PlayerConstants';\nimport { FooterEpisodes } from './FooterEpisodes';\nimport { SideEpisodes } from './SideEpisodes';\n\n@Component\nexport struct VideoPlayer {\n  @StorageLink('currentWidthBreakpoint') currentWidthBreakpoint: string = BreakpointConstants.BREAKPOINT_LG;\n  @StorageLink('currentHeightBreakpoint') currentHeightBreakpoint: string = BreakpointConstants.BREAKPOINT_LG;\n  @StorageLink('creaseRegion') creaseRegion: number[] = [];\n  @StorageLink('currentTime') currentTime: string = CommonConstants.INITIAL_TIME;\n  @StorageLink('totalTime') totalTime: string = CommonConstants.INITIAL_TIME;\n  @StorageLink('progress') progress: number = 0;\n  @StorageLink('avplayerState') avplayerState: string = '';\n  @StorageLink('isHalfFolded') isHalfFolded: boolean = false;\n  @State isShowingSideBar: boolean = false;\n  @State foldStatus: display.FoldStatus = display.getFoldStatus();\n  @StorageLink('pageIndexInfos') pageIndexInfos: NavPathStack = new NavPathStack();\n  private windowUtil?: WindowUtil;\n  private avPlayerUtil?: AvPlayerUtil;\n  private xComponentController: XComponentController = new XComponentController();\n  private onFoldStatusChange: Callback<display.FoldStatus> = (data: display.FoldStatus) => {\n    this.foldStatus = data;\n    if (data === display.FoldStatus.FOLD_STATUS_EXPANDED) {\n      if (this.windowUtil === undefined) {\n        return;\n      }\n      this.isHalfFolded = false;\n      this.windowUtil.setMainWindowOrientation(window.Orientation.AUTO_ROTATION_RESTRICTED);\n    } else {\n      if (this.windowUtil === undefined) {\n        return;\n      }\n      if (data === display.FoldStatus.FOLD_STATUS_HALF_FOLDED) {\n        this.isHalfFolded = true;\n      } else {\n        this.isHalfFolded = false;\n      }\n      this.windowUtil.setMainWindowOrientation(window.Orientation.AUTO_ROTATION_LANDSCAPE);\n    }\n  };\n\n  aboutToAppear() {\n    this.avPlayerUtil = AvPlayerUtil.getInstance();\n    this.windowUtil = WindowUtil.getInstance();\n    if (this.windowUtil !== undefined) {\n      if (deviceInfo.deviceType !== CommonConstants.DEVICE_TYPES[0]) {\n        this.windowUtil.disableWindowSystemBar();\n      }\n      if (this.currentHeightBreakpoint === 'lg' && this.currentWidthBreakpoint === 'sm') {\n        this.windowUtil.setMainWindowOrientation(window.Orientation.AUTO_ROTATION_LANDSCAPE);\n      }\n      if (this.currentHeightBreakpoint === 'md' && this.currentWidthBreakpoint === 'md' && this.isHalfFolded) {\n        this.windowUtil.setMainWindowOrientation(window.Orientation.AUTO_ROTATION_LANDSCAPE);\n      }\n    } else {\n      Logger.info(`Full-screen display in portrait mode`);\n    }\n  }\n\n  async aboutToDisappear() {\n    this.avPlayerUtil?.setSurfaceId(AppStorage.get('detailSurfaceId'));\n    if (this.windowUtil !== undefined) {\n      if (deviceInfo.deviceType !== CommonConstants.DEVICE_TYPES[0]) {\n        this.windowUtil.enableWindowSystemBar();\n      }\n      if (this.currentHeightBreakpoint === 'sm' && this.currentWidthBreakpoint === 'md') {\n        this.windowUtil.setMainWindowOrientation(window.Orientation.PORTRAIT);\n      } else if (this.currentHeightBreakpoint === 'sm' && this.currentWidthBreakpoint === 'lg') {\n        this.windowUtil.setMainWindowOrientation(window.Orientation.AUTO_ROTATION_LANDSCAPE);\n      } else {\n        this.windowUtil.setMainWindowOrientation(window.Orientation.AUTO_ROTATION_RESTRICTED);\n      }\n    } else {\n      Logger.info(`Normal return in portrait mode`);\n    }\n  }\n\n  build() {\n    NavDestination() {\n      Row() {\n        Column() {\n          Stack({ alignContent: Alignment.Center }) {\n            Flex({\n              direction: FlexDirection.Column,\n              justifyContent: this.isHalfFolded ? FlexAlign.Start : FlexAlign.Center,\n              alignItems: ItemAlign.Start\n            }) {\n              Column() {\n                XComponent({\n                  id: PlayerConstants.X_COMPONENT_ID,\n                  type: XComponentType.SURFACE,\n                  controller: this.xComponentController\n                })\n                  .onLoad(() => {\n                    this.avPlayerUtil?.setSurfaceId(this.xComponentController.getXComponentSurfaceId());\n                  })\n                  .aspectRatio(CommonConstants.VIDEO_ASPECT_RATIO)\n              }\n              .justifyContent(FlexAlign.Center)\n              .height(this.isHalfFolded ? this.creaseRegion[0] : CommonConstants.FULL_PERCENT)\n              .width(CommonConstants.FULL_PERCENT)\n            }\n            .width(CommonConstants.FULL_PERCENT)\n            .height(CommonConstants.FULL_PERCENT)\n            .onClick(() => {\n              if (this.isShowingSideBar) {\n                this.isShowingSideBar = false;\n              }\n            })\n\n            Column() {\n              Row() {\n                TimeText({ time: $currentTime })\n                  .margin({\n                    left: $r('app.float.current_time_left'),\n                    right: $r('app.float.current_time_right')\n                  })\n\n                Slider({ min: 0, max: CommonConstants.PROGRESS_HUNDRED, step: 1, value: this.progress })\n                  .onChange((value: number, mode: SliderChangeMode) => {\n                    this.avPlayerUtil?.sliderChange(value, mode);\n                  })\n                  .layoutWeight(1)\n                  .selectedColor($r('app.color.selected_color'))\n\n                TimeText({ time: $totalTime })\n                  .margin({\n                    left: $r('app.float.total_time_left'),\n                    right: $r('app.float.total_time_right')\n                  })\n              }\n              .width(CommonConstants.FULL_PERCENT)\n              .height($r('app.float.time_row_height'))\n              .alignItems(VerticalAlign.Center)\n\n              Row() {\n                Row() {\n                  Image(this.avplayerState === CommonConstants.AV_PLAYER_PLAYING_STATE ? $r('app.media.ic_public_pause')\n                    : $r('app.media.ic_public_play'))\n                    .height($r('app.float.icon_size'))\n                    .width($r('app.float.icon_size'))\n                    .margin({ left: $r('app.float.icon_margin') })\n                    .onClick(() => {\n                      this.avPlayerUtil?.playerStateControl();\n                    })\n                  ImgIcon({ img: $r('app.media.ic_public_play_next') })\n                  ImgIcon({ img: $r('app.media.ic_public_view_list_white') })\n                }\n                .margin({\n                  top: this.currentWidthBreakpoint === BreakpointConstants.BREAKPOINT_SM ? '0' : $r('app.float.icon_row_top'),\n                  bottom: this.currentWidthBreakpoint === BreakpointConstants.BREAKPOINT_SM ?\n                    $r('app.float.icon_row_bottom_sm') : $r('app.float.icon_row_bottom')\n                })\n\n                Blank()\n\n                Row() {\n                  TextButton({ content: PlayerConstants.PLAYER_TEXT_LIST[0] })\n                    .onClick(() => {\n                      this.isShowingSideBar = !this.isShowingSideBar;\n                    })\n                  TextButton({ content: PlayerConstants.PLAYER_TEXT_LIST[2] })\n                  TextButton({ content: PlayerConstants.PLAYER_TEXT_LIST[3] })\n                }\n                .margin({\n                  top: this.currentWidthBreakpoint === BreakpointConstants.BREAKPOINT_SM ? $r('app.float.button_row_top_sm') :\n                  $r('app.float.button_row_top'),\n                  bottom: this.currentWidthBreakpoint === BreakpointConstants.BREAKPOINT_SM ?\n                  $r('app.float.button_row_bottom_sm') : $r('app.float.button_row_bottom')\n                })\n              }\n              .height($r('app.float.icon_button_row_height'))\n              .width(CommonConstants.FULL_PERCENT)\n            }\n            .height(CommonConstants.FULL_PERCENT)\n            .width(CommonConstants.FULL_PERCENT)\n            .justifyContent(FlexAlign.End)\n            .visibility(this.isShowingSideBar ? Visibility.None : Visibility.Visible)\n\n            Image($r('app.media.ic_public_back'))\n              .height($r('app.float.icon_size'))\n              .width($r('app.float.icon_size'))\n              .position({\n                x: $r('app.float.back_position_x'),\n                y: this.isHalfFolded ? this.creaseRegion[0] + this.creaseRegion[1] : $r('app.float.back_position_y')\n              })\n              .fillColor(Color.White)\n              .onClick(() => {\n                this.pageIndexInfos.pop();\n              })\n              .visibility(!this.isShowingSideBar? Visibility.Visible : Visibility.None)\n          }\n          .width(CommonConstants.FULL_PERCENT)\n          .height(this.isShowingSideBar ? this.creaseRegion[0] : CommonConstants.FULL_PERCENT)\n          .layoutWeight(this.isHalfFolded? 0 : 1)\n\n          Blank()\n            .height(this.creaseRegion[1])\n            .width(CommonConstants.FULL_PERCENT)\n            .visibility(this.isHalfFolded && this.isShowingSideBar ? Visibility.Visible : Visibility.None)\n\n          FooterEpisodes({ isShowingSideBar: $isShowingSideBar, foldStatus: this.foldStatus })\n        }\n        .layoutWeight(3)\n\n        SideEpisodes({ isShowingSideBar: $isShowingSideBar, foldStatus: this.foldStatus })\n      }\n      .justifyContent(FlexAlign.Start)\n      .backgroundColor(Color.Black)\n      .height(CommonConstants.FULL_PERCENT)\n      .width(CommonConstants.FULL_PERCENT)\n    }\n    .hideTitleBar(true)\n    .onShown(() => {\n      if (this.avplayerState !== CommonConstants.AV_PLAYER_PLAYING_STATE) {\n        this.avPlayerUtil?.playerStateControl();\n      }\n      try {\n        display.on('foldStatusChange', this.onFoldStatusChange);\n      } catch (exception) {\n        Logger.error('Failed to register callback. Code: ' + JSON.stringify(exception));\n      }\n    })\n    .onHidden(() => {\n      display.off('foldStatusChange');\n    })\n  }\n}\n\n@Component\nstruct ImgIcon {\n  private img?: Resource;\n\n  build() {\n    Image(this.img !== undefined ? this.img : '')\n      .height($r('app.float.icon_size'))\n      .width($r('app.float.icon_size'))\n      .margin({ left: $r('app.float.icon_margin') })\n  }\n}\n\n@Component\nstruct TextButton {\n  private content: ResourceStr = '';\n\n  build() {\n    Text(this.content)\n      .fontSize($r('app.float.button_text_font'))\n      .fontWeight(FontWeight.Normal)\n      .fontColor(Color.White)\n      .margin({ right: $r('app.float.button_text_margin') })\n  }\n}\n\n@Component\nstruct TimeText {\n  @Link time: string;\n\n  build() {\n    Text(this.time)\n      .fontSize($r('app.float.time_font'))\n      .fontColor(Color.White)\n      .lineHeight($r('app.float.time_text_line'))\n      .width($r('app.float.time_text_width'))\n  }\n}", "leaked": true, "text_tokens": 2359, "split": "valid"}
{"path": "xts_acts~openharmony~1331/arkui/ace_c_arkui_test_api16/entry/src/ohosTest/ets/MainAbility/pages/textPicker/TextPickerColumnWidthsTest.ets", "project_name": "xts_acts~openharmony~1331", "text": "import render from 'libnativerender.so'\nimport { CommonView } from '../../componet/CommonView';\n\n@Entry\n@Component\nstruct TextPickerColumnWidthsTest {\n  PAGE_TAG: string = 'TextPickerColumnWidthsTest';\n\n  build(){\n    Column() {\n      CommonView({\n        pageTag: this.PAGE_TAG,\n      }).onAppear(() => {\n        render.textPickerColumnWidths(this.PAGE_TAG);\n      })\n    }\n  }\n}\n", "id": "104d9cb434bebd9857450f67d58ca4ae4d6971f667b9739e55bed4c81a934996", "replica": 1, "decision": "KEEP_WITH_TAG", "labels": ["ARKTS_ECOSYSTEM_COUPLED"], "arkts_score": 4.0, "quality_score": 3.0, "confidence": 0.9, "rationale": "符合ArkTS规范，使用了@Entry装饰器与ArkUI组件，具备一定学习价值", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 1364, "completion_tokens": 83, "total_tokens": 1447, "raw_response": "```json\n{\n  \"decision\": \"KEEP_WITH_TAG\",\n  \"labels\": [\"ARKTS_ECOSYSTEM_COUPLED\"],\n  \"arkts_score\": 4,\n  \"quality_score\": 3,\n  \"confidence\": 0.9,\n  \"rationale\": \"符合ArkTS规范，使用了@Entry装饰器与ArkUI组件，具备一定学习价值\"\n}\n```", "llm_formatted": "import render from 'libnativerender.so'\nimport { CommonView } from '../../componet/CommonView'\n\n@Entry\n@Component\nstruct TextPickerColumnWidthsTest {\n  PAGE_TAG: string = 'TextPickerColumnWidthsTest'\n\n  build() {\n    Column() {\n      CommonView({\n        pageTag: this.PAGE_TAG,\n      }).onAppear(() => {\n        render.textPickerColumnWidths(this.PAGE_TAG)\n      })\n    }\n  }\n}", "leaked": true, "text_tokens": 96, "split": "valid"}
{"path": "xts_acts~openharmony~1331/arkui/ace_c_arkui_test/entry/src/ohosTest/ets/MainAbility/pages/waterflow/WaterFlowNestedScroll3Test.ets", "project_name": "xts_acts~openharmony~1331", "text": "import render from 'libnativerender.so'\nimport { CommonView } from '../../componet/CommonView';\n\n@Entry\n@Component\nstruct WaterFlowNestedScroll3Test {\n  PAGE_TAG: string = 'WaterFlowNestedScroll3Test';\n\n  build() {\n    Column() {\n      CommonView({\n        pageTag: this.PAGE_TAG,\n      }).onAppear(() => {\n        render.waterFlowNestedScroll3Test(this.PAGE_TAG);\n      })\n    }\n  }\n}\n", "id": "13b001645571e95f970ee634034c28f571886c7c044086da32ad3fa96c3a8c43", "replica": 1, "decision": "KEEP_WITH_TAG", "labels": ["BINARY_OR_GARBLED"], "arkts_score": 4.0, "quality_score": 3.0, "confidence": 0.85, "rationale": "含二进制导入但结构完整，符合ArkTS生态，具备一定学习价值。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 1967, "completion_tokens": 77, "total_tokens": 2044, "raw_response": "{\n  \"decision\": \"KEEP_WITH_TAG\",\n  \"labels\": [\"BINARY_OR_GARBLED\"],\n  \"arkts_score\": 4,\n  \"quality_score\": 3,\n  \"confidence\": 0.85,\n  \"rationale\": \"含二进制导入但结构完整，符合ArkTS生态，具备一定学习价值。\"\n}", "llm_formatted": "import render from 'libnativerender.so'\nimport { CommonView } from '../../componet/CommonView';\n\n@Entry\n@Component\nstruct WaterFlowNestedScroll3Test {\n  PAGE_TAG: string = 'WaterFlowNestedScroll3Test';\n\n  build() {\n    Column() {\n      CommonView({\n        pageTag: this.PAGE_TAG,\n      }).onAppear(() => {\n        render.waterFlowNestedScroll3Test(this.PAGE_TAG);\n      })\n    }\n  }\n}\n", "leaked": true, "text_tokens": 98, "split": "valid"}
{"path": "arkui_ace_engine~OpenHarmony~1897/examples/Picker/Picker/entry/src/main/ets/pages/timepicker_dialog/TimePickerDialogExample004.ets", "project_name": "arkui_ace_engine~OpenHarmony~1897", "text": "// xxx.ets\n@Entry\n@Component\nstruct TimePickerDialogExample {\n  private selectTime: Date = new Date('2020-12-25T08:30:00');\n\n  build() {\n    Column() {\n      Button(\"TimePickerDialog\")\n        .margin(20)\n        .onClick(() => {\n          this.getUIContext().showTimePickerDialog({\n            alignment: DialogAlignment.Center,\n            offset: { dx: 20 , dy: 0 },\n            onAccept: (value: TimePickerResult) => {\n              // 设置selectTime为按下确定按钮时的时间，这样当弹窗再次弹出时显示选中的为上一次确定的时间\n              if (value.hour != undefined && value.minute != undefined) {\n                this.selectTime.setHours(value.hour, value.minute);\n                console.info(\"TimePickerDialog:onAccept()\" + JSON.stringify(value));\n              }\n            }\n          });\n        })\n    }.width('100%')\n  }\n}", "id": "9a66662ff432549a5d25332f9aa57f7c89993614fa0c6295665e27a2fa6c443a", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "ArkTS语法规范，生态耦合自然，逻辑清晰可迁移", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 1478, "completion_tokens": 63, "total_tokens": 1541, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"ArkTS语法规范，生态耦合自然，逻辑清晰可迁移\"\n}", "llm_formatted": "// xxx.ets\n@Entry\n@Component\nstruct TimePickerDialogExample {\n  private selectTime: Date = new Date('2020-12-25T08:30:00');\n\n  build() {\n    Column() {\n      Button(\"TimePickerDialog\")\n        .margin(20)\n        .onClick(() => {\n          this.getUIContext().showTimePickerDialog({\n            alignment: DialogAlignment.Center,\n            offset: { dx: 20 , dy: 0 },\n            onAccept: (value: TimePickerResult) => {\n              // 设置selectTime为按下确定按钮时的时间，这样当弹窗再次弹出时显示选中的为上一次确定的时间\n              if (value.hour != undefined && value.minute != undefined) {\n                this.selectTime.setHours(value.hour, value.minute);\n                console.info(\"TimePickerDialog:onAccept()\" + JSON.stringify(value));\n              }\n            }\n          });\n        })\n    }.width('100%')\n  }\n}", "leaked": true, "text_tokens": 210, "split": "valid"}
{"path": "multi-convenient-life~harmonyos_samples~335/entry/src/main/ets/view/FoodItem.ets", "project_name": "multi-convenient-life~harmonyos_samples~335", "text": "import { CommonConstants } from '../constants/CommonConstants';\n\nimport { FoodData } from '../viewmodel/FoodListViewModel';\n\n@Component\nexport struct FoodItem {\n  @Consume('ifShowSides') ifShowSides: boolean;\n  @Prop foodData: FoodData;\n  @Prop chooseIndex: number;\n  listIndex: number = 0;\n\n  @Styles\n  orangeText(){\n    .backgroundColor($r('app.color.orange_background'))\n    .padding($r('app.float.orange_padding'))\n    .borderRadius($r('app.float.orange_border'))\n  }\n\n  build() {\n    Row() {\n      Image(this.foodData.getImage())\n        .width($r('app.float.food_data_image'))\n        .aspectRatio(1)\n      Column() {\n        Row() {\n          Text(this.foodData.getName())\n            .fontWeight(CommonConstants.FONT_WEIGHT_700)\n            .fontSize($r('app.float.food_data_font'))\n          Blank()\n          Text($r('app.string.booked_text'))\n            .fontWeight(CommonConstants.FONT_WEIGHT_400)\n            .fontColor($r('app.color.currency_symbol'))\n            .fontSize($r('app.float.filtering_font'))\n            .orangeText()\n            .visibility(this.foodData.getReservation() ? Visibility.Visible : Visibility.None)\n            .margin({\n              right: $r('app.float.filtering_margin_right')\n            })\n          Text($r('app.string.takeaway_text'))\n            .fontWeight(CommonConstants.FONT_WEIGHT_400)\n            .fontColor($r('app.color.currency_symbol'))\n            .fontSize($r('app.float.filtering_font'))\n            .orangeText()\n        }\n        .width(CommonConstants.FULL_PERCENT)\n        .margin({\n          bottom: $r('app.float.food_data_bottom')\n        })\n\n        Row() {\n          Rating({ rating: this.foodData.getRating(), indicator: true })\n            .height($r('app.float.rating_height'))\n            .margin({\n              right: $r('app.float.rating_margin_right')\n            })\n          Text(this.foodData.getRating().toFixed(1))\n            .fontWeight(CommonConstants.FONT_WEIGHT_700)\n            .fontColor($r('app.color.currency_symbol'))\n            .fontSize($r('app.float.reviews_font'))\n            .margin({\n              right: $r('app.float.filtering_margin_right')\n            })\n          Text(CommonConstants.CURRENCY_SYMBOL + this.foodData.getPricePerPerson() + CommonConstants.CURRENCY_UNIT)\n            .fontWeight(CommonConstants.FONT_WEIGHT_400)\n            .fontSize($r('app.float.delivery_font'))\n            .textAlign(TextAlign.Center)\n        }\n        .alignItems(VerticalAlign.Center)\n        .width(CommonConstants.FULL_PERCENT)\n        .margin({\n          bottom: $r('app.float.food_margin_bottom')\n        })\n\n        Row() {\n          Text(this.foodData.getLocation())\n            .fontWeight(CommonConstants.FONT_WEIGHT_500)\n            .fontColor($r('app.color.sixty_black'))\n            .fontSize($r('app.float.delivery_font'))\n          Blank()\n          Text(this.foodData.getDistance())\n            .fontWeight(CommonConstants.FONT_WEIGHT_500)\n            .fontSize($r('app.float.delivery_font'))\n        }\n        .width(CommonConstants.FULL_PERCENT)\n        .margin({\n          bottom: $r('app.float.text_margin_bottom')\n        })\n\n        Row() {\n          ForEach(this.foodData.getRankings(), (item: string) => {\n            Text(item)\n              .fontWeight(CommonConstants.FONT_WEIGHT_400)\n              .fontColor($r('app.color.filtering_font'))\n              .fontSize($r('app.float.filtering_font'))\n              .orangeText()\n              .margin({\n                right: $r('app.float.filtering_margin_right')\n              })\n          })\n        }\n        .width(CommonConstants.FULL_PERCENT)\n        .margin({\n          bottom: $r('app.float.text_margin_bottom')\n        })\n\n        Row() {\n          Text($r('app.string.preference_flag'))\n            .fontWeight(CommonConstants.FONT_WEIGHT_400)\n            .fontColor($r('app.color.filtering_font'))\n            .fontSize($r('app.float.filtering_font'))\n            .orangeText()\n            .margin({\n              right: $r('app.float.flag_margin_right')\n            })\n          Text(CommonConstants.CURRENCY_SYMBOL + this.foodData.getPrice())\n            .fontWeight(CommonConstants.FONT_WEIGHT_500)\n            .fontColor($r('app.color.filtering_font'))\n            .fontSize($r('app.float.delivery_font'))\n            .margin({\n              right: $r('app.float.symbol_margin_right')\n            })\n          Text(CommonConstants.CURRENCY_SYMBOL + ' ' + this.foodData.getOriginalPrice())\n            .fontWeight(CommonConstants.FONT_WEIGHT_400)\n            .fontColor($r('app.color.forty_black'))\n            .fontSize($r('app.float.filtering_font'))\n            .decoration({ type: TextDecorationType.LineThrough })\n          Text(this.foodData.getRecommended())\n            .fontWeight(CommonConstants.FONT_WEIGHT_500)\n            .fontSize($r('app.float.filtering_font'))\n            .layoutWeight(1)\n            .maxLines(1)\n            .textOverflow({\n              overflow: TextOverflow.Ellipsis\n            })\n        }\n        .width(CommonConstants.FULL_PERCENT)\n      }\n      .padding({\n        left: $r('app.float.twelves_padding')\n      })\n      .layoutWeight(1)\n    }\n    .alignItems(VerticalAlign.Top)\n    .width(CommonConstants.FULL_PERCENT)\n    .padding($r('app.float.twelves_padding'))\n    .borderRadius($r('app.float.dish_border'))\n    .backgroundColor(this.listIndex === this.chooseIndex && this.ifShowSides ?\n    $r('app.color.food_background') : $r('app.color.three_black'))\n  }\n}", "id": "0b1aa7289a495fc3449122b5dd885561789af67a9b358a83da33dca40d619e63", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 5.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "ArkTS结构完整，生态耦合自然，具备良好可迁移性与学习价值。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 3059, "completion_tokens": 68, "total_tokens": 3127, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 5,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"ArkTS结构完整，生态耦合自然，具备良好可迁移性与学习价值。\"\n}", "llm_formatted": "import { CommonConstants } from '../constants/CommonConstants';\nimport { FoodData } from '../viewmodel/FoodListViewModel';\n\n@Component\nexport struct FoodItem {\n  @Consume('ifShowSides') ifShowSides: boolean;\n  @Prop foodData: FoodData;\n  @Prop chooseIndex: number;\n  listIndex: number = 0;\n\n  @Styles\n  orangeText() {\n    .backgroundColor($r('app.color.orange_background'))\n    .padding($r('app.float.orange_padding'))\n    .borderRadius($r('app.float.orange_border'))\n  }\n\n  build() {\n    Row() {\n      Image(this.foodData.getImage())\n        .width($r('app.float.food_data_image'))\n        .aspectRatio(1)\n      Column() {\n        Row() {\n          Text(this.foodData.getName())\n            .fontWeight(CommonConstants.FONT_WEIGHT_700)\n            .fontSize($r('app.float.food_data_font'))\n          Blank()\n          Text($r('app.string.booked_text'))\n            .fontWeight(CommonConstants.FONT_WEIGHT_400)\n            .fontColor($r('app.color.currency_symbol'))\n            .fontSize($r('app.float.filtering_font'))\n            .orangeText()\n            .visibility(this.foodData.getReservation() ? Visibility.Visible : Visibility.None)\n            .margin({\n              right: $r('app.float.filtering_margin_right')\n            })\n          Text($r('app.string.takeaway_text'))\n            .fontWeight(CommonConstants.FONT_WEIGHT_400)\n            .fontColor($r('app.color.currency_symbol'))\n            .fontSize($r('app.float.filtering_font'))\n            .orangeText()\n        }\n        .width(CommonConstants.FULL_PERCENT)\n        .margin({\n          bottom: $r('app.float.food_data_bottom')\n        })\n\n        Row() {\n          Rating({ rating: this.foodData.getRating(), indicator: true })\n            .height($r('app.float.rating_height'))\n            .margin({\n              right: $r('app.float.rating_margin_right')\n            })\n          Text(this.foodData.getRating().toFixed(1))\n            .fontWeight(CommonConstants.FONT_WEIGHT_700)\n            .fontColor($r('app.color.currency_symbol'))\n            .fontSize($r('app.float.reviews_font'))\n            .margin({\n              right: $r('app.float.filtering_margin_right')\n            })\n          Text(CommonConstants.CURRENCY_SYMBOL + this.foodData.getPricePerPerson() + CommonConstants.CURRENCY_UNIT)\n            .fontWeight(CommonConstants.FONT_WEIGHT_400)\n            .fontSize($r('app.float.delivery_font'))\n            .textAlign(TextAlign.Center)\n        }\n        .alignItems(VerticalAlign.Center)\n        .width(CommonConstants.FULL_PERCENT)\n        .margin({\n          bottom: $r('app.float.food_margin_bottom')\n        })\n\n        Row() {\n          Text(this.foodData.getLocation())\n            .fontWeight(CommonConstants.FONT_WEIGHT_500)\n            .fontColor($r('app.color.sixty_black'))\n            .fontSize($r('app.float.delivery_font'))\n          Blank()\n          Text(this.foodData.getDistance())\n            .fontWeight(CommonConstants.FONT_WEIGHT_500)\n            .fontSize($r('app.float.delivery_font'))\n        }\n        .width(CommonConstants.FULL_PERCENT)\n        .margin({\n          bottom: $r('app.float.text_margin_bottom')\n        })\n\n        Row() {\n          ForEach(this.foodData.getRankings(), (item: string) => {\n            Text(item)\n              .fontWeight(CommonConstants.FONT_WEIGHT_400)\n              .fontColor($r('app.color.filtering_font'))\n              .fontSize($r('app.float.filtering_font'))\n              .orangeText()\n              .margin({\n                right: $r('app.float.filtering_margin_right')\n              })\n          })\n        }\n        .width(CommonConstants.FULL_PERCENT)\n        .margin({\n          bottom: $r('app.float.text_margin_bottom')\n        })\n\n        Row() {\n          Text($r('app.string.preference_flag'))\n            .fontWeight(CommonConstants.FONT_WEIGHT_400)\n            .fontColor($r('app.color.filtering_font'))\n            .fontSize($r('app.float.filtering_font'))\n            .orangeText()\n            .margin({\n              right: $r('app.float.flag_margin_right')\n            })\n          Text(CommonConstants.CURRENCY_SYMBOL + this.foodData.getPrice())\n            .fontWeight(CommonConstants.FONT_WEIGHT_500)\n            .fontColor($r('app.color.filtering_font'))\n            .fontSize($r('app.float.delivery_font'))\n            .margin({\n              right: $r('app.float.symbol_margin_right')\n            })\n          Text(CommonConstants.CURRENCY_SYMBOL + ' ' + this.foodData.getOriginalPrice())\n            .fontWeight(CommonConstants.FONT_WEIGHT_400)\n            .fontColor($r('app.color.forty_black'))\n            .fontSize($r('app.float.filtering_font'))\n            .decoration({ type: TextDecorationType.LineThrough })\n          Text(this.foodData.getRecommended())\n            .fontWeight(CommonConstants.FONT_WEIGHT_500)\n            .fontSize($r('app.float.filtering_font'))\n            .layoutWeight(1)\n            .maxLines(1)\n            .textOverflow({\n              overflow: TextOverflow.Ellipsis\n            })\n        }\n        .width(CommonConstants.FULL_PERCENT)\n      }\n      .padding({\n        left: $r('app.float.twelves_padding')\n      })\n      .layoutWeight(1)\n    }\n    .alignItems(VerticalAlign.Top)\n    .width(CommonConstants.FULL_PERCENT)\n    .padding($r('app.float.twelves_padding'))\n    .borderRadius($r('app.float.dish_border'))\n    .backgroundColor(this.listIndex === this.chooseIndex && this.ifShowSides ?\n    $r('app.color.food_background') : $r('app.color.three_black'))\n  }\n}", "leaked": true, "text_tokens": 1190, "split": "valid"}
{"path": "language-base-class-library~harmonyos_samples~528/feature/capabilities/src/main/ets/components/arkTSUtilcomponents/AsonFunction.ets", "project_name": "language-base-class-library~harmonyos_samples~528", "text": "import { ArkTSUtils, lang } from '@kit.ArkTS';\nimport { customTitle } from '@ohos/common';\nimport { ColumnOperation } from '../ColumnOperation';\n\n// Construct a custom Sendable data structure.\n@Sendable\nclass CustomData implements lang.ISendable {\n  name: string;\n  age: number;\n  city: string;\n\n  constructor(name: string, age: number, city: string) {\n    this.name = name;\n    this.age = age;\n    this.city = city;\n  }\n}\n\n@Builder\nexport function AsonFunctionBuilder() {\n  AsonFunction()\n}\n\n@Component\nexport struct AsonFunction {\n  @State jsonText: string = '{\"name\": \"John\", \"age\": 30, \"city\": \"Chongqing\"}';\n  @State resulText: string = '';\n  @State actionSheets: Array<string> = [];\n  @StorageLink('selectedSecondLabel') selectedSecondLabel: string = '';\n  public pathStack: NavPathStack = new NavPathStack();\n\n  build() {\n    NavDestination() {\n      Scroll() {\n        Column() {\n          Column() {\n            Row() {\n              Text(this.resulText)\n            }\n            .width('91%')\n            .height(124)\n            .padding(16)\n            .backgroundColor(Color.White)\n            .borderRadius(16)\n            .alignItems(VerticalAlign.Top)\n          }\n\n          ColumnOperation({ operationRes: $r('app.strarray.ason_operations'), doOperation: this.doOperation })\n        }\n        .height($r('app.string.text_width_full'))\n        .width($r('app.string.text_width_full'))\n        .padding(16)\n        .justifyContent(FlexAlign.SpaceBetween)\n        .backgroundColor($r('app.color.page_bg'))\n      }\n      .scrollBar(BarState.Off)\n      .align(Alignment.Start)\n    }\n    .title(customTitle(this.selectedSecondLabel))\n    .backgroundColor($r('sys.color.ohos_id_color_sub_background'))\n    .onReady((context: NavDestinationContext) => {\n      this.pathStack = context.pathStack;\n    })\n  }\n\n  doOperation = (index: number) => {\n    switch (index) {\n      case 0:\n        this.resulText = this.Serialization();\n        break;\n      case 1:\n        this.resulText = this.Deserialize();\n        break;\n      default:\n        break;\n    }\n  }\n\n  Serialization() {\n    let normalObject: CustomData = new CustomData('John', 30, 'Chongqing');\n    let str: string = ArkTSUtils.ASON.stringify(normalObject);\n    return str;\n  }\n\n  Deserialize() {\n    let obj = ArkTSUtils.ASON.parse(this.jsonText) as lang.ISendable;\n    if (ArkTSUtils.isSendable(obj)) {\n      return 'result is Sendable';\n    } else {\n      return 'result is not Sendable';\n    }\n  }\n}", "id": "53bc94e41441e8d4a89e6ede64106adc17f5d59042de0c20654523d61a60e910", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "ArkTS语法规范，生态耦合自然，具备可学习的类型与逻辑结构", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 1888, "completion_tokens": 71, "total_tokens": 1959, "raw_response": "```json\n{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"ArkTS语法规范，生态耦合自然，具备可学习的类型与逻辑结构\"\n}\n```", "llm_formatted": "import { ArkTSUtils, lang } from '@kit.ArkTS';\nimport { customTitle } from '@ohos/common';\nimport { ColumnOperation } from '../ColumnOperation';\n\n@Sendable\nclass CustomData implements lang.ISendable {\n  name: string;\n  age: number;\n  city: string;\n\n  constructor(name: string, age: number, city: string) {\n    this.name = name;\n    this.age = age;\n    this.city = city;\n  }\n}\n\n@Builder\nexport function AsonFunctionBuilder() {\n  AsonFunction()\n}\n\n@Component\nexport struct AsonFunction {\n  @State jsonText: string = '{\"name\": \"John\", \"age\": 30, \"city\": \"Chongqing\"}';\n  @State resulText: string = '';\n  @State actionSheets: Array<string> = [];\n  @StorageLink('selectedSecondLabel') selectedSecondLabel: string = '';\n  public pathStack: NavPathStack = new NavPathStack();\n\n  build() {\n    NavDestination() {\n      Scroll() {\n        Column() {\n          Column() {\n            Row() {\n              Text(this.resulText)\n            }\n            .width('91%')\n            .height(124)\n            .padding(16)\n            .backgroundColor(Color.White)\n            .borderRadius(16)\n            .alignItems(VerticalAlign.Top)\n          }\n\n          ColumnOperation({ operationRes: $r('app.strarray.ason_operations'), doOperation: this.doOperation })\n        }\n        .height($r('app.string.text_width_full'))\n        .width($r('app.string.text_width_full'))\n        .padding(16)\n        .justifyContent(FlexAlign.SpaceBetween)\n        .backgroundColor($r('app.color.page_bg'))\n      }\n      .scrollBar(BarState.Off)\n      .align(Alignment.Start)\n    }\n    .title(customTitle(this.selectedSecondLabel))\n    .backgroundColor($r('sys.color.ohos_id_color_sub_background'))\n    .onReady((context: NavDestinationContext) => {\n      this.pathStack = context.pathStack;\n    })\n  }\n\n  doOperation = (index: number) => {\n    switch (index) {\n      case 0:\n        this.resulText = this.Serialization();\n        break;\n      case 1:\n        this.resulText = this.Deserialize();\n        break;\n      default:\n        break;\n    }\n  }\n\n  Serialization() {\n    let normalObject: CustomData = new CustomData('John', 30, 'Chongqing');\n    let str: string = ArkTSUtils.ASON.stringify(normalObject);\n    return str;\n  }\n\n  Deserialize() {\n    let obj = ArkTSUtils.ASON.parse(this.jsonText) as lang.ISendable;\n    if (ArkTSUtils.isSendable(obj)) {\n      return 'result is Sendable';\n    } else {\n      return 'result is not Sendable';\n    }\n  }\n}", "leaked": true, "text_tokens": 620, "split": "valid"}
{"path": "applications_auth_widget~MHBase~977/entry/src/ohosTest/ets/testability/TestAbility.ets", "project_name": "applications_auth_widget~MHBase~977", "text": "import AbilityDelegatorRegistry from '@ohos.app.ability.abilityDelegatorRegistry';\nimport UserAuthExtensionAbility from '@ohos.app.ability.UserAuthExtensionAbility';\nimport window from '@ohos.window';\nimport { Hypium } from '@ohos/hypium';\nimport { WantParams } from '../../../main/ets/common/vm/Constants';\nimport testsuite from '../test/List.test';\nimport Want from '@ohos.app.ability.Want';\nimport AbilityConstant from '@ohos.app.ability.AbilityConstant';\nimport UIExtensionContentSession from '@ohos.app.ability.UIExtensionContentSession';\n\nexport default class TestAbility extends UserAuthExtensionAbility {\n  onCreate() {\n    let  abilityDelegator: AbilityDelegatorRegistry.AbilityDelegator;\n    abilityDelegator = AbilityDelegatorRegistry.getAbilityDelegator();\n    let abilityDelegatorArguments: AbilityDelegatorRegistry.AbilityDelegatorArgs;\n    abilityDelegatorArguments = AbilityDelegatorRegistry.getArguments();\n    Hypium.hypiumTest(abilityDelegator, abilityDelegatorArguments, testsuite);\n    AppStorage.setOrCreate(\"context\", this.context);\n  }\n\n  onSessionCreate(want, session): void {\n    AppStorage.setOrCreate(\"wantParams\", want?.parameters?.useriamCmdData);\n    AppStorage.setOrCreate(\"session\", session);\n  }\n\n  onWindowStageCreate(windowStage: window.WindowStage) {\n    windowStage.loadContent('testability/pages/Index', (err, data) => {\n      if (err.code) {\n        return;\n      }\n    });\n  }\n}", "id": "00f46718b60462170ab6113273082555d0b923b6209e733012e3667061454265", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 3.0, "confidence": 0.9, "rationale": "符合ArkTS规范，涉及OpenHarmony生态组件，具一定学习价值", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 1604, "completion_tokens": 68, "total_tokens": 1672, "raw_response": "```json\n{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 3,\n  \"confidence\": 0.9,\n  \"rationale\": \"符合ArkTS规范，涉及OpenHarmony生态组件，具一定学习价值\"\n}\n```", "llm_formatted": "import AbilityDelegatorRegistry from '@ohos.app.ability.abilityDelegatorRegistry';\nimport UserAuthExtensionAbility from '@ohos.app.ability.UserAuthExtensionAbility';\nimport window from '@ohos.window';\nimport { Hypium } from '@ohos/hypium';\nimport { WantParams } from '../../../main/ets/common/vm/Constants';\nimport testsuite from '../test/List.test';\nimport Want from '@ohos.app.ability.Want';\nimport AbilityConstant from '@ohos.app.ability.AbilityConstant';\nimport UIExtensionContentSession from '@ohos.app.ability.UIExtensionContentSession';\n\nexport default class TestAbility extends UserAuthExtensionAbility {\n  onCreate() {\n    let  abilityDelegator: AbilityDelegatorRegistry.AbilityDelegator;\n    abilityDelegator = AbilityDelegatorRegistry.getAbilityDelegator();\n    let abilityDelegatorArguments: AbilityDelegatorRegistry.AbilityDelegatorArgs;\n    abilityDelegatorArguments = AbilityDelegatorRegistry.getArguments();\n    Hypium.hypiumTest(abilityDelegator, abilityDelegatorArguments, testsuite);\n    AppStorage.setOrCreate(\"context\", this.context);\n  }\n\n  onSessionCreate(want, session): void {\n    AppStorage.setOrCreate(\"wantParams\", want?.parameters?.useriamCmdData);\n    AppStorage.setOrCreate(\"session\", session);\n  }\n\n  onWindowStageCreate(windowStage: window.WindowStage) {\n    windowStage.loadContent('testability/pages/Index', (err, data) => {\n      if (err.code) {\n        return;\n      }\n    });\n  }\n}", "leaked": true, "text_tokens": 336, "split": "valid"}
{"path": "multi-convenient-life~harmonyos_samples~335/entry/src/main/ets/view/GraphicTextComments.ets", "project_name": "multi-convenient-life~harmonyos_samples~335", "text": "import { BreakpointConstants } from '../constants/BreakpointConstants';\nimport { CommonConstants } from '../constants/CommonConstants';\n\n@Component\nexport struct GraphicTextComments {\n  @StorageLink('currentBreakpoint') currentBreakpoint: string = BreakpointConstants.BREAKPOINT_LG;\n  @StorageLink('windowTop') windowTop: number = 0;\n  @Consume('showSideBar') showSideBar: boolean;\n  private TagList: ResourceStr[] = [$r('app.string.free_parking'), $r('app.string.recent_orders'),\n    $r('app.string.positive_feedback')]\n  private CommentsList: ResourceStr[] = ['有图/视频', '好评', '差评', '其他'];\n\n  build() {\n    Scroll() {\n      Column() {\n        Stack() {\n          Image($r('app.media.slt_img'))\n            .width(CommonConstants.FULL_PERCENT)\n            .height($r('app.float.slt_height'))\n          Image($r('app.media.icon_cancel'))\n            .width($r('app.float.common_image'))\n            .aspectRatio(1)\n            .position({\n              top: CommonConstants.ICON_IMAGE_POSITION + this.windowTop,\n              left: $r('app.float.common_padding')\n            })\n            .onClick(() => {\n              this.showSideBar = false;\n            })\n        }\n\n        Column() {\n          Column() {\n            Row() {\n              Text($r('app.string.seabird_park'))\n                .fontSize($r('app.float.delicious_font'))\n                .fontWeight(CommonConstants.FONT_WEIGHT_700)\n              Blank()\n              Column() {\n                Image($r('app.media.v2_ic_public_collect'))\n                  .width($r('app.float.more_width'))\n                  .aspectRatio(1)\n                Text($r('app.string.collections_text'))\n                  .fontColor($r('app.color.sixty_black'))\n                  .fontSize($r('app.float.delivery_font'))\n              }\n            }\n            .width(CommonConstants.FULL_PERCENT)\n            .margin({\n              bottom: $r('app.float.margin_twelves')\n            })\n\n            Row() {\n              ForEach(this.TagList, (item: ResourceStr) => {\n                Text(item)\n                  .fontSize($r('app.float.filtering_font'))\n                  .backgroundColor($r('app.color.background_filtering'))\n                  .fontColor($r('app.color.currency_symbol'))\n                  .padding({\n                    top: $r('app.float.orange_padding'),\n                    bottom: $r('app.float.orange_padding'),\n                    left: $r('app.float.tabs_padding_tb'),\n                    right: $r('app.float.tabs_padding_tb')\n                  })\n                  .margin({\n                    right: $r('app.float.tag_margin_right')\n                  })\n                  .borderRadius($r('app.float.tag_radius'))\n              })\n            }\n            .width(CommonConstants.FULL_PERCENT)\n            .justifyContent(FlexAlign.Start)\n            .margin({\n              bottom: $r('app.float.margin_twelves')\n            })\n\n            Text($r('app.string.address_text'))\n              .fontColor($r('app.color.sixty_black'))\n              .fontSize($r('app.float.delivery_font'))\n              .margin({\n                bottom: $r('app.float.margin_twelves')\n              })\n              .width(CommonConstants.FULL_PERCENT)\n            Row() {\n              Text($r('app.string.currency_symbol'))\n                .fontSize($r('app.float.delivery_font'))\n                .fontColor($r('app.color.currency_symbol'))\n                .margin({\n                  right: $r('app.float.filtering_padding_lr')\n                })\n              Text($r('app.string.price_text'))\n                .fontSize($r('app.float.delicious_font'))\n                .fontColor($r('app.color.currency_symbol'))\n                .margin({\n                  right: $r('app.float.price_margin_right')\n                })\n              Text($r('app.string.tickets_are'))\n                .fontSize($r('app.float.filtering_font'))\n                .fontColor($r('app.color.forty_black'))\n              Blank()\n              if (this.currentBreakpoint !== BreakpointConstants.BREAKPOINT_MD) {\n                Button($r('app.string.add_cart'))\n                  .height($r('app.float.add_cart_height'))\n              }\n            }\n            .width(CommonConstants.FULL_PERCENT)\n          }\n          .borderRadius($r('app.float.dish_border'))\n          .padding({\n            top: $r('app.float.nine_padding'),\n            left: $r('app.float.twelves_padding'),\n            right: $r('app.float.twelves_padding'),\n            bottom: $r('app.float.twelves_padding')\n          })\n          .width(CommonConstants.FULL_PERCENT)\n          .backgroundColor(Color.White)\n          .margin({\n            bottom: $r('app.float.margin_small')\n          })\n\n          Column() {\n            Row() {\n              Text($r('app.string.attraction_details'))\n                .fontWeight(CommonConstants.FONT_WEIGHT_700)\n                .fontSize($r('app.float.attraction_details_font'))\n              Blank()\n              Text($r('app.string.introduction_pictures'))\n                .fontColor($r('app.color.sixty_black'))\n                .fontSize($r('app.float.tabs_font'))\n              Image($r('app.media.ic_public_arrow_right_gray'))\n                .width($r('app.float.more_width'))\n                .aspectRatio(1)\n            }\n            .width(CommonConstants.FULL_PERCENT)\n            .margin({\n              bottom: $r('app.float.nine_margin')\n            })\n\n            Divider()\n              .width(CommonConstants.FULL_PERCENT)\n              .margin({\n                bottom: $r('app.float.margin_twelves')\n              })\n            Row() {\n              Text($r('app.string.opening_hours'))\n                .fontSize($r('app.float.delivery_font'))\n                .fontColor($r('app.color.sixty_black'))\n                .width($r('app.float.opening_width'))\n                .textAlign(TextAlign.Start)\n              Text($r('app.string.last_admission'))\n                .fontSize($r('app.float.delivery_font'))\n                .fontColor($r('app.color.sixty_black'))\n                .layoutWeight(1)\n            }\n            .margin({\n              bottom: $r('app.float.margin_twelves')\n            })\n\n            Row() {\n              Text($r('app.string.tickets_key'))\n                .fontSize($r('app.float.delivery_font'))\n                .fontColor($r('app.color.sixty_black'))\n                .width($r('app.float.opening_width'))\n                .textAlign(TextAlign.Start)\n              Text($r('app.string.tickets_value'))\n                .fontSize($r('app.float.delivery_font'))\n                .fontColor($r('app.color.sixty_black'))\n                .layoutWeight(1)\n            }\n            .margin({\n              bottom: $r('app.float.margin_twelves')\n            })\n\n            Row() {\n              Text($r('app.string.policy_key'))\n                .fontSize($r('app.float.delivery_font'))\n                .fontColor($r('app.color.sixty_black'))\n                .width($r('app.float.opening_width'))\n                .textAlign(TextAlign.Start)\n              Text($r('app.string.policy_value'))\n                .fontSize($r('app.float.delivery_font'))\n                .fontColor($r('app.color.sixty_black'))\n                .layoutWeight(1)\n            }\n            .margin({\n              bottom: $r('app.float.margin_twelves')\n            })\n\n            Row() {\n              Text($r('app.string.tel_key'))\n                .fontSize($r('app.float.delivery_font'))\n                .fontColor($r('app.color.sixty_black'))\n                .width($r('app.float.opening_width'))\n                .textAlign(TextAlign.Start)\n              Text($r('app.string.tel_value'))\n                .fontSize($r('app.float.delivery_font'))\n                .fontColor($r('app.color.sixty_black'))\n                .layoutWeight(1)\n            }\n            .margin({\n              bottom: $r('app.float.margin_twelves')\n            })\n\n          }\n          .width(CommonConstants.FULL_PERCENT)\n          .backgroundColor(Color.White)\n          .borderRadius($r('app.float.dish_border'))\n          .padding({\n            top: $r('app.float.nine_padding'),\n            left: $r('app.float.twelves_padding'),\n            right: $r('app.float.twelves_padding'),\n            bottom: $r('app.float.twelves_padding')\n          })\n          .margin({\n            bottom: $r('app.float.margin_small')\n          })\n\n          Column() {\n            Row() {\n              Text($r('app.string.product_evaluation'))\n                .fontSize($r('app.float.amounts_font'))\n                .fontWeight(CommonConstants.FONT_WEIGHT_700)\n              Blank()\n              Text($r('app.string.reviews_string'))\n                .fontColor($r('app.color.sixty_black'))\n                .fontSize($r('app.float.reviews_font'))\n              Image($r('app.media.ic_public_arrow_right_gray'))\n                .width($r('app.float.more_width'))\n            }\n            .width(CommonConstants.FULL_PERCENT)\n            .margin({\n              bottom: $r('app.float.nine_margin')\n            })\n\n            Divider()\n              .color($r('app.color.five_white'))\n              .margin({\n                bottom: $r('app.float.text_margin_bottom')\n              })\n            Row() {\n              ForEach(this.CommentsList, (item: ResourceStr) => {\n                Text(item)\n                  .fontSize($r('app.float.filtering_font'))\n                  .backgroundColor($r('app.color.background_filtering'))\n                  .fontColor($r('app.color.currency_symbol'))\n                  .padding({\n                    top: $r('app.float.orange_padding'),\n                    bottom: $r('app.float.orange_padding'),\n                    left: $r('app.float.tabs_padding_tb'),\n                    right: $r('app.float.tabs_padding_tb')\n                  })\n                  .margin({\n                    right: $r('app.float.tag_margin_right')\n                  })\n                  .borderRadius($r('app.float.tag_radius'))\n              })\n            }\n            .width(CommonConstants.FULL_PERCENT)\n            .justifyContent(FlexAlign.Start)\n            .margin({\n              bottom: $r('app.float.margin_twelves')\n            })\n\n            Row() {\n              Image($r('app.media.tx2_img'))\n                .width($r('app.float.tx2_width'))\n                .aspectRatio(1)\n                .margin({\n                  right: $r('app.float.back_image_right')\n                })\n              Column() {\n                Text($r('app.string.sanger'))\n                  .fontColor($r('app.color.forty_black'))\n                  .fontSize($r('app.float.delivery_font'))\n                  .margin({\n                    bottom: $r('app.float.sanger_bottom')\n                  })\n                Text($r('app.string.nice_comment'))\n                  .fontSize($r('app.float.delivery_font'))\n              }\n              .alignItems(HorizontalAlign.Start)\n              .padding({\n                top: $r('app.float.text_margin_bottom')\n              })\n              .layoutWeight(1)\n\n              Column() {\n                Image($r('app.media.v2_ic_public_favor'))\n                  .width($r('app.float.more_width'))\n                  .aspectRatio(1)\n                  .margin({\n                    bottom: $r('app.float.favor_bottom')\n                  })\n                Text($r('app.string.two_number'))\n                  .fontColor($r('app.color.forty_black'))\n                  .fontSize($r('app.float.filtering_font'))\n              }\n              .margin({\n                left: $r('app.float.favor_margin_left')\n              })\n            }\n            .width(CommonConstants.FULL_PERCENT)\n            .margin({\n              bottom: $r('app.float.margin_small')\n            })\n\n            Row() {\n              Text($r('app.string.view_all_reviews'))\n                .fontColor($r('app.color.sixty_black'))\n                .fontSize($r('app.float.tabs_font'))\n              Image($r('app.media.icon_more'))\n                .width($r('app.float.more_width'))\n                .aspectRatio(1)\n            }\n            .height($r('app.float.all_comments'))\n          }\n          .borderRadius($r('app.float.dish_border'))\n          .padding({\n            top: $r('app.float.nine_padding'),\n            left: $r('app.float.twelves_padding'),\n            right: $r('app.float.twelves_padding'),\n            bottom: $r('app.float.twelves_padding')\n          })\n          .backgroundColor(Color.White)\n        }\n        .width(CommonConstants.FULL_PERCENT)\n        .padding($r('app.float.padding_small'))\n      }\n    }\n    .scrollBarWidth(0)\n    .width(CommonConstants.FULL_PERCENT)\n    .height(CommonConstants.FULL_PERCENT)\n    .backgroundColor($r('app.color.graphic_background'))\n    .height(CommonConstants.FULL_PERCENT)\n    .align(Alignment.Top)\n  }\n}", "id": "9cd0eb9d65ffb746c7dde5ab1c0e1f59e25a19730a0a1b0de263caddec1b413c", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 5.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "ArkTS结构完整，生态耦合自然，具备良好的UI构建与样式逻辑，具有较高学习价值。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 4495, "completion_tokens": 72, "total_tokens": 4567, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 5,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"ArkTS结构完整，生态耦合自然，具备良好的UI构建与样式逻辑，具有较高学习价值。\"\n}", "llm_formatted": "import { BreakpointConstants } from '../constants/BreakpointConstants';\nimport { CommonConstants } from '../constants/CommonConstants';\n\n@Component\nexport struct GraphicTextComments {\n  @StorageLink('currentBreakpoint') currentBreakpoint: string = BreakpointConstants.BREAKPOINT_LG;\n  @StorageLink('windowTop') windowTop: number = 0;\n  @Consume('showSideBar') showSideBar: boolean;\n  private TagList: ResourceStr[] = [$r('app.string.free_parking'), $r('app.string.recent_orders'),\n    $r('app.string.positive_feedback')]\n  private CommentsList: ResourceStr[] = ['有图/视频', '好评', '差评', '其他'];\n\n  build() {\n    Scroll() {\n      Column() {\n        Stack() {\n          Image($r('app.media.slt_img'))\n            .width(CommonConstants.FULL_PERCENT)\n            .height($r('app.float.slt_height'))\n          Image($r('app.media.icon_cancel'))\n            .width($r('app.float.common_image'))\n            .aspectRatio(1)\n            .position({\n              top: CommonConstants.ICON_IMAGE_POSITION + this.windowTop,\n              left: $r('app.float.common_padding')\n            })\n            .onClick(() => {\n              this.showSideBar = false;\n            })\n        }\n\n        Column() {\n          Column() {\n            Row() {\n              Text($r('app.string.seabird_park'))\n                .fontSize($r('app.float.delicious_font'))\n                .fontWeight(CommonConstants.FONT_WEIGHT_700)\n              Blank()\n              Column() {\n                Image($r('app.media.v2_ic_public_collect'))\n                  .width($r('app.float.more_width'))\n                  .aspectRatio(1)\n                Text($r('app.string.collections_text'))\n                  .fontColor($r('app.color.sixty_black'))\n                  .fontSize($r('app.float.delivery_font'))\n              }\n            }\n            .width(CommonConstants.FULL_PERCENT)\n            .margin({\n              bottom: $r('app.float.margin_twelves')\n            })\n\n            Row() {\n              ForEach(this.TagList, (item: ResourceStr) => {\n                Text(item)\n                  .fontSize($r('app.float.filtering_font'))\n                  .backgroundColor($r('app.color.background_filtering'))\n                  .fontColor($r('app.color.currency_symbol'))\n                  .padding({\n                    top: $r('app.float.orange_padding'),\n                    bottom: $r('app.float.orange_padding'),\n                    left: $r('app.float.tabs_padding_tb'),\n                    right: $r('app.float.tabs_padding_tb')\n                  })\n                  .margin({\n                    right: $r('app.float.tag_margin_right')\n                  })\n                  .borderRadius($r('app.float.tag_radius'))\n              })\n            }\n            .width(CommonConstants.FULL_PERCENT)\n            .justifyContent(FlexAlign.Start)\n            .margin({\n              bottom: $r('app.float.margin_twelves')\n            })\n\n            Text($r('app.string.address_text'))\n              .fontColor($r('app.color.sixty_black'))\n              .fontSize($r('app.float.delivery_font'))\n              .margin({\n                bottom: $r('app.float.margin_twelves')\n              })\n              .width(CommonConstants.FULL_PERCENT)\n            Row() {\n              Text($r('app.string.currency_symbol'))\n                .fontSize($r('app.float.delivery_font'))\n                .fontColor($r('app.color.currency_symbol'))\n                .margin({\n                  right: $r('app.float.filtering_padding_lr')\n                })\n              Text($r('app.string.price_text'))\n                .fontSize($r('app.float.delicious_font'))\n                .fontColor($r('app.color.currency_symbol'))\n                .margin({\n                  right: $r('app.float.price_margin_right')\n                })\n              Text($r('app.string.tickets_are'))\n                .fontSize($r('app.float.filtering_font'))\n                .fontColor($r('app.color.forty_black'))\n              Blank()\n              if (this.currentBreakpoint !== BreakpointConstants.BREAKPOINT_MD) {\n                Button($r('app.string.add_cart'))\n                  .height($r('app.float.add_cart_height'))\n              }\n            }\n            .width(CommonConstants.FULL_PERCENT)\n          }\n          .borderRadius($r('app.float.dish_border'))\n          .padding({\n            top: $r('app.float.nine_padding'),\n            left: $r('app.float.twelves_padding'),\n            right: $r('app.float.twelves_padding'),\n            bottom: $r('app.float.twelves_padding')\n          })\n          .width(CommonConstants.FULL_PERCENT)\n          .backgroundColor(Color.White)\n          .margin({\n            bottom: $r('app.float.margin_small')\n          })\n\n          Column() {\n            Row() {\n              Text($r('app.string.attraction_details'))\n                .fontWeight(CommonConstants.FONT_WEIGHT_700)\n                .fontSize($r('app.float.attraction_details_font'))\n              Blank()\n              Text($r('app.string.introduction_pictures'))\n                .fontColor($r('app.color.sixty_black'))\n                .fontSize($r('app.float.tabs_font'))\n              Image($r('app.media.ic_public_arrow_right_gray'))\n                .width($r('app.float.more_width'))\n                .aspectRatio(1)\n            }\n            .width(CommonConstants.FULL_PERCENT)\n            .margin({\n              bottom: $r('app.float.nine_margin')\n            })\n\n            Divider()\n              .width(CommonConstants.FULL_PERCENT)\n              .margin({\n                bottom: $r('app.float.margin_twelves')\n              })\n            Row() {\n              Text($r('app.string.opening_hours'))\n                .fontSize($r('app.float.delivery_font'))\n                .fontColor($r('app.color.sixty_black'))\n                .width($r('app.float.opening_width'))\n                .textAlign(TextAlign.Start)\n              Text($r('app.string.last_admission'))\n                .fontSize($r('app.float.delivery_font'))\n                .fontColor($r('app.color.sixty_black'))\n                .layoutWeight(1)\n            }\n            .margin({\n              bottom: $r('app.float.margin_twelves')\n            })\n\n            Row() {\n              Text($r('app.string.tickets_key'))\n                .fontSize($r('app.float.delivery_font'))\n                .fontColor($r('app.color.sixty_black'))\n                .width($r('app.float.opening_width'))\n                .textAlign(TextAlign.Start)\n              Text($r('app.string.tickets_value'))\n                .fontSize($r('app.float.delivery_font'))\n                .fontColor($r('app.color.sixty_black'))\n                .layoutWeight(1)\n            }\n            .margin({\n              bottom: $r('app.float.margin_twelves')\n            })\n\n            Row() {\n              Text($r('app.string.policy_key'))\n                .fontSize($r('app.float.delivery_font'))\n                .fontColor($r('app.color.sixty_black'))\n                .width($r('app.float.opening_width'))\n                .textAlign(TextAlign.Start)\n              Text($r('app.string.policy_value'))\n                .fontSize($r('app.float.delivery_font'))\n                .fontColor($r('app.color.sixty_black'))\n                .layoutWeight(1)\n            }\n            .margin({\n              bottom: $r('app.float.margin_twelves')\n            })\n\n            Row() {\n              Text($r('app.string.tel_key'))\n                .fontSize($r('app.float.delivery_font'))\n                .fontColor($r('app.color.sixty_black'))\n                .width($r('app.float.opening_width'))\n                .textAlign(TextAlign.Start)\n              Text($r('app.string.tel_value'))\n                .fontSize($r('app.float.delivery_font'))\n                .fontColor($r('app.color.sixty_black'))\n                .layoutWeight(1)\n            }\n            .margin({\n              bottom: $r('app.float.margin_twelves')\n            })\n\n          }\n          .width(CommonConstants.FULL_PERCENT)\n          .backgroundColor(Color.White)\n          .borderRadius($r('app.float.dish_border'))\n          .padding({\n            top: $r('app.float.nine_padding'),\n            left: $r('app.float.twelves_padding'),\n            right: $r('app.float.twelves_padding'),\n            bottom: $r('app.float.twelves_padding')\n          })\n          .margin({\n            bottom: $r('app.float.margin_small')\n          })\n\n          Column() {\n            Row() {\n              Text($r('app.string.product_evaluation'))\n                .fontSize($r('app.float.amounts_font'))\n                .fontWeight(CommonConstants.FONT_WEIGHT_700)\n              Blank()\n              Text($r('app.string.reviews_string'))\n                .fontColor($r('app.color.sixty_black'))\n                .fontSize($r('app.float.reviews_font'))\n              Image($r('app.media.ic_public_arrow_right_gray'))\n                .width($r('app.float.more_width'))\n            }\n            .width(CommonConstants.FULL_PERCENT)\n            .margin({\n              bottom: $r('app.float.nine_margin')\n            })\n\n            Divider()\n              .color($r('app.color.five_white'))\n              .margin({\n                bottom: $r('app.float.text_margin_bottom')\n              })\n            Row() {\n              ForEach(this.CommentsList, (item: ResourceStr) => {\n                Text(item)\n                  .fontSize($r('app.float.filtering_font'))\n                  .backgroundColor($r('app.color.background_filtering'))\n                  .fontColor($r('app.color.currency_symbol'))\n                  .padding({\n                    top: $r('app.float.orange_padding'),\n                    bottom: $r('app.float.orange_padding'),\n                    left: $r('app.float.tabs_padding_tb'),\n                    right: $r('app.float.tabs_padding_tb')\n                  })\n                  .margin({\n                    right: $r('app.float.tag_margin_right')\n                  })\n                  .borderRadius($r('app.float.tag_radius'))\n              })\n            }\n            .width(CommonConstants.FULL_PERCENT)\n            .justifyContent(FlexAlign.Start)\n            .margin({\n              bottom: $r('app.float.margin_twelves')\n            })\n\n            Row() {\n              Image($r('app.media.tx2_img'))\n                .width($r('app.float.tx2_width'))\n                .aspectRatio(1)\n                .margin({\n                  right: $r('app.float.back_image_right')\n                })\n              Column() {\n                Text($r('app.string.sanger'))\n                  .fontColor($r('app.color.forty_black'))\n                  .fontSize($r('app.float.delivery_font'))\n                  .margin({\n                    bottom: $r('app.float.sanger_bottom')\n                  })\n                Text($r('app.string.nice_comment'))\n                  .fontSize($r('app.float.delivery_font'))\n              }\n              .alignItems(HorizontalAlign.Start)\n              .padding({\n                top: $r('app.float.text_margin_bottom')\n              })\n              .layoutWeight(1)\n\n              Column() {\n                Image($r('app.media.v2_ic_public_favor'))\n                  .width($r('app.float.more_width'))\n                  .aspectRatio(1)\n                  .margin({\n                    bottom: $r('app.float.favor_bottom')\n                  })\n                Text($r('app.string.two_number'))\n                  .fontColor($r('app.color.forty_black'))\n                  .fontSize($r('app.float.filtering_font'))\n              }\n              .margin({\n                left: $r('app.float.favor_margin_left')\n              })\n            }\n            .width(CommonConstants.FULL_PERCENT)\n            .margin({\n              bottom: $r('app.float.margin_small')\n            })\n\n            Row() {\n              Text($r('app.string.view_all_reviews'))\n                .fontColor($r('app.color.sixty_black'))\n                .fontSize($r('app.float.tabs_font'))\n              Image($r('app.media.icon_more'))\n                .width($r('app.float.more_width'))\n                .aspectRatio(1)\n            }\n            .height($r('app.float.all_comments'))\n          }\n          .borderRadius($r('app.float.dish_border'))\n          .padding({\n            top: $r('app.float.nine_padding'),\n            left: $r('app.float.twelves_padding'),\n            right: $r('app.float.twelves_padding'),\n            bottom: $r('app.float.twelves_padding')\n          })\n          .backgroundColor(Color.White)\n        }\n        .width(CommonConstants.FULL_PERCENT)\n        .padding($r('app.float.padding_small'))\n      }\n    }\n    .scrollBarWidth(0)\n    .width(CommonConstants.FULL_PERCENT)\n    .height(CommonConstants.FULL_PERCENT)\n    .backgroundColor($r('app.color.graphic_background'))\n    .height(CommonConstants.FULL_PERCENT)\n    .align(Alignment.Top)\n  }\n}", "leaked": true, "text_tokens": 2626, "split": "valid"}
{"path": "MultiCommunityApplication~harmonyos_codelabs~1303/commons/base/src/main/ets/model/CommentModel.ets", "project_name": "MultiCommunityApplication~harmonyos_codelabs~1303", "text": "import { CommentItemInterface } from '../viewmodel/CommentViewModel';\n\nexport const COMMENT_LIST: CommentItemInterface[] = [\n  {\n    icon: $r('app.media.ic_comment_1'),\n    name: $r('app.string.name_6'),\n    favorCount: 41,\n    content: $r('app.string.content_7'),\n    timePosition: $r('app.string.time_position_1'),\n    reviewCnt: 123,\n    subContent: $r('app.string.sub_content_1')\n  },\n  {\n    icon: $r('app.media.ic_comment_2'),\n    name: $r('app.string.name_7'),\n    favorCount: 36,\n    content: $r('app.string.content_8'),\n    timePosition: $r('app.string.time_position_2'),\n    reviewCnt: 12,\n    subContent: $r('app.string.sub_content_1')\n  },\n  {\n    icon : $r('app.media.ic_comment_3'),\n    name: $r('app.string.name_8'),\n    favorCount: 432,\n    content: $r('app.string.content_9'),\n    timePosition: $r('app.string.time_position_3')\n  },\n  {\n    icon : $r('app.media.ic_icon_2'),\n    name : $r('app.string.name_5'),\n    favorCount: 33,\n    content : $r('app.string.content_10'),\n    timePosition: $r('app.string.time_position_3')\n  },\n  {\n    icon : $r('app.media.ic_comment_1'),\n    name : $r('app.string.name_9'),\n    favorCount: 6,\n    content : $r('app.string.content_11'),\n    timePosition: $r('app.string.time_position_4')\n  },\n  {\n    icon : $r('app.media.ic_comment_2'),\n    name : $r('app.string.name_10'),\n    favorCount: 5,\n    content : $r('app.string.content_12'),\n    timePosition: $r('app.string.time_position_5')\n  },\n  {\n    icon : $r('app.media.ic_comment_3'),\n    name : $r('app.string.name_11'),\n    favorCount: 33,\n    content : $r('app.string.content_13'),\n    timePosition: $r('app.string.time_position_6')\n  }\n]", "id": "55c3a04eb8cf8201f67d7a6673a70ec1c388dfc10a03438e56a4c1b5e73839be", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 3.0, "confidence": 0.9, "rationale": "结构清晰，符合ArkTS生态，具备实际业务数据模拟价值。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2386, "completion_tokens": 63, "total_tokens": 2449, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 3,\n  \"confidence\": 0.9,\n  \"rationale\": \"结构清晰，符合ArkTS生态，具备实际业务数据模拟价值。\"\n}", "llm_formatted": "import { CommentItemInterface } from '../viewmodel/CommentViewModel';\n\nexport const COMMENT_LIST: CommentItemInterface[] = [\n  {\n    icon: $r('app.media.ic_comment_1'),\n    name: $r('app.string.name_6'),\n    favorCount: 41,\n    content: $r('app.string.content_7'),\n    timePosition: $r('app.string.time_position_1'),\n    reviewCnt: 123,\n    subContent: $r('app.string.sub_content_1')\n  },\n  {\n    icon: $r('app.media.ic_comment_2'),\n    name: $r('app.string.name_7'),\n    favorCount: 36,\n    content: $r('app.string.content_8'),\n    timePosition: $r('app.string.time_position_2'),\n    reviewCnt: 12,\n    subContent: $r('app.string.sub_content_1')\n  },\n  {\n    icon: $r('app.media.ic_comment_3'),\n    name: $r('app.string.name_8'),\n    favorCount: 432,\n    content: $r('app.string.content_9'),\n    timePosition: $r('app.string.time_position_3')\n  },\n  {\n    icon: $r('app.media.ic_icon_2'),\n    name: $r('app.string.name_5'),\n    favorCount: 33,\n    content: $r('app.string.content_10'),\n    timePosition: $r('app.string.time_position_3')\n  },\n  {\n    icon: $r('app.media.ic_comment_1'),\n    name: $r('app.string.name_9'),\n    favorCount: 6,\n    content: $r('app.string.content_11'),\n    timePosition: $r('app.string.time_position_4')\n  },\n  {\n    icon: $r('app.media.ic_comment_2'),\n    name: $r('app.string.name_10'),\n    favorCount: 5,\n    content: $r('app.string.content_12'),\n    timePosition: $r('app.string.time_position_5')\n  },\n  {\n    icon: $r('app.media.ic_comment_3'),\n    name: $r('app.string.name_11'),\n    favorCount: 33,\n    content: $r('app.string.content_13'),\n    timePosition: $r('app.string.time_position_6')\n  }\n];", "leaked": true, "text_tokens": 517, "split": "valid"}
{"path": "hmosworld~harmonyos_samples~1320/HMOSWorld/Application/features/mine/src/main/ets/views/SettingView.ets", "project_name": "hmosworld~harmonyos_samples~1320", "text": "import { ConfigurationConstant } from '@kit.AbilityKit';\nimport { BreakpointTypeEnum, CommonConstants, DarkModeSettingsConfig, DarkModeType, WindowUtil } from '@ohos/utils';\nimport { TopNavigationView } from '@ohos/uicomponents';\nimport { UserHeadComponent } from '../components/UserHeadComponent';\n\n@Component\nexport struct SettingView {\n  @Consume('appPathStack') appPathStack: NavPathStack;\n  @Consume('settingPathStack') settingPathStack: NavPathStack;\n  @StorageProp('currentBreakpoint') currentBreakpoint: string = BreakpointTypeEnum.MD;\n  @State selectedIndex: number = -1;\n  changeStatusBar: boolean = false;\n\n  goBack(): void {\n    this.appPathStack.pop();\n  }\n\n  aboutToAppear() {\n    if (this.currentBreakpoint === BreakpointTypeEnum.SM) {\n      this.changeStatusBar = true;\n      WindowUtil.updateStatusBarColor(getContext(this),\n        AppStorage.get('currentColorMode') === ConfigurationConstant.ColorMode.COLOR_MODE_DARK);\n    }\n  }\n\n  aboutToDisappear(): void {\n    if (this.changeStatusBar) {\n      WindowUtil.updateStatusBarColor(getContext(this), true);\n    }\n  }\n\n  build() {\n    NavDestination() {\n      Navigation(this.settingPathStack) {\n        Column() {\n          TopNavigationView({\n            title: $r('app.string.settings_title'),\n            onBackClick: this.currentBreakpoint === BreakpointTypeEnum.SM ? () => this.goBack() : undefined\n          })\n\n          Column({ space: CommonConstants.SPACE_12 }) {\n            UserAccountComponent({ selectedIndex: $selectedIndex })\n            DarkModeSettingCard({ selectedIndex: $selectedIndex })\n          }\n          .padding(\n            { left: $r('app.float.lg_padding_margin'), right: $r('app.float.lg_padding_margin') })\n          .layoutWeight(1)\n        }\n        .height(CommonConstants.FULL_PERCENT)\n        .width(CommonConstants.FULL_PERCENT)\n        .padding({\n          top: this.currentBreakpoint === BreakpointTypeEnum.SM ? AppStorage.get<number>('statusBarHeight') :\n          $r('app.float.sm_padding_margin')\n        })\n      }\n      .backgroundColor($r('sys.color.ohos_id_color_sub_background'))\n      .height(CommonConstants.FULL_PERCENT)\n      .width(CommonConstants.FULL_PERCENT)\n      .navBarWidth(CommonConstants.NAVI_BAR_WIDTH)\n      .hideTitleBar(true)\n      .title($r('app.string.settings_title'))\n      .titleMode(NavigationTitleMode.Free)\n    }\n    .hideTitleBar(true)\n  }\n}\n\n@Component\nstruct UserAccountComponent {\n  @Consume('settingPathStack') settingPathStack: NavPathStack;\n  @Link selectedIndex: number;\n  @StorageProp('currentBreakpoint') currentBreakpoint: string = BreakpointTypeEnum.MD;\n\n  build() {\n    Column() {\n      Row() {\n        UserHeadComponent()\n          .layoutWeight(1)\n\n        SymbolGlyph($r('sys.symbol.chevron_right'))\n          .fontColor([$r('sys.color.ohos_id_color_text_tertiary')])\n          .fontSize($r('app.float.nav_title_font_size'))\n      }\n      .backgroundColor(this.selectedIndex === 0 ? $r('app.color.setting_selected_bg') :\n      $r('app.color.clear_color'))\n      .width(CommonConstants.FULL_PERCENT)\n      .borderRadius($r('app.float.large_border_radius'))\n      .padding({\n        left: $r('app.float.sm_padding_margin'),\n        top: $r('app.float.lg_padding_margin'),\n        right: $r('app.float.sm_padding_margin'),\n        bottom: $r('app.float.lg_padding_margin')\n      })\n      .onClick(() => {\n        this.settingPathStack.pushPathByName('UserAccountView', undefined);\n      })\n    }\n    .backgroundColor($r('app.color.hmos_article_card_color_white'))\n    .padding($r('app.float.ss_padding_margin'))\n    .width(CommonConstants.FULL_PERCENT)\n    .borderRadius($r('app.float.large_border_radius'))\n  }\n}\n\n@Component\nstruct DarkModeSettingCard {\n  @Consume('settingPathStack') settingPathStack: NavPathStack;\n  @Link selectedIndex: number;\n  @StorageProp('currentBreakpoint') currentBreakpoint: string = BreakpointTypeEnum.MD;\n  @StorageProp('darkModeConfig') darkModeConfig: DarkModeSettingsConfig = new DarkModeSettingsConfig();\n\n  build() {\n    Column() {\n      Row() {\n        Text($r('app.string.dark_mode_btn_title'))\n          .fontFamily(CommonConstants.HARMONY_HEI_TI_FONT_FAMILY)\n          .fontSize($r('app.float.default_font_size'))\n          .fontWeight(CommonConstants.DIALOG_BUTTON_FONT_WEIGHT)\n          .fontColor($r('sys.color.ohos_id_color_text_primary'))\n          .lineHeight($r('app.float.like_icon_width'))\n          .layoutWeight(1)\n        Text(this.darkModeConfig.switchType === DarkModeType.TIMED ? $r('app.string.dark_mode_timed') :\n          (this.darkModeConfig.switchType === DarkModeType.ALL_DAY ? $r('app.string.dark_mode_all_day') :\n          $r('app.string.dark_mode_follow_up')))\n          .fontFamily(CommonConstants.HARMONY_HEI_TI_FONT_FAMILY)\n          .fontSize($r('app.float.title_font_size'))\n          .fontWeight(CommonConstants.NORMAL_FONT_WEIGHT)\n          .lineHeight($r('app.float.view_area_height'))\n          .fontColor($r('sys.color.ohos_id_color_text_secondary'))\n        SymbolGlyph($r('sys.symbol.chevron_right'))\n          .fontColor([$r('sys.color.ohos_id_color_text_tertiary')])\n          .fontSize($r('app.float.nav_title_font_size'))\n      }\n      .height($r('app.float.tab_bar_height'))\n      .backgroundColor(this.selectedIndex === 1 ? $r('app.color.setting_selected_bg') :\n      $r('app.color.clear_color'))\n      .width(CommonConstants.FULL_PERCENT)\n      .borderRadius($r('app.float.large_border_radius'))\n      .padding({\n        top: $r('app.float.md_padding_margin'),\n        left: $r('app.float.sm_padding_margin'),\n        bottom: $r('app.float.md_padding_margin'),\n        right: $r('app.float.sm_padding_margin')\n      })\n    }\n    .backgroundColor($r('app.color.hmos_article_card_color_white'))\n    .width(CommonConstants.FULL_PERCENT)\n    .borderRadius($r('app.float.large_border_radius'))\n    .padding($r('app.float.ss_padding_margin'))\n    .onClick(() => {\n      this.settingPathStack.pushPathByName('ThemeConfigView', undefined);\n    })\n  }\n}\n\n@Builder\nexport function SettingViewBuilder(): void {\n  SettingView();\n}", "id": "0327d12b32cd8452312e46b5cd361c3abdf0629234e7f4a7d32c4e57e9d423ee", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "ArkTS语法规范，生态耦合自然，结构清晰，具学习价值", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2667, "completion_tokens": 69, "total_tokens": 2736, "raw_response": "```json\n{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"ArkTS语法规范，生态耦合自然，结构清晰，具学习价值\"\n}\n```", "llm_formatted": "import { ConfigurationConstant } from '@kit.AbilityKit';\nimport { BreakpointTypeEnum, CommonConstants, DarkModeSettingsConfig, DarkModeType, WindowUtil } from '@ohos/utils';\nimport { TopNavigationView } from '@ohos/uicomponents';\nimport { UserHeadComponent } from '../components/UserHeadComponent';\n\n@Component\nexport struct SettingView {\n  @Consume('appPathStack') appPathStack: NavPathStack;\n  @Consume('settingPathStack') settingPathStack: NavPathStack;\n  @StorageProp('currentBreakpoint') currentBreakpoint: string = BreakpointTypeEnum.MD;\n  @State selectedIndex: number = -1;\n  changeStatusBar: boolean = false;\n\n  goBack(): void {\n    this.appPathStack.pop();\n  }\n\n  aboutToAppear() {\n    if (this.currentBreakpoint === BreakpointTypeEnum.SM) {\n      this.changeStatusBar = true;\n      WindowUtil.updateStatusBarColor(getContext(this),\n        AppStorage.get('currentColorMode') === ConfigurationConstant.ColorMode.COLOR_MODE_DARK);\n    }\n  }\n\n  aboutToDisappear(): void {\n    if (this.changeStatusBar) {\n      WindowUtil.updateStatusBarColor(getContext(this), true);\n    }\n  }\n\n  build() {\n    NavDestination() {\n      Navigation(this.settingPathStack) {\n        Column() {\n          TopNavigationView({\n            title: $r('app.string.settings_title'),\n            onBackClick: this.currentBreakpoint === BreakpointTypeEnum.SM ? () => this.goBack() : undefined\n          })\n\n          Column({ space: CommonConstants.SPACE_12 }) {\n            UserAccountComponent({ selectedIndex: $selectedIndex })\n            DarkModeSettingCard({ selectedIndex: $selectedIndex })\n          }\n          .padding(\n            { left: $r('app.float.lg_padding_margin'), right: $r('app.float.lg_padding_margin') })\n          .layoutWeight(1)\n        }\n        .height(CommonConstants.FULL_PERCENT)\n        .width(CommonConstants.FULL_PERCENT)\n        .padding({\n          top: this.currentBreakpoint === BreakpointTypeEnum.SM ? AppStorage.get<number>('statusBarHeight') :\n          $r('app.float.sm_padding_margin')\n        })\n      }\n      .backgroundColor($r('sys.color.ohos_id_color_sub_background'))\n      .height(CommonConstants.FULL_PERCENT)\n      .width(CommonConstants.FULL_PERCENT)\n      .navBarWidth(CommonConstants.NAVI_BAR_WIDTH)\n      .hideTitleBar(true)\n      .title($r('app.string.settings_title'))\n      .titleMode(NavigationTitleMode.Free)\n    }\n    .hideTitleBar(true)\n  }\n}\n\n@Component\nstruct UserAccountComponent {\n  @Consume('settingPathStack') settingPathStack: NavPathStack;\n  @Link selectedIndex: number;\n  @StorageProp('currentBreakpoint') currentBreakpoint: string = BreakpointTypeEnum.MD;\n\n  build() {\n    Column() {\n      Row() {\n        UserHeadComponent()\n          .layoutWeight(1)\n\n        SymbolGlyph($r('sys.symbol.chevron_right'))\n          .fontColor([$r('sys.color.ohos_id_color_text_tertiary')])\n          .fontSize($r('app.float.nav_title_font_size'))\n      }\n      .backgroundColor(this.selectedIndex === 0 ? $r('app.color.setting_selected_bg') :\n      $r('app.color.clear_color'))\n      .width(CommonConstants.FULL_PERCENT)\n      .borderRadius($r('app.float.large_border_radius'))\n      .padding({\n        left: $r('app.float.sm_padding_margin'),\n        top: $r('app.float.lg_padding_margin'),\n        right: $r('app.float.sm_padding_margin'),\n        bottom: $r('app.float.lg_padding_margin')\n      })\n      .onClick(() => {\n        this.settingPathStack.pushPathByName('UserAccountView', undefined);\n      })\n    }\n    .backgroundColor($r('app.color.hmos_article_card_color_white'))\n    .padding($r('app.float.ss_padding_margin'))\n    .width(CommonConstants.FULL_PERCENT)\n    .borderRadius($r('app.float.large_border_radius'))\n  }\n}\n\n@Component\nstruct DarkModeSettingCard {\n  @Consume('settingPathStack') settingPathStack: NavPathStack;\n  @Link selectedIndex: number;\n  @StorageProp('currentBreakpoint') currentBreakpoint: string = BreakpointTypeEnum.MD;\n  @StorageProp('darkModeConfig') darkModeConfig: DarkModeSettingsConfig = new DarkModeSettingsConfig();\n\n  build() {\n    Column() {\n      Row() {\n        Text($r('app.string.dark_mode_btn_title'))\n          .fontFamily(CommonConstants.HARMONY_HEI_TI_FONT_FAMILY)\n          .fontSize($r('app.float.default_font_size'))\n          .fontWeight(CommonConstants.DIALOG_BUTTON_FONT_WEIGHT)\n          .fontColor($r('sys.color.ohos_id_color_text_primary'))\n          .lineHeight($r('app.float.like_icon_width'))\n          .layoutWeight(1)\n        Text(this.darkModeConfig.switchType === DarkModeType.TIMED ? $r('app.string.dark_mode_timed') :\n          (this.darkModeConfig.switchType === DarkModeType.ALL_DAY ? $r('app.string.dark_mode_all_day') :\n          $r('app.string.dark_mode_follow_up')))\n          .fontFamily(CommonConstants.HARMONY_HEI_TI_FONT_FAMILY)\n          .fontSize($r('app.float.title_font_size'))\n          .fontWeight(CommonConstants.NORMAL_FONT_WEIGHT)\n          .lineHeight($r('app.float.view_area_height'))\n          .fontColor($r('sys.color.ohos_id_color_text_secondary'))\n        SymbolGlyph($r('sys.symbol.chevron_right'))\n          .fontColor([$r('sys.color.ohos_id_color_text_tertiary')])\n          .fontSize($r('app.float.nav_title_font_size'))\n      }\n      .height($r('app.float.tab_bar_height'))\n      .backgroundColor(this.selectedIndex === 1 ? $r('app.color.setting_selected_bg') :\n      $r('app.color.clear_color'))\n      .width(CommonConstants.FULL_PERCENT)\n      .borderRadius($r('app.float.large_border_radius'))\n      .padding({\n        top: $r('app.float.md_padding_margin'),\n        left: $r('app.float.sm_padding_margin'),\n        bottom: $r('app.float.md_padding_margin'),\n        right: $r('app.float.sm_padding_margin')\n      })\n    }\n    .backgroundColor($r('app.color.hmos_article_card_color_white'))\n    .width(CommonConstants.FULL_PERCENT)\n    .borderRadius($r('app.float.large_border_radius'))\n    .padding($r('app.float.ss_padding_margin'))\n    .onClick(() => {\n      this.settingPathStack.pushPathByName('ThemeConfigView', undefined);\n    })\n  }\n}\n\n@Builder\nexport function SettingViewBuilder(): void {\n  SettingView();\n}", "leaked": true, "text_tokens": 1399, "split": "valid"}
{"path": "ASMR~Jiagu1218~5402/services/MediaService/src/main/ets/utils/AVSessionUtil.ets", "project_name": "ASMR~Jiagu1218~5402", "text": "import { avSession } from '@kit.AVSessionKit';\nimport { BusinessError } from '@kit.BasicServicesKit';\n\nimport { media } from '@kit.MediaKit';\nimport { common, wantAgent } from '@kit.AbilityKit';\nimport { LogUtil, MusicData } from 'common';\n\nexport namespace AVSessionUtil {\n  export async function createAVSession(context: common.UIAbilityContext):Promise<avSession.AVSession>{\n    return avSession.createAVSession(context, 'ASMR_AUDIO_SESSION', 'audio').then(session=>{\n      session?.activate().then(()=>{\n        LogUtil.info(`媒体会话激活`)\n      })\n      let wantAgentInfo: wantAgent.WantAgentInfo = {\n        wants: [\n          {\n            bundleName: context.abilityInfo.bundleName,\n            abilityName: context.abilityInfo.name\n          }\n        ],\n        operationType: wantAgent.OperationType.START_ABILITIES,\n        requestCode: 0,\n        wantAgentFlags: [wantAgent.WantAgentFlags.UPDATE_PRESENT_FLAG]\n      }\n      wantAgent.getWantAgent(wantAgentInfo).then((agent) => {\n        session.setLaunchAbility(agent).catch((e:BusinessError)=>{\n          LogUtil.error(`媒体会话setLaunchAbility失败${e.message}`,e)\n        })\n      })\n      return session\n    })\n  }\n\n  export function coverToMetaData(mediaData:MusicData):avSession.AVMetadata{\n    return {\n      assetId: mediaData.id, // 由应用指定，用于标识应用媒体库里的媒体\n      title: mediaData.title,\n      mediaImage: mediaData.imageUrl,\n      artist: mediaData.singer,\n      duration:mediaData.duration\n    }\n  }\n\n  export function coverToPlayBackState(playState:media.AVPlayerState):avSession.PlaybackState{\n    switch (playState){\n      case 'idle': return avSession.PlaybackState.PLAYBACK_STATE_IDLE\n      case 'initialized': return avSession.PlaybackState.PLAYBACK_STATE_INITIAL\n      case 'prepared': return avSession.PlaybackState.PLAYBACK_STATE_PREPARE\n      case 'playing': return avSession.PlaybackState.PLAYBACK_STATE_PLAY\n      case 'paused': return avSession.PlaybackState.PLAYBACK_STATE_PAUSE\n      case 'stopped': return avSession.PlaybackState.PLAYBACK_STATE_STOP\n      case 'completed': return avSession.PlaybackState.PLAYBACK_STATE_COMPLETED\n      case 'released': return avSession.PlaybackState.PLAYBACK_STATE_RELEASED\n      case 'error': return avSession.PlaybackState.PLAYBACK_STATE_ERROR\n      default: return avSession.PlaybackState.PLAYBACK_STATE_ERROR\n    }\n  }\n\n  export async function setAVSessionInfo(session:avSession.AVSession,mediaData:MusicData,playState:media.AVPlayerState) {\n    // 设置必要的媒体信息\n    setAVMataData(session,mediaData)\n    // 简单设置一个播放状态\n    setAVPlaybackState(session,playState)\n  }\n  export async function setAVPlaybackState(session:avSession.AVSession,playState:media.AVPlayerState){\n    // 简单设置一个播放状态 - 暂停 未收藏\n    let playbackState: avSession.AVPlaybackState = {\n      state:coverToPlayBackState(playState),\n      isFavorite:false\n    };\n    session.setAVPlaybackState(playbackState, (err) => {\n      if (err) {\n        LogUtil.error(`Failed to set AVPlaybackState. Code: ${err.code}, message: ${err.message}`);\n      } else {\n        LogUtil.info(`SetAVPlaybackState successfully`);\n      }\n    });\n  }\n\n  export async function setAVPlaybackStatePosition(session:avSession.AVSession,currentTime:number){\n    session.setAVPlaybackState({\n      position: {\n        elapsedTime: currentTime,\n        updateTime: new Date().getTime()\n      }\n    }, (err) => {\n      if (err) {\n        LogUtil.error(`Failed to set AVPlaybackState. Code: ${err.code}, message: ${err.message}`);\n      } else {\n        LogUtil.info(`SetAVPlaybackState successfully`);\n      }\n    });\n  }\n\n  export async function setAVMataData(session:avSession.AVSession,mediaData:MusicData){\n    // 设置必要的媒体信息\n    let metadata: avSession.AVMetadata = coverToMetaData(mediaData)\n    session.setAVMetadata(metadata).then(() => {\n      LogUtil.info(`SetAVMetadata successfully`);\n    }).catch((err: BusinessError) => {\n      LogUtil.error(`Failed to set AVMetadata. Code: ${err.code}, message: ${err.message}`);\n    });\n  }\n}", "id": "dccc42021beb0e5b81f3b4f35ab599e569e054de069a34eb68c327479e8e4766", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "ArkTS生态耦合良好，结构清晰，具备实用性和学习价值。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2846, "completion_tokens": 65, "total_tokens": 2911, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"ArkTS生态耦合良好，结构清晰，具备实用性和学习价值。\"\n}", "llm_formatted": "import { avSession } from '@kit.AVSessionKit';\nimport { BusinessError } from '@kit.BasicServicesKit';\n\nimport { media } from '@kit.MediaKit';\nimport { common, wantAgent } from '@kit.AbilityKit';\nimport { LogUtil, MusicData } from 'common';\n\nexport namespace AVSessionUtil {\n  export async function createAVSession(context: common.UIAbilityContext):Promise<avSession.AVSession>{\n    return avSession.createAVSession(context, 'ASMR_AUDIO_SESSION', 'audio').then(session=>{\n      session?.activate().then(()=>{\n        LogUtil.info(`媒体会话激活`)\n      })\n      let wantAgentInfo: wantAgent.WantAgentInfo = {\n        wants: [\n          {\n            bundleName: context.abilityInfo.bundleName,\n            abilityName: context.abilityInfo.name\n          }\n        ],\n        operationType: wantAgent.OperationType.START_ABILITIES,\n        requestCode: 0,\n        wantAgentFlags: [wantAgent.WantAgentFlags.UPDATE_PRESENT_FLAG]\n      }\n      wantAgent.getWantAgent(wantAgentInfo).then((agent) => {\n        session.setLaunchAbility(agent).catch((e:BusinessError)=>{\n          LogUtil.error(`媒体会话setLaunchAbility失败${e.message}`,e)\n        })\n      })\n      return session\n    })\n  }\n\n  export function coverToMetaData(mediaData:MusicData):avSession.AVMetadata{\n    return {\n      assetId: mediaData.id, // 由应用指定，用于标识应用媒体库里的媒体\n      title: mediaData.title,\n      mediaImage: mediaData.imageUrl,\n      artist: mediaData.singer,\n      duration:mediaData.duration\n    }\n  }\n\n  export function coverToPlayBackState(playState:media.AVPlayerState):avSession.PlaybackState{\n    switch (playState){\n      case 'idle': return avSession.PlaybackState.PLAYBACK_STATE_IDLE\n      case 'initialized': return avSession.PlaybackState.PLAYBACK_STATE_INITIAL\n      case 'prepared': return avSession.PlaybackState.PLAYBACK_STATE_PREPARE\n      case 'playing': return avSession.PlaybackState.PLAYBACK_STATE_PLAY\n      case 'paused': return avSession.PlaybackState.PLAYBACK_STATE_PAUSE\n      case 'stopped': return avSession.PlaybackState.PLAYBACK_STATE_STOP\n      case 'completed': return avSession.PlaybackState.PLAYBACK_STATE_COMPLETED\n      case 'released': return avSession.PlaybackState.PLAYBACK_STATE_RELEASED\n      case 'error': return avSession.PlaybackState.PLAYBACK_STATE_ERROR\n      default: return avSession.PlaybackState.PLAYBACK_STATE_ERROR\n    }\n  }\n\n  export async function setAVSessionInfo(session:avSession.AVSession,mediaData:MusicData,playState:media.AVPlayerState) {\n    // 设置必要的媒体信息\n    setAVMataData(session,mediaData)\n    // 简单设置一个播放状态\n    setAVPlaybackState(session,playState)\n  }\n  export async function setAVPlaybackState(session:avSession.AVSession,playState:media.AVPlayerState){\n    // 简单设置一个播放状态 - 暂停 未收藏\n    let playbackState: avSession.AVPlaybackState = {\n      state:coverToPlayBackState(playState),\n      isFavorite:false\n    };\n    session.setAVPlaybackState(playbackState, (err) => {\n      if (err) {\n        LogUtil.error(`Failed to set AVPlaybackState. Code: ${err.code}, message: ${err.message}`);\n      } else {\n        LogUtil.info(`SetAVPlaybackState successfully`);\n      }\n    });\n  }\n\n  export async function setAVPlaybackStatePosition(session:avSession.AVSession,currentTime:number){\n    session.setAVPlaybackState({\n      position: {\n        elapsedTime: currentTime,\n        updateTime: new Date().getTime()\n      }\n    }, (err) => {\n      if (err) {\n        LogUtil.error(`Failed to set AVPlaybackState. Code: ${err.code}, message: ${err.message}`);\n      } else {\n        LogUtil.info(`SetAVPlaybackState successfully`);\n      }\n    });\n  }\n\n  export async function setAVMataData(session:avSession.AVSession,mediaData:MusicData){\n    // 设置必要的媒体信息\n    let metadata: avSession.AVMetadata = coverToMetaData(mediaData)\n    session.setAVMetadata(metadata).then(() => {\n      LogUtil.info(`SetAVMetadata successfully`);\n    }).catch((err: BusinessError) => {\n      LogUtil.error(`Failed to set AVMetadata. Code: ${err.code}, message: ${err.message}`);\n    });\n  }\n}", "leaked": true, "text_tokens": 977, "split": "valid"}
{"path": "language-base-class-library~harmonyos_samples~528/feature/capabilities/src/main/ets/components/plainarraycomponents/PlainArrayDataSource.ets", "project_name": "language-base-class-library~harmonyos_samples~528", "text": "import { PlainArray, ArrayList } from '@kit.ArkTS';\nimport { BaseDataSource } from '@ohos/common';\nimport { KeyValuePair } from '../../model/KeyValuePair';\n\nexport class PlainArrayDataSource extends BaseDataSource {\n  private dataArr: PlainArray<string> = new PlainArray();\n  private arr: ArrayList<number> = new ArrayList();\n\n  public totalCount(): number {\n    return this.arr.length;\n  }\n\n  public getData(index: number): KeyValuePair {\n    let key: number = this.arr[index];\n    let value: string = this.dataArr.get(key);\n    this.dataArr.get(this.arr[index]);\n    let keyValuePair: KeyValuePair = new KeyValuePair(`${this.arr[index]}`, value);\n    return keyValuePair;\n  }\n\n  public addData(keyValuePair: KeyValuePair): void {\n    let key: number = Number(keyValuePair.key);\n    if (!this.dataArr.has(key)) {\n      this.arr.add(key)\n    }\n    this.dataArr.add(key, keyValuePair.value);\n    this.notifyDataAdd(this.dataArr.length - 1);\n    this.notifyDataReload();\n  }\n\n  public deleteData(index: number): void {\n    this.dataArr.removeAt(index);\n    this.arr.removeByIndex(index);\n    this.notifyDataDelete(index);\n    this.notifyDataReload();\n  }\n}", "id": "0478f7ccd3a270c0888f7935bb83f9b81c36faee6b5989e7ad7a7dd47632440f", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "结构清晰，类型使用规范，生态耦合自然，具备良好学习价值。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 1529, "completion_tokens": 70, "total_tokens": 1599, "raw_response": "```json\n{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"结构清晰，类型使用规范，生态耦合自然，具备良好学习价值。\"\n}\n```", "llm_formatted": "import { PlainArray, ArrayList } from '@kit.ArkTS';\nimport { BaseDataSource } from '@ohos/common';\nimport { KeyValuePair } from '../../model/KeyValuePair';\n\nexport class PlainArrayDataSource extends BaseDataSource {\n  private dataArr: PlainArray<string> = new PlainArray();\n  private arr: ArrayList<number> = new ArrayList();\n\n  public totalCount(): number {\n    return this.arr.length;\n  }\n\n  public getData(index: number): KeyValuePair {\n    let key: number = this.arr[index];\n    let value: string = this.dataArr.get(key);\n    this.dataArr.get(this.arr[index]);\n    let keyValuePair: KeyValuePair = new KeyValuePair(`${this.arr[index]}`, value);\n    return keyValuePair;\n  }\n\n  public addData(keyValuePair: KeyValuePair): void {\n    let key: number = Number(keyValuePair.key);\n    if (!this.dataArr.has(key)) {\n      this.arr.add(key)\n    }\n    this.dataArr.add(key, keyValuePair.value);\n    this.notifyDataAdd(this.dataArr.length - 1);\n    this.notifyDataReload();\n  }\n\n  public deleteData(index: number): void {\n    this.dataArr.removeAt(index);\n    this.arr.removeByIndex(index);\n    this.notifyDataDelete(index);\n    this.notifyDataReload();\n  }\n}", "leaked": true, "text_tokens": 261, "split": "valid"}
{"path": "component-collection~harmonyos_samples~391/entry/src/main/ets/pages/components/stackFlexAndGrid/gridRowSample/GridRowSample.ets", "project_name": "component-collection~harmonyos_samples~391", "text": "import { IntroductionTitle } from '../../../../common/IntroductionTitle';\nimport { TitleBar } from '../../../../common/TitleBar';\nimport { LEFT_PADDING, RIGHT_PADDING } from '../../ComponentData';\nimport { ArgumentsControlPanel } from './GridRowControlPanel';\n\n@Extend(Column)\nfunction backgroundStyle() {\n  .width('100%')\n  .padding(12)\n  .borderRadius(16)\n  .backgroundColor(Color.White)\n  .justifyContent(FlexAlign.SpaceAround)\n}\n\n@Entry\n@Component\nstruct GridRowSample {\n  @State bgColors: Color[] = [Color.Red, Color.Orange, Color.Yellow, Color.Green, Color.Pink, Color.Grey, Color.Blue, Color.Brown];\n  @State currentBp: string = 'unknown';\n  @State columns: number = 5;\n  @State gutterX: number = 5;\n  @State gutterY: number = 10;\n\n  build() {\n    Column() {\n      TitleBar({ title: $r('app.string.gridrow_title') })\n      Scroll() {\n        Column() {\n          GridRow({\n            columns: this.columns,\n            gutter: { x: this.gutterX, y: this.gutterY },\n            breakpoints: { value: [\"400vp\", \"600vp\", \"800vp\"],\n              reference: BreakpointsReference.WindowSize },\n            direction: GridRowDirection.Row\n          }) {\n            ForEach(this.bgColors, (color: Color) => {\n              GridCol({ span: { xs: 1, sm: 2, md: 3, lg: 4 }, offset: 0, order: 0 }) {\n                Row().width(\"100%\").height(\"20vp\")\n              }.borderColor(color).borderWidth(2)\n            })\n          }.width(\"100%\").height(\"100%\")\n          .onBreakpointChange((breakpoint) => {\n            this.currentBp = breakpoint;\n          })\n\n          IntroductionTitle({ introduction: $r('app.string.gridrow_introdional_arguments') })\n          Column() {\n            ArgumentsControlPanel(\n              {\n                columns: $columns,\n                gutterX: $gutterX,\n                gutterY: $gutterY,\n              }\n            )\n          }\n          .backgroundStyle()\n        }\n        .width('100%')\n      }\n      .padding({ left: LEFT_PADDING, right: RIGHT_PADDING })\n      .margin({ bottom: 80 })\n    }\n    .height('100%')\n    .width('100%')\n    .backgroundColor($r('app.color.background_shallow_grey'))\n  }\n}", "id": "e82c1f76b2b0fcf8ec9a409b849f4eb6bddac07d40c9217c977a3fbe533c29e9", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "结构完整，生态耦合自然，具备良好的ArkTS实践与可迁移性。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2424, "completion_tokens": 67, "total_tokens": 2491, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"结构完整，生态耦合自然，具备良好的ArkTS实践与可迁移性。\"\n}", "llm_formatted": "import { IntroductionTitle } from '../../../../common/IntroductionTitle';\nimport { TitleBar } from '../../../../common/TitleBar';\nimport { LEFT_PADDING, RIGHT_PADDING } from '../../ComponentData';\nimport { ArgumentsControlPanel } from './GridRowControlPanel';\n\n@Extend(Column)\nfunction backgroundStyle() {\n  .width('100%')\n  .padding(12)\n  .borderRadius(16)\n  .backgroundColor(Color.White)\n  .justifyContent(FlexAlign.SpaceAround)\n}\n\n@Entry\n@Component\nstruct GridRowSample {\n  @State bgColors: Color[] = [Color.Red, Color.Orange, Color.Yellow, Color.Green, Color.Pink, Color.Grey, Color.Blue, Color.Brown];\n  @State currentBp: string = 'unknown';\n  @State columns: number = 5;\n  @State gutterX: number = 5;\n  @State gutterY: number = 10;\n\n  build() {\n    Column() {\n      TitleBar({ title: $r('app.string.gridrow_title') })\n      Scroll() {\n        Column() {\n          GridRow({\n            columns: this.columns,\n            gutter: { x: this.gutterX, y: this.gutterY },\n            breakpoints: { value: [\"400vp\", \"600vp\", \"800vp\"],\n              reference: BreakpointsReference.WindowSize },\n            direction: GridRowDirection.Row\n          }) {\n            ForEach(this.bgColors, (color: Color) => {\n              GridCol({ span: { xs: 1, sm: 2, md: 3, lg: 4 }, offset: 0, order: 0 }) {\n                Row().width(\"100%\").height(\"20vp\")\n              }.borderColor(color).borderWidth(2)\n            })\n          }.width(\"100%\").height(\"100%\")\n          .onBreakpointChange((breakpoint) => {\n            this.currentBp = breakpoint;\n          })\n\n          IntroductionTitle({ introduction: $r('app.string.gridrow_introdional_arguments') })\n          Column() {\n            ArgumentsControlPanel(\n              {\n                columns: $columns,\n                gutterX: $gutterX,\n                gutterY: $gutterY,\n              }\n            )\n          }\n          .backgroundStyle()\n        }\n        .width('100%')\n      }\n      .padding({ left: LEFT_PADDING, right: RIGHT_PADDING })\n      .margin({ bottom: 80 })\n    }\n    .height('100%')\n    .width('100%')\n    .backgroundColor($r('app.color.background_shallow_grey'))\n  }\n}", "leaked": true, "text_tokens": 555, "split": "valid"}
{"path": "arkui_ace_engine~OpenHarmony~1897/examples/Picker/Picker/entry/src/main/ets/pages/calendarpicker/CalendarPickerExample002.ets", "project_name": "arkui_ace_engine~OpenHarmony~1897", "text": "@Entry\n@Component\nstruct CalendarPickerExample {\n  private selectedDate: Date = new Date('2025-01-15')\n  private startDate: Date = new Date('2025-01-05')\n  private endDate: Date = new Date('2025-01-25')\n\n  build() {\n    Column() {\n      Column() {\n        CalendarPicker({ hintRadius: 10, selected: this.selectedDate, start: this.startDate, end: this.endDate })\n          .edgeAlign(CalendarAlign.END)\n          .textStyle({ color: '#ff182431', font: { size: 20, weight: FontWeight.Normal } })\n          .margin(10)\n          .onChange((value) => {\n            console.info('CalendarPicker onChange:' + JSON.stringify(value))\n          })\n      }.alignItems(HorizontalAlign.End).width('100%')\n    }.width('100%').margin({ top: 350 })\n  }\n}\n", "id": "eda88883342ca06c429233bc99d2b1bee9cbf181a3db09c3d564e290ac8a0616", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 3.0, "confidence": 0.9, "rationale": "ArkTS语法规范，生态耦合自然，具可迁移的组件使用模式", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 1484, "completion_tokens": 65, "total_tokens": 1549, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 3,\n  \"confidence\": 0.9,\n  \"rationale\": \"ArkTS语法规范，生态耦合自然，具可迁移的组件使用模式\"\n}", "llm_formatted": "@Entry\n@Component\nstruct CalendarPickerExample {\n  private selectedDate: Date = new Date('2025-01-15')\n  private startDate: Date = new Date('2025-01-05')\n  private endDate: Date = new Date('2025-01-25')\n\n  build() {\n    Column() {\n      Column() {\n        CalendarPicker({ hintRadius: 10, selected: this.selectedDate, start: this.startDate, end: this.endDate })\n          .edgeAlign(CalendarAlign.END)\n          .textStyle({ color: '#ff182431', font: { size: 20, weight: FontWeight.Normal } })\n          .margin(10)\n          .onChange((value) => {\n            console.info('CalendarPicker onChange:' + JSON.stringify(value))\n          })\n      }.alignItems(HorizontalAlign.End).width('100%')\n    }.width('100%').margin({ top: 350 })\n  }\n}\n", "leaked": true, "text_tokens": 216, "split": "valid"}
{"path": "arkui-linux~openEuler~2446/samples/arkui-test/Component/10_EventAndNotification/entry/src/main/ets/pages/EmitterTest.ets", "project_name": "arkui-linux~openEuler~2446", "text": "import router from '@ohos.router';\nimport emitter from '@ohos.events.emitter';\n\n/* @Extend样式设置 */\n@Extend(Text) function textStyle() {\n  .fontSize(14)\n  .margin({ top: 30, bottom: 20 })\n  .textAlign(TextAlign.Start)\n  .width('80%')\n}\n\n\n@Entry\n@Component\nstruct EmitterTest {\n  @State text: string = \"\";\n\n  private subscribe() {\n    emitter.on({                                // 开启事件订阅\n      eventId: 10086,                           // 指定事件的ID\n      priority: emitter.EventPriority.IMMEDIATE // 事件的优先级\n    }, (data) => {                              // 事件回调\n      if(data) {\n        this.text = \"data: \" + JSON.stringify(data);\n      } else {\n        this.text = \"none data\";\n      }\n    })\n    this.text = \"subscribe success\";\n  }\n\n  private unsubscribe() {\n    emitter.off(10086);                         // 取消订阅事件\n    this.text = \"unsubscribe success\";\n  }\n\n  private publishEvent() {\n    emitter.emit({                              // 发布事件\n      eventId: 10086,                           // 指定事件ID\n      priority: emitter.EventPriority.IMMEDIATE // 指定事件优先级\n    })\n  }\n\n  private publishEventWithData() {\n    emitter.emit({\n      eventId: 10086,                           // 发布事件\n      priority: emitter.EventPriority.IMMEDIATE // 指定事件优先级\n    }, {                                        // 添加额外参数\n      data: {\n        \"test\": 'emitter test'\n      }\n    })\n  }\n\n  build() {\n    Column(){\n      Row() {\n        Button('返回', { type: ButtonType.Normal })\n          .height(30)\n          .width(50)\n          .fontColor('#696969')\n          .backgroundColor('#DCDCDC')\n          .onClick(() => {\n            router.replaceUrl({ url: 'pages/MainPage' });\n          })\n          .margin({ top: 80 })\n          .align(Alignment.Start)\n\n        Text('进程内事件')\n          .fontSize(22)\n          .margin({ top: 80, left: 20 })\n      }\n      .width('80%')\n      .margin({ bottom: 30 })\n\n      Text('Emitter发送的事件作用域只能在APP内部')\n      .textStyle()\n\n      Column({space: 10}) {\n        Button(\"订阅事件\")\n          .size({width: 260, height: 50})\n          .onClick(() => {\n            this.subscribe();\n          })\n\n        Button(\"取消订阅\")\n          .size({width: 260, height: 50})\n          .onClick(() => {\n            this.unsubscribe();\n          })\n\n        Text(this.text)\n          .size({width: 260, height: 100})\n          .fontSize(16)\n          .backgroundColor(\"#dbdbdb\")\n\n        Divider()\n          .size({width: '90%', height: 5})\n\n        Button(\"发布事件\")\n          .size({width: 260, height: 50})\n          .onClick(() => {\n            this.publishEvent();\n          })\n\n        Button(\"发布事件并携带参数\")\n          .size({width: 260, height: 50})\n          .onClick(() => {\n            this.publishEventWithData();\n          })\n\n      }\n      .padding(10)\n      .size({width: \"100%\"})\n\n    }\n    .backgroundColor($r('app.color.background'))\n    .size({width: '100%', height: '100%'})\n  }\n}", "id": "90ea3259bbadde1adeb123ab56b722dd48ac83ee1e4ea2ea67b61d1c63f0bb42", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "ArkTS代码结构完整，生态耦合自然，具备良好的类型与逻辑表达。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2661, "completion_tokens": 67, "total_tokens": 2728, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"ArkTS代码结构完整，生态耦合自然，具备良好的类型与逻辑表达。\"\n}", "llm_formatted": "import router from '@ohos.router';\nimport emitter from '@ohos.events.emitter';\n\n/* @Extend样式设置 */\n@Extend(Text) function textStyle() {\n  .fontSize(14)\n  .margin({ top: 30, bottom: 20 })\n  .textAlign(TextAlign.Start)\n  .width('80%')\n}\n\n\n@Entry\n@Component\nstruct EmitterTest {\n  @State text: string = \"\";\n\n  private subscribe() {\n    emitter.on({                                // 开启事件订阅\n      eventId: 10086,                           // 指定事件的ID\n      priority: emitter.EventPriority.IMMEDIATE // 事件的优先级\n    }, (data) => {                              // 事件回调\n      if(data) {\n        this.text = \"data: \" + JSON.stringify(data);\n      } else {\n        this.text = \"none data\";\n      }\n    })\n    this.text = \"subscribe success\";\n  }\n\n  private unsubscribe() {\n    emitter.off(10086);                         // 取消订阅事件\n    this.text = \"unsubscribe success\";\n  }\n\n  private publishEvent() {\n    emitter.emit({                              // 发布事件\n      eventId: 10086,                           // 指定事件ID\n      priority: emitter.EventPriority.IMMEDIATE // 指定事件优先级\n    })\n  }\n\n  private publishEventWithData() {\n    emitter.emit({\n      eventId: 10086,                           // 发布事件\n      priority: emitter.EventPriority.IMMEDIATE // 指定事件优先级\n    }, {                                        // 添加额外参数\n      data: {\n        \"test\": 'emitter test'\n      }\n    })\n  }\n\n  build() {\n    Column(){\n      Row() {\n        Button('返回', { type: ButtonType.Normal })\n          .height(30)\n          .width(50)\n          .fontColor('#696969')\n          .backgroundColor('#DCDCDC')\n          .onClick(() => {\n            router.replaceUrl({ url: 'pages/MainPage' });\n          })\n          .margin({ top: 80 })\n          .align(Alignment.Start)\n\n        Text('进程内事件')\n          .fontSize(22)\n          .margin({ top: 80, left: 20 })\n      }\n      .width('80%')\n      .margin({ bottom: 30 })\n\n      Text('Emitter发送的事件作用域只能在APP内部')\n      .textStyle()\n\n      Column({space: 10}) {\n        Button(\"订阅事件\")\n          .size({width: 260, height: 50})\n          .onClick(() => {\n            this.subscribe();\n          })\n\n        Button(\"取消订阅\")\n          .size({width: 260, height: 50})\n          .onClick(() => {\n            this.unsubscribe();\n          })\n\n        Text(this.text)\n          .size({width: 260, height: 100})\n          .fontSize(16)\n          .backgroundColor(\"#dbdbdb\")\n\n        Divider()\n          .size({width: '90%', height: 5})\n\n        Button(\"发布事件\")\n          .size({width: 260, height: 50})\n          .onClick(() => {\n            this.publishEvent();\n          })\n\n        Button(\"发布事件并携带参数\")\n          .size({width: 260, height: 50})\n          .onClick(() => {\n            this.publishEventWithData();\n          })\n\n      }\n      .padding(10)\n      .size({width: \"100%\"})\n\n    }\n    .backgroundColor($r('app.color.background'))\n    .size({width: '100%', height: '100%'})\n  }\n}", "leaked": true, "text_tokens": 792, "split": "valid"}
{"path": "applications_permission_manager~OpenHarmony~815/permissionmanager/src/main/ets/common/utils/deviceUtil.ets", "project_name": "applications_permission_manager~OpenHarmony~815", "text": "import deviceInfo from '@ohos.deviceInfo';\nimport display from '@ohos.display';\n\nexport class DeviceUtil {\n  constructor() {\n  }\n\n  public static isPC(): boolean {\n    return deviceInfo.deviceType === '2in1';\n  }\n\n  public static isTablet(): boolean {\n    return deviceInfo.deviceType === 'tablet';\n  }\n\n  // 折叠屏\n  public static isFold(): boolean {\n    try {\n      return ((deviceInfo.deviceType === 'default' || deviceInfo.deviceType === 'phone') && display.isFoldable());\n    } catch (error) {\n      return false;\n    }\n  }\n\n  // 直板机\n  public static isCandyBar(): boolean {\n    return ((deviceInfo.deviceType === 'default' || deviceInfo.deviceType === 'phone') && !DeviceUtil.isFold());\n  }\n}", "id": "07f20b3d4aa5892dcdb9061d5cbc168aef60f2b1234a06f6bdb04059fa0d2fe9", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "结构清晰，生态耦合自然，类型与逻辑合理", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 1446, "completion_tokens": 65, "total_tokens": 1511, "raw_response": "```json\n{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"结构清晰，生态耦合自然，类型与逻辑合理\"\n}\n```", "llm_formatted": "import deviceInfo from '@ohos.deviceInfo';\nimport display from '@ohos.display';\n\nexport class DeviceUtil {\n  constructor() {\n  }\n\n  public static isPC(): boolean {\n    return deviceInfo.deviceType === '2in1';\n  }\n\n  public static isTablet(): boolean {\n    return deviceInfo.deviceType === 'tablet';\n  }\n\n  public static isFold(): boolean {\n    try {\n      return ((deviceInfo.deviceType === 'default' || deviceInfo.deviceType === 'phone') && display.isFoldable());\n    } catch (error) {\n      return false;\n    }\n  }\n\n  public static isCandyBar(): boolean {\n    return ((deviceInfo.deviceType === 'default' || deviceInfo.deviceType === 'phone') && !DeviceUtil.isFold());\n  }\n}", "leaked": true, "text_tokens": 178, "split": "valid"}
{"path": "hmosworld~harmonyos_samples~1320/HMOSWorld/Application/features/challenge/src/main/ets/model/IconSubtitleData.ets", "project_name": "hmosworld~harmonyos_samples~1320", "text": "/**\n * Item info of subtitle.\n */\nexport class IconSubtitle {\n  icon: ResourceStr = '';\n  title: string = '';\n  enTitle: string = '';\n}\n\nexport const ICON_SUBTITLE_ARRAY: IconSubtitle[] = [\n  { icon: $r('app.media.ic_design_style'), title:'设计风格', enTitle: 'DESIGN STYLE' },\n  { icon: $r('app.media.ic_building'), title:'建筑信息', enTitle: 'BUILDING INFORMATION' },\n  { icon: $r('app.media.ic_geography_icon'), title:'地理位置', enTitle: 'GEOGRAPHIC LOCATION' }\n]", "id": "7ca1865bb6523e60afe2436b98120a4a975ed582f890651f1d9277958873c4cc", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 3.0, "confidence": 0.9, "rationale": "结构清晰，类型规范，符合ArkTS生态习惯", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 1397, "completion_tokens": 63, "total_tokens": 1460, "raw_response": "```json\n{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 3,\n  \"confidence\": 0.9,\n  \"rationale\": \"结构清晰，类型规范，符合ArkTS生态习惯\"\n}\n```", "llm_formatted": "/**\n * Item info of subtitle.\n */\nexport class IconSubtitle {\n  icon: ResourceStr = '';\n  title: string = '';\n  enTitle: string = '';\n}\n\nexport const ICON_SUBTITLE_ARRAY: IconSubtitle[] = [\n  { icon: $r('app.media.ic_design_style'), title:'设计风格', enTitle: 'DESIGN STYLE' },\n  { icon: $r('app.media.ic_building'), title:'建筑信息', enTitle: 'BUILDING INFORMATION' },\n  { icon: $r('app.media.ic_geography_icon'), title:'地理位置', enTitle: 'GEOGRAPHIC LOCATION' }\n]", "leaked": true, "text_tokens": 129, "split": "valid"}
{"path": "component-collection~harmonyos_samples~391/entry/src/main/ets/pages/components/stackFlexAndGrid/stackSample/StackControlPanel.ets", "project_name": "component-collection~harmonyos_samples~391", "text": "import { CommonItemSelect } from '../../../../common/AttributeModificationTool';\nimport { getStringArrayData } from '../../../../data/ResourceDataHandle';\nimport { STACK_ARGUMENTS_SELECT_DATA, STACK_ZIND_SELECT_DATA } from '../../ComponentData';\n\n@Component\nexport struct ZIndexControlPanel {\n  @Link zindex: number;\n\n  build() {\n    Column() {\n      CommonItemSelect({\n        name: $r('app.string.stack_zindex'),\n        selects: getStringArrayData(STACK_ZIND_SELECT_DATA),\n        callback: (index) => {\n          switch (index) {\n            case 1:\n              this.zindex = 1;\n              break;\n            default:\n              this.zindex = 4\n              break;\n          }\n        },\n        testId: `stack_002`\n      })\n    }\n  }\n}\n\n@Component\nexport struct ArgumentsControlPanel {\n  @Link alignContent: Alignment;\n\n  build() {\n    Column() {\n      CommonItemSelect({\n        name: $r('app.string.stack_alignment'),\n        selects: getStringArrayData(STACK_ARGUMENTS_SELECT_DATA),\n        callback: (index) => {\n          switch (index) {\n            case 1:\n              this.alignContent = Alignment.Top;\n              break;\n            case 2:\n              this.alignContent = Alignment.TopEnd;\n              break;\n            case 3:\n              this.alignContent = Alignment.Start;\n              break;\n            case 4:\n              this.alignContent = Alignment.Center;\n              break;\n            case 5:\n              this.alignContent = Alignment.End;\n              break;\n            case 6:\n              this.alignContent = Alignment.BottomStart;\n              break;\n            case 7:\n              this.alignContent = Alignment.Bottom;\n              break;\n            case 8:\n              this.alignContent = Alignment.BottomEnd;\n              break;\n            default:\n              this.alignContent = Alignment.TopStart;\n              break;\n          }\n        },\n        testId: `stack_001`\n      })\n    }\n  }\n}\n", "id": "ecbb21592b9dfa24e39ea16190850a6f615644747ceb6a8264fe9acb3fd08cfa", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "结构清晰，类型与生态耦合自然，具备可迁移的ArkTS组件模式。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2272, "completion_tokens": 68, "total_tokens": 2340, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"结构清晰，类型与生态耦合自然，具备可迁移的ArkTS组件模式。\"\n}", "llm_formatted": "import { CommonItemSelect } from '../../../../common/AttributeModificationTool';\nimport { getStringArrayData } from '../../../../data/ResourceDataHandle';\nimport { STACK_ARGUMENTS_SELECT_DATA, STACK_ZIND_SELECT_DATA } from '../../ComponentData';\n\n@Component\nexport struct ZIndexControlPanel {\n  @Link zindex: number;\n\n  build() {\n    Column() {\n      CommonItemSelect({\n        name: $r('app.string.stack_zindex'),\n        selects: getStringArrayData(STACK_ZIND_SELECT_DATA),\n        callback: (index) => {\n          switch (index) {\n            case 1:\n              this.zindex = 1;\n              break;\n            default:\n              this.zindex = 4\n              break;\n          }\n        },\n        testId: `stack_002`\n      })\n    }\n  }\n}\n\n@Component\nexport struct ArgumentsControlPanel {\n  @Link alignContent: Alignment;\n\n  build() {\n    Column() {\n      CommonItemSelect({\n        name: $r('app.string.stack_alignment'),\n        selects: getStringArrayData(STACK_ARGUMENTS_SELECT_DATA),\n        callback: (index) => {\n          switch (index) {\n            case 1:\n              this.alignContent = Alignment.Top;\n              break;\n            case 2:\n              this.alignContent = Alignment.TopEnd;\n              break;\n            case 3:\n              this.alignContent = Alignment.Start;\n              break;\n            case 4:\n              this.alignContent = Alignment.Center;\n              break;\n            case 5:\n              this.alignContent = Alignment.End;\n              break;\n            case 6:\n              this.alignContent = Alignment.BottomStart;\n              break;\n            case 7:\n              this.alignContent = Alignment.Bottom;\n              break;\n            case 8:\n              this.alignContent = Alignment.BottomEnd;\n              break;\n            default:\n              this.alignContent = Alignment.TopStart;\n              break;\n          }\n        },\n        testId: `stack_001`\n      })\n    }\n  }\n}\n", "leaked": true, "text_tokens": 403, "split": "valid"}
{"path": "hmosworld~harmonyos_samples~1320/HMOSWorld/Application/features/mine/src/main/ets/views/ConfirmView.ets", "project_name": "hmosworld~harmonyos_samples~1320", "text": "import { ConfigurationConstant } from '@kit.AbilityKit';\nimport { image } from '@kit.ImageKit';\nimport { TopNavigationView } from '@ohos/uicomponents';\nimport {\n  BreakpointType,\n  BreakpointTypeEnum,\n  CommonConstants,\n  FileUtil,\n  Logger,\n  WindowUtil\n} from '@ohos/utils';\nimport Constants from '../constants/Constants';\nimport { ProfileConstants } from '../constants/ProfileConstants';\n\nconst TAG = '[ConfirmPage]';\n\nlet imageWidth: BreakpointType<string> = new BreakpointType<string>({\n  sm: CommonConstants.FULL_PERCENT,\n  md: Constants.CLIP_RATIO_FOLD,\n  lg: Constants.CLIP_RATIO_PAD\n})\n\n/**\n * Page for confirming the profile picture change.\n */\n@Component\nexport struct ConfirmView {\n  @Consume('appPathStack') appPathStack: NavPathStack;\n  @State uri: string = '';\n  @StorageProp('currentBreakpoint') currentBreakpoint: string = BreakpointTypeEnum.MD;\n\n  onBackPress(): boolean {\n    this.checkBackAction(true);\n    return true;\n  }\n\n  @Builder\n  MenuBuilder() {\n    Image($r('app.media.ic_public_ok'))\n      .height($r('app.float.normal_icon_size'))\n      .width($r('app.float.normal_icon_size'))\n      .fillColor(Color.Black)\n      .onClick(() => this.savePhoto())\n  }\n\n  async savePhoto() {\n    FileUtil.copyFile(this.uri, ProfileConstants.getInstance().LOCAL_PROFILE_PATH);\n    FileUtil.copyFile(this.uri, ProfileConstants.getInstance().DISTRIBUTED_PROFILE_PATH);\n    let imageSource: image.ImageSource = image.createImageSource(ProfileConstants.getInstance().LOCAL_PROFILE_PATH);\n    imageSource.createPixelMap((err, pixelMap) => {\n      AppStorage.setOrCreate('profilePixelMap', pixelMap);\n      this.appPathStack.pop();\n      Logger.error(TAG, `createPixelMap error: ${err}`)\n    });\n    await imageSource.release();\n  }\n\n  checkBackAction(isCenter?: boolean) {\n    AlertDialog.show(\n      {\n        message: $r('app.string.sure_cancel'),\n        autoCancel: false,\n        alignment: this.currentBreakpoint === (BreakpointTypeEnum.SM || isCenter) ? DialogAlignment.Center :\n        DialogAlignment.TopStart,\n        offset: this.currentBreakpoint === (BreakpointTypeEnum.SM || isCenter) ? { dx: 0, dy: 0 } : {\n          dx: $r('app.float.xxl_padding_margin'),\n          dy: Constants.NAVIGATION_HEIGHT + (AppStorage.get<number>('statusBarHeight') || 0)\n        },\n        gridCount: 4,\n        primaryButton: {\n          value: $r('app.string.cancel'),\n          action: () => {\n            Logger.info(TAG, 'Button-clicking callback');\n          }\n        },\n        secondaryButton: {\n          value: $r('app.string.sure'),\n          action: () => {\n            Logger.info(TAG, 'Button-clicking callback');\n            FileUtil.deleteFile(ProfileConstants.getInstance().DISTRIBUTED_PROFILE_PATH);\n            this.appPathStack.pop();\n          }\n        }\n      }\n    )\n  }\n\n  build() {\n    NavDestination() {\n      Column() {\n        TopNavigationView({\n          onBackClick: () => {\n            this.checkBackAction();\n          },\n          title: $r('app.string.crop_photo'),\n          menuView: () => this.MenuBuilder()\n        })\n\n        Stack() {\n          Image(this.uri)\n            .maskShape(new Rect({\n              width: CommonConstants.FULL_PERCENT,\n              height: CommonConstants.FULL_PERCENT\n            }).fill(Color.Gray))\n            .aspectRatio(Constants.CLIP_RATIO_PHONE)\n          Image(this.uri)\n            .aspectRatio(Constants.CLIP_RATIO_PHONE)\n            .clipShape(new Circle({ height: Constants.CLIP_RATIO, width: Constants.CLIP_WIDTH })\n              .position({\n                y: Constants.CIRCLE_RATIO_Y,\n                x: Constants.CLIP_MARGIN\n              })\n            )\n        }\n        .margin({ top: $r('app.float.xxl_padding_margin') })\n        .width(imageWidth.getValue(this.currentBreakpoint))\n      }\n      .backgroundColor($r('sys.color.ohos_id_color_background'))\n      .padding({\n        top: AppStorage.get<number>('statusBarHeight'),\n        bottom: AppStorage.get<number>('naviIndicatorHeight') || 0\n      })\n      .height(CommonConstants.FULL_PERCENT)\n      .justifyContent(FlexAlign.Start)\n    }\n    .hideTitleBar(true)\n    .onReady((cxt: NavDestinationContext) => {\n      this.uri = (cxt.pathInfo.param as Record<string, string>).uri;\n    })\n    .onShown(() => {\n      WindowUtil.updateStatusBarColor(getContext(this),\n        AppStorage.get('currentColorMode') === ConfigurationConstant.ColorMode.COLOR_MODE_DARK);\n    })\n    .onHidden(() => {\n      WindowUtil.updateStatusBarColor(getContext(this), true);\n    })\n    .onBackPressed(() => {\n      return this.onBackPress();\n    })\n  }\n}\n\n@Builder\nexport function PhotoConfirmBuilder() {\n  ConfirmView();\n}", "id": "840e7adc08dd83216a23596cbf7583f37854eca98085c0133f43884c62757706", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "ArkTS语法规范，生态耦合自然，逻辑完整，具学习价值", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2314, "completion_tokens": 69, "total_tokens": 2383, "raw_response": "```json\n{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"ArkTS语法规范，生态耦合自然，逻辑完整，具学习价值\"\n}\n```", "llm_formatted": "import { ConfigurationConstant } from '@kit.AbilityKit';\nimport { image } from '@kit.ImageKit';\nimport { TopNavigationView } from '@ohos/uicomponents';\nimport {\n  BreakpointType,\n  BreakpointTypeEnum,\n  CommonConstants,\n  FileUtil,\n  Logger,\n  WindowUtil\n} from '@ohos/utils';\nimport Constants from '../constants/Constants';\nimport { ProfileConstants } from '../constants/ProfileConstants';\n\nconst TAG = '[ConfirmPage]';\n\nlet imageWidth: BreakpointType<string> = new BreakpointType<string>({\n  sm: CommonConstants.FULL_PERCENT,\n  md: Constants.CLIP_RATIO_FOLD,\n  lg: Constants.CLIP_RATIO_PAD\n})\n\n/**\n * Page for confirming the profile picture change.\n */\n@Component\nexport struct ConfirmView {\n  @Consume('appPathStack') appPathStack: NavPathStack;\n  @State uri: string = '';\n  @StorageProp('currentBreakpoint') currentBreakpoint: string = BreakpointTypeEnum.MD;\n\n  onBackPress(): boolean {\n    this.checkBackAction(true);\n    return true;\n  }\n\n  @Builder\n  MenuBuilder() {\n    Image($r('app.media.ic_public_ok'))\n      .height($r('app.float.normal_icon_size'))\n      .width($r('app.float.normal_icon_size'))\n      .fillColor(Color.Black)\n      .onClick(() => this.savePhoto())\n  }\n\n  async savePhoto() {\n    FileUtil.copyFile(this.uri, ProfileConstants.getInstance().LOCAL_PROFILE_PATH);\n    FileUtil.copyFile(this.uri, ProfileConstants.getInstance().DISTRIBUTED_PROFILE_PATH);\n    let imageSource: image.ImageSource = image.createImageSource(ProfileConstants.getInstance().LOCAL_PROFILE_PATH);\n    imageSource.createPixelMap((err, pixelMap) => {\n      AppStorage.setOrCreate('profilePixelMap', pixelMap);\n      this.appPathStack.pop();\n      Logger.error(TAG, `createPixelMap error: ${err}`)\n    });\n    await imageSource.release();\n  }\n\n  checkBackAction(isCenter?: boolean) {\n    AlertDialog.show(\n      {\n        message: $r('app.string.sure_cancel'),\n        autoCancel: false,\n        alignment: this.currentBreakpoint === (BreakpointTypeEnum.SM || isCenter) ? DialogAlignment.Center :\n        DialogAlignment.TopStart,\n        offset: this.currentBreakpoint === (BreakpointTypeEnum.SM || isCenter) ? { dx: 0, dy: 0 } : {\n          dx: $r('app.float.xxl_padding_margin'),\n          dy: Constants.NAVIGATION_HEIGHT + (AppStorage.get<number>('statusBarHeight') || 0)\n        },\n        gridCount: 4,\n        primaryButton: {\n          value: $r('app.string.cancel'),\n          action: () => {\n            Logger.info(TAG, 'Button-clicking callback');\n          }\n        },\n        secondaryButton: {\n          value: $r('app.string.sure'),\n          action: () => {\n            Logger.info(TAG, 'Button-clicking callback');\n            FileUtil.deleteFile(ProfileConstants.getInstance().DISTRIBUTED_PROFILE_PATH);\n            this.appPathStack.pop();\n          }\n        }\n      }\n    )\n  }\n\n  build() {\n    NavDestination() {\n      Column() {\n        TopNavigationView({\n          onBackClick: () => {\n            this.checkBackAction();\n          },\n          title: $r('app.string.crop_photo'),\n          menuView: () => this.MenuBuilder()\n        })\n\n        Stack() {\n          Image(this.uri)\n            .maskShape(new Rect({\n              width: CommonConstants.FULL_PERCENT,\n              height: CommonConstants.FULL_PERCENT\n            }).fill(Color.Gray))\n            .aspectRatio(Constants.CLIP_RATIO_PHONE)\n          Image(this.uri)\n            .aspectRatio(Constants.CLIP_RATIO_PHONE)\n            .clipShape(new Circle({ height: Constants.CLIP_RATIO, width: Constants.CLIP_WIDTH })\n              .position({\n                y: Constants.CIRCLE_RATIO_Y,\n                x: Constants.CLIP_MARGIN\n              })\n            )\n        }\n        .margin({ top: $r('app.float.xxl_padding_margin') })\n        .width(imageWidth.getValue(this.currentBreakpoint))\n      }\n      .backgroundColor($r('sys.color.ohos_id_color_background'))\n      .padding({\n        top: AppStorage.get<number>('statusBarHeight'),\n        bottom: AppStorage.get<number>('naviIndicatorHeight') || 0\n      })\n      .height(CommonConstants.FULL_PERCENT)\n      .justifyContent(FlexAlign.Start)\n    }\n    .hideTitleBar(true)\n    .onReady((cxt: NavDestinationContext) => {\n      this.uri = (cxt.pathInfo.param as Record<string, string>).uri;\n    })\n    .onShown(() => {\n      WindowUtil.updateStatusBarColor(getContext(this),\n        AppStorage.get('currentColorMode') === ConfigurationConstant.ColorMode.COLOR_MODE_DARK);\n    })\n    .onHidden(() => {\n      WindowUtil.updateStatusBarColor(getContext(this), true);\n    })\n    .onBackPressed(() => {\n      return this.onBackPress();\n    })\n  }\n}\n\n@Builder\nexport function PhotoConfirmBuilder() {\n  ConfirmView();\n}", "leaked": true, "text_tokens": 1046, "split": "valid"}
{"path": "HMOS_World_Demo~王鹏~2422/OneShotThreePageDemo/entry/src/main/ets/pages/Index.ets", "project_name": "HMOS_World_Demo~王鹏~2422", "text": "// Index.ets\nimport { AnimateCallback, CustomTransition } from '../CustomTransition/CustomNavigationUtils';\n\nconst TAG: string = 'Index';\n\n@Entry\n@Component\nstruct Index {\n  private pageInfos: NavPathStack = new NavPathStack();\n  // 允许进行自定义转场的页面名称\n  private allowedCustomTransitionFromPageName: string[] = ['PageOne'];\n  private allowedCustomTransitionToPageName: string[] = ['PageTwo'];\n\n  aboutToAppear(): void {\n    this.pageInfos.pushPath({ name: 'PageOne' });\n  }\n\n  private isCustomTransitionEnabled(fromName: string, toName: string): boolean {\n    // 点击和返回均需要进行自定义转场，因此需要分别判断\n    if ((this.allowedCustomTransitionFromPageName.includes(fromName)\n      && this.allowedCustomTransitionToPageName.includes(toName))\n      || (this.allowedCustomTransitionFromPageName.includes(toName)\n        && this.allowedCustomTransitionToPageName.includes(fromName))) {\n      return true;\n    }\n    return false;\n  }\n\n  build() {\n    Navigation(this.pageInfos)\n      .hideNavBar(true)\n      .customNavContentTransition((from: NavContentInfo, to: NavContentInfo, operation: NavigationOperation) => {\n        if ((!from || !to) || (!from.name || !to.name)) {\n          return undefined;\n        }\n\n        // 通过from和to的name对自定义转场路由进行管控\n        if (!this.isCustomTransitionEnabled(from.name, to.name)) {\n          return undefined;\n        }\n\n        // 需要对转场页面是否注册了animation进行判断，来决定是否进行自定义转场\n        let fromParam: AnimateCallback = CustomTransition.getInstance().getAnimateParam(from.index);\n        let toParam: AnimateCallback = CustomTransition.getInstance().getAnimateParam(to.index);\n        if (!fromParam.animation || !toParam.animation) {\n          return undefined;\n        }\n\n        // 一切判断完成后，构造customAnimation给系统侧调用，执行自定义转场动画\n        let customAnimation: NavigationAnimatedTransition = {\n          onTransitionEnd: (isSuccess: boolean) => {\n            console.log(TAG, `current transition result is ${isSuccess}`);\n          },\n          timeout: 2000,\n          transition: (transitionProxy: NavigationTransitionProxy) => {\n            console.log(TAG, 'trigger transition callback');\n            if (fromParam.animation) {\n              fromParam.animation(operation == NavigationOperation.PUSH, true, transitionProxy);\n            }\n            if (toParam.animation) {\n              toParam.animation(operation == NavigationOperation.PUSH, false, transitionProxy);\n            }\n          }\n        };\n        return customAnimation;\n      })\n  }\n}", "id": "7299e96153e1ad64c626cccf1c67d43770c496a5d906a9a5c56a6058ac4bb46c", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "ArkTS代码结构清晰，生态耦合自然，具备良好的类型与逻辑表达。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2444, "completion_tokens": 67, "total_tokens": 2511, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"ArkTS代码结构清晰，生态耦合自然，具备良好的类型与逻辑表达。\"\n}", "llm_formatted": "// Index.ets\nimport { AnimateCallback, CustomTransition } from '../CustomTransition/CustomNavigationUtils';\n\nconst TAG: string = 'Index';\n\n@Entry\n@Component\nstruct Index {\n  private pageInfos: NavPathStack = new NavPathStack();\n  private allowedCustomTransitionFromPageName: string[] = ['PageOne'];\n  private allowedCustomTransitionToPageName: string[] = ['PageTwo'];\n\n  aboutToAppear(): void {\n    this.pageInfos.pushPath({ name: 'PageOne' });\n  }\n\n  private isCustomTransitionEnabled(fromName: string, toName: string): boolean {\n    if ((this.allowedCustomTransitionFromPageName.includes(fromName)\n      && this.allowedCustomTransitionToPageName.includes(toName))\n      || (this.allowedCustomTransitionFromPageName.includes(toName)\n        && this.allowedCustomTransitionToPageName.includes(fromName))) {\n      return true;\n    }\n    return false;\n  }\n\n  build() {\n    Navigation(this.pageInfos)\n      .hideNavBar(true)\n      .customNavContentTransition((from: NavContentInfo, to: NavContentInfo, operation: NavigationOperation) => {\n        if ((!from || !to) || (!from.name || !to.name)) {\n          return undefined;\n        }\n\n        if (!this.isCustomTransitionEnabled(from.name, to.name)) {\n          return undefined;\n        }\n\n        let fromParam: AnimateCallback = CustomTransition.getInstance().getAnimateParam(from.index);\n        let toParam: AnimateCallback = CustomTransition.getInstance().getAnimateParam(to.index);\n        if (!fromParam.animation || !toParam.animation) {\n          return undefined;\n        }\n\n        let customAnimation: NavigationAnimatedTransition = {\n          onTransitionEnd: (isSuccess: boolean) => {\n            console.log(TAG, `current transition result is ${isSuccess}`);\n          },\n          timeout: 2000,\n          transition: (transitionProxy: NavigationTransitionProxy) => {\n            console.log(TAG, 'trigger transition callback');\n            if (fromParam.animation) {\n              fromParam.animation(operation == NavigationOperation.PUSH, true, transitionProxy);\n            }\n            if (toParam.animation) {\n              toParam.animation(operation == NavigationOperation.PUSH, false, transitionProxy);\n            }\n          }\n        };\n        return customAnimation;\n      })\n  }\n}", "leaked": true, "text_tokens": 575, "split": "valid"}
{"path": "flutter_packages~openharmony-sig~1444/packages/shared_preferences/shared_preferences_ohos/ohos/src/main/ets/shared_preferences/SharedPreferencesOhosPlugin.ets", "project_name": "flutter_packages~openharmony-sig~1444", "text": "// Copyright (c) 2023 Hunan OpenValley Digital Industry Development Co., Ltd.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE_ODID file.\n// Based on SharedPreferencesPlugin.java originally written by\n// Copyright 2013 The Flutter Authors.\n\nimport {\n  FlutterPlugin,\n  FlutterPluginBinding\n} from '@ohos/flutter_ohos/src/main/ets/embedding/engine/plugins/FlutterPlugin';\nimport MessageCodec from '@ohos/flutter_ohos/src/main/ets/plugin/common/MessageCodec';\nimport StandardMessageCodec from '@ohos/flutter_ohos/src/main/ets/plugin/common/StandardMessageCodec';\nimport { SharedPreferencesApi, wrapError } from './Messages';\nimport Log from '@ohos/flutter_ohos/src/main/ets/util/Log';\nimport data_preferences from '@ohos.data.preferences'\nimport BasicMessageChannel, { Reply } from '@ohos/flutter_ohos/src/main/ets/plugin/common/BasicMessageChannel';\nimport { BinaryMessenger } from '@ohos/flutter_ohos/src/main/ets/plugin/common/BinaryMessenger';\nimport { SharedPreferencesListEncoder } from './SharedPreferencesListEncoder';\nimport buffer  from '@ohos.buffer';\n\nconst TAG = \"SharedPreferencesOhosPlugin\"\nconst PREFERENCES_NAME = \"FlutterSharedPreferences\";\nconst LIST_IDENTIFIER = \"VGhpcyBpcyB0aGUgcHJlZml4IGZvciBhIGxpc3Qu\";\n\nexport default class SharedPreferencesOhosPlugin implements FlutterPlugin, SharedPreferencesApi {\n\n  private preferences: data_preferences.Preferences | null = null;\n  private listEncoder: ListEncoder;\n\n  getUniqueClassName(): string {\n    return \"SharedPreferencesOhosPlugin\"\n  }\n\n  constructor() {\n    this.listEncoder = new ListEncoder();\n  }\n\n  setup(binaryMessenger: BinaryMessenger, api: SharedPreferencesApi | null): void {\n    {\n      let channel = new BasicMessageChannel<Object>(\n        binaryMessenger, \"dev.flutter.pigeon.SharedPreferencesApi.remove\", this.getCodec());\n      Log.d(TAG, 'setup')\n      if (api != null) {\n        Log.d(TAG, 'setMessageHandler')\n        channel.setMessageHandler({\n          onMessage(msg: Object, reply: Reply<Object>): void {\n            let wrapped = new Array<Object>();\n            let args = msg as Array<Object>;\n            let keyArg = args[0] as string;\n            try {\n              let output = api.remove(keyArg);\n              wrapped.push(output);\n            } catch (err) {\n              let errs = wrapError(err);\n              wrapped = errs;\n            }\n            reply.reply(wrapped)\n          }\n        });\n      } else {\n        channel.setMessageHandler(null)\n      }\n    }\n    {\n      let channel = new BasicMessageChannel<Object>(\n        binaryMessenger, \"dev.flutter.pigeon.SharedPreferencesApi.getAll\", this.getCodec());\n      if (api != null) {\n        channel.setMessageHandler({\n          onMessage(msg: Object, reply: Reply<Object>): void {\n            Log.d(TAG, 'onMessage reply:' + reply)\n            let wrapped = new Array<Object>();\n            let args = msg as Array<Object>;\n            let prefixArg = args[0] as string;\n            let allowListArg = args[1] as Array<string>;\n            api.getAll(prefixArg, allowListArg).then((res) => {\n              wrapped.push(res);\n              Log.w(TAG, \"getAll res=\" + JSON.stringify(res));\n              reply.reply(wrapped)\n            }).catch((err: ESObject) => {\n              Log.w(TAG, \"Failed to getAll. code =\" + err.code +\", message =\" + err.message);\n              let errs = wrapError(err);\n              wrapped = errs;\n              reply.reply(wrapped)\n            })\n          }\n        });\n      } else {\n        channel.setMessageHandler(null)\n      }\n    }\n    {\n      let channel = new BasicMessageChannel<Object>(\n        binaryMessenger, \"dev.flutter.pigeon.SharedPreferencesApi.clear\", this.getCodec());\n      if (api != null) {\n        channel.setMessageHandler({\n          onMessage(msg: Object, reply: Reply<Object>): void {\n            Log.d(TAG, 'onMessage reply:' + reply)\n            let wrapped = new Array<Object>();\n            let args = msg as Array<Object>;\n            let prefixArg = args[0] as string;\n            let allowListArg = args[1] as Array<string>;\n            api.clear(prefixArg, allowListArg).then(() => {\n              wrapped.push(true);\n              reply.reply(wrapped)\n            }).catch((err: ESObject) => {\n              Log.w(TAG, \"Failed to clear. code =\" + err.code +\", message =\" + err.message);\n              let errs = wrapError(err);\n              wrapped = errs;\n              reply.reply(wrapped)\n            })\n          }\n        });\n      } else {\n        channel.setMessageHandler(null)\n      }\n    }\n    {\n      let channel = new BasicMessageChannel<Object>(\n        binaryMessenger, \"dev.flutter.pigeon.SharedPreferencesApi.setInt\", this.getCodec());\n      if (api != null) {\n        channel.setMessageHandler({\n          onMessage(msg: Object, reply: Reply<Object>): void {\n            let wrapped = new Array<Object>();\n            let args = msg as Array<Object>;\n            let keyArg = args[0] as string;\n            let valueArg = args[1] as number;\n            api.setInt(keyArg, valueArg).then(() => {\n              wrapped.push(true);\n              reply.reply(wrapped)\n            }).catch((err: ESObject) => {\n              Log.w(TAG, \"Failed to setInt. code =\" + err.code +\", message =\" + err.message);\n              let errs = wrapError(err);\n              wrapped = errs;\n              reply.reply(wrapped)\n            })\n          }\n        });\n      } else {\n        channel.setMessageHandler(null)\n      }\n    }\n    {\n      let channel = new BasicMessageChannel<Object>(\n        binaryMessenger, \"dev.flutter.pigeon.SharedPreferencesApi.setString\", this.getCodec());\n      if (api != null) {\n        channel.setMessageHandler({\n          onMessage(msg: Object, reply: Reply<Object>): void {\n            let wrapped = new Array<Object>();\n            let args = msg as Array<Object>;\n            let keyArg = args[0] as string;\n            let valueArg = args[1] as string;\n            api.setString(keyArg, valueArg).then(() => {\n              wrapped.push(true);\n              reply.reply(wrapped)\n            }).catch((err: ESObject) => {\n              Log.w(TAG, \"Failed to setString. code =\" + err.code +\", message =\" + err.message);\n              let errs = wrapError(err);\n              wrapped = errs;\n              reply.reply(wrapped)\n            })\n          }\n        });\n      } else {\n        channel.setMessageHandler(null)\n      }\n    }\n    {\n      let channel = new BasicMessageChannel<Object>(\n        binaryMessenger, \"dev.flutter.pigeon.SharedPreferencesApi.setDouble\", this.getCodec());\n      if (api != null) {\n        channel.setMessageHandler({\n          onMessage(msg: Object, reply: Reply<Object>): void {\n            let wrapped = new Array<Object>();\n            let args = msg as Array<Object>;\n            let keyArg = args[0] as string;\n            let valueArg = args[1] as number;\n            api.setDouble(keyArg, valueArg).then(() => {\n              wrapped.push(true);\n              reply.reply(wrapped)\n            }).catch((err: ESObject) => {\n              Log.w(TAG, \"Failed to setDouble. code =\" + err.code +\", message =\" + err.message);\n              let errs = wrapError(err);\n              wrapped = errs;\n              reply.reply(wrapped)\n            })\n          }\n        });\n      } else {\n        channel.setMessageHandler(null)\n      }\n    }\n    {\n      let channel = new BasicMessageChannel<Object>(\n        binaryMessenger, \"dev.flutter.pigeon.SharedPreferencesApi.setBool\", this.getCodec());\n      if (api != null) {\n        channel.setMessageHandler({\n          onMessage(msg: Object, reply: Reply<Object>): void {\n            let wrapped = new Array<Object>();\n            let args = msg as Array<Object>;\n            let keyArg = args[0] as string;\n            let valueArg = args[1] as boolean;\n            api.setBool(keyArg, valueArg).then(() => {\n              wrapped.push(true);\n              reply.reply(wrapped)\n            }).catch((err: ESObject) => {\n              Log.w(TAG, \"Failed to setBool. code =\" + err.code +\", message =\" + err.message);\n              let errs = wrapError(err);\n              wrapped = errs;\n              reply.reply(wrapped)\n            })\n          }\n        });\n      } else {\n        channel.setMessageHandler(null)\n      }\n    }\n    {\n      let channel = new BasicMessageChannel<Object>(\n        binaryMessenger, \"dev.flutter.pigeon.SharedPreferencesApi.setStringList\", this.getCodec());\n      if (api != null) {\n        channel.setMessageHandler({\n          onMessage(msg: Object, reply: Reply<Object>): void {\n            let wrapped = new Array<Object>();\n            let args = msg as Array<Object>;\n            let keyArg = args[0] as string;\n            let valueArg = args[1] as Array<string>;\n            api.setStringList(keyArg, valueArg).then(() => {\n              wrapped.push(true);\n              reply.reply(wrapped)\n            }).catch((err: ESObject) => {\n              Log.w(TAG, \"Failed to setStringList. code =\" + err.code +\", message =\" + err.message);\n              let errs = wrapError(err);\n              wrapped = errs;\n              reply.reply(wrapped)\n            })\n          }\n        });\n      } else {\n        channel.setMessageHandler(null)\n      }\n    }\n  }\n\n  remove(key: string): boolean {\n    try {\n      let result = true\n      this.preferences?.delete(key,async (err: ESObject) => {\n        if (err) {\n          Log.w(TAG, \"Failed to delete.  message =\" + err.message);\n          result =  false;\n        }\n        Log.i(TAG, \"Succeeded in deleting.\");\n        await this.preferences?.flush();\n      })\n      return result;\n    } catch (err) {\n      Log.e(TAG, \"Failed to delete. \" + JSON.stringify(err));\n      return false;\n    }\n  }\n\n  setString(key: string, value: string): Promise<void> {\n    if (value.startsWith(LIST_IDENTIFIER)) {\n      throw new Error(\n        \"StorageError: This string cannot be stored as it clashes with special identifier prefixes\");\n    }\n    return this.put(key, value);\n  }\n\n  setInt(key: string, value: number): Promise<void> {\n    if(typeof value == \"bigint\") {\n      return this.put(key, Number(value));\n    }\n    return this.put(key, value);\n  }\n\n  put(key: string, value: ESObject): Promise<void> {\n    try {\n      if (this.preferences == null) {\n        return new Promise((reject) => {\n          reject();\n        });\n      } else {\n        this.preferences.put(key, value);\n        return this.preferences.flush();\n      }\n    } catch(err) {\n      Log.w(TAG, \"Failed to put value of 'startup'. \" + JSON.stringify(err));\n      return new Promise((reject) => {\n        reject();\n      });\n    }\n  }\n\n  setDouble(key: string, value: number): Promise<void> {\n    return this.put(key, value);\n  }\n\n  setStringList(key: string, value: string[]): Promise<void> {\n    Log.w(TAG, \"setStringList :\" + value);\n    Log.w(TAG, \"setStringList encoded:\" + (LIST_IDENTIFIER + this.listEncoder.encode(value)));\n    return this.put(key, LIST_IDENTIFIER + this.listEncoder.encode(value));\n  }\n\n  clear(prefix: string, allowList: string[]): Promise<void> {\n    try {\n      this.preferences?.getAll().then((value: object) => {\n        let allKeys = Object.keys(value);\n        for (let key of allKeys) {\n          if (key.startsWith(prefix) && (allowList == null || allowList.indexOf(key) != -1)) {\n            this.preferences?.delete(key);\n          }\n        }\n        return this.preferences?.flush();\n      }).catch((err: ESObject) => {\n        Log.w(TAG, \"Failed to clear.\" + JSON.stringify(err));\n      });\n    } catch (err) {\n      Log.w(TAG, \"Failed to clear.\" + JSON.stringify(err));\n    }\n    return new Promise((reject) => {\n      reject();\n    })\n  }\n\n  filterData(value: [string, Object], prefix: string, allowList: string[]): Map<string, Object> {\n    let allVal = Object.entries(value);\n    let filteredPrefs = new Map<string, Object>();\n    for (let val of allVal) {\n      let key = val[0];\n      let v = val[1];\n      if (key.startsWith(prefix) && (allowList == null || allowList.indexOf(key) != -1)) {\n        filteredPrefs.set(key, this.transformPref(v));\n        Log.w(TAG, \"filterData00：key:\" + key + \" val:\" + (this.transformPref(v)));\n      }\n    }\n    Log.w(TAG, \"filterData1：\" + JSON.stringify(filteredPrefs));\n    return filteredPrefs;\n  }\n\n  async getAll(prefix: string, allowList: Array<string>): Promise<Object> {\n    try {\n      let res = new Map<string, Object>();\n      if (this.preferences == null) {\n        return new Promise((reject) => {\n          reject(\"Failed to getAll\");\n        })\n      }\n      await this.preferences.getAll().then((obj: Object) => {\n        res = this.filterData(obj as [string, ESObject], prefix, allowList);\n      })\n      return new Promise((resolve) => {\n        resolve(res);\n      })\n    } catch (err) {\n      Log.w(TAG, \"Failed to excute getAll.\" + JSON.stringify(err));\n      return new Promise((reject) => {\n        reject(\"Failed to getAll\");\n      })\n    }\n  }\n\n  getCodec(): MessageCodec<Object> {\n    return new StandardMessageCodec();\n  }\n\n  onAttachedToEngine(binding: FlutterPluginBinding): void {\n    try {\n      let promise = data_preferences.getPreferences(binding.getApplicationContext(), PREFERENCES_NAME);\n      promise.then((object) => {\n        this.preferences = object;\n        Log.i(TAG, \"Succeeded in getting preferences.\");\n      }).catch((err: ESObject) => {\n        Log.w(TAG, \"Failed to get preferences. code =\" + err.code + \", message =\" + err.message);\n      })\n    } catch(err) {\n      Log.w(TAG, \"Failed to get preferences.\"+ JSON.stringify(err));\n    }\n    this.setup(binding.getBinaryMessenger(), this);\n  }\n\n  onDetachedFromEngine(binding: FlutterPluginBinding): void {\n    try {\n      let promise = this.preferences?.flush();\n      promise?.then(() => {\n        Log.i(TAG, \"Succeeded in flushing.\");\n      }).catch((err: ESObject) => {\n        Log.w(TAG, \"Failed to flush.\" + JSON.stringify(err));\n      })\n    } catch (err) {\n      Log.w(TAG, \"Failed to flush.\" + JSON.stringify(err));\n    }\n    this.setup(binding.getBinaryMessenger(), null);\n  }\n\n  setBool(key: string, value: boolean): Promise<void> {\n    return this.put(key, value)\n  }\n\n  transformPref(value: Object): Object {\n    if (typeof value == \"string\") {\n      let stringValue = (value as string);\n      if (stringValue.startsWith(LIST_IDENTIFIER)) {\n        let strList: ESObject = this.listEncoder.decode(stringValue.substring(LIST_IDENTIFIER.length));\n        let t: ESObject = JSON.parse(strList);\n        return t;\n      }\n    }\n    return value;\n  }\n}\n\nclass ListEncoder implements SharedPreferencesListEncoder {\n  encode(list: string[]): string {\n    try {\n      let jsonList = JSON.stringify(list)\n      return buffer.from(jsonList).toString('base64');;\n    } catch (err) {\n      Log.e(TAG, \"Failed encode.\"  + JSON.stringify(err));\n    }\n    return ''\n  }\n\n  decode(listString: string): ESObject {\n    try {\n      let buf = buffer.from(listString, 'base64');\n      return buf.toString();\n    } catch (err) {\n      Log.e(TAG, \"Failed decode.\" + JSON.stringify(err));\n    }\n    return undefined\n  }\n}\n", "id": "2303d1800e1441b83679624f6c627ffdeb82168ca5b329216378fcdc6188425e", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "ArkTS生态耦合良好，类型与逻辑清晰，具学习价值", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 4659, "completion_tokens": 68, "total_tokens": 4727, "raw_response": "```json\n{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"ArkTS生态耦合良好，类型与逻辑清晰，具学习价值\"\n}\n```", "llm_formatted": "typescript\nimport {\n  FlutterPlugin,\n  FlutterPluginBinding\n} from '@ohos/flutter_ohos/src/main/ets/embedding/engine/plugins/FlutterPlugin';\nimport MessageCodec from '@ohos/flutter_ohos/src/main/ets/plugin/common/MessageCodec';\nimport StandardMessageCodec from '@ohos/flutter_ohos/src/main/ets/plugin/common/StandardMessageCodec';\nimport { SharedPreferencesApi, wrapError } from './Messages';\nimport Log from '@ohos/flutter_ohos/src/main/ets/util/Log';\nimport data_preferences from '@ohos.data.preferences'\nimport BasicMessageChannel, { Reply } from '@ohos/flutter_ohos/src/main/ets/plugin/common/BasicMessageChannel';\nimport { BinaryMessenger } from '@ohos/flutter_ohos/src/main/ets/plugin/common/BinaryMessenger';\nimport { SharedPreferencesListEncoder } from './SharedPreferencesListEncoder';\nimport buffer from '@ohos.buffer';\n\nconst TAG = \"SharedPreferencesOhosPlugin\"\nconst PREFERENCES_NAME = \"FlutterSharedPreferences\";\nconst LIST_IDENTIFIER = \"VGhpcyBpcyB0aGUgcHJlZml4IGZvciBhIGxpc3Qu\";\n\nexport default class SharedPreferencesOhosPlugin implements FlutterPlugin, SharedPreferencesApi {\n\n  private preferences: data_preferences.Preferences | null = null;\n  private listEncoder: ListEncoder;\n\n  getUniqueClassName(): string {\n    return \"SharedPreferencesOhosPlugin\"\n  }\n\n  constructor() {\n    this.listEncoder = new ListEncoder();\n  }\n\n  setup(binaryMessenger: BinaryMessenger, api: SharedPreferencesApi | null): void {\n    {\n      let channel = new BasicMessageChannel<Object>(\n        binaryMessenger, \"dev.flutter.pigeon.SharedPreferencesApi.remove\", this.getCodec());\n      Log.d(TAG, 'setup')\n      if (api != null) {\n        Log.d(TAG, 'setMessageHandler')\n        channel.setMessageHandler({\n          onMessage(msg: Object, reply: Reply<Object>): void {\n            let wrapped = new Array<Object>();\n            let args = msg as Array<Object>;\n            let keyArg = args[0] as string;\n            try {\n              let output = api.remove(keyArg);\n              wrapped.push(output);\n            } catch (err) {\n              let errs = wrapError(err);\n              wrapped = errs;\n            }\n            reply.reply(wrapped)\n          }\n        });\n      } else {\n        channel.setMessageHandler(null)\n      }\n    }\n    {\n      let channel = new BasicMessageChannel<Object>(\n        binaryMessenger, \"dev.flutter.pigeon.SharedPreferencesApi.getAll\", this.getCodec());\n      if (api != null) {\n        channel.setMessageHandler({\n          onMessage(msg: Object, reply: Reply<Object>): void {\n            Log.d(TAG, 'onMessage reply:' + reply)\n            let wrapped = new Array<Object>();\n            let args = msg as Array<Object>;\n            let prefixArg = args[0] as string;\n            let allowListArg = args[1] as Array<string>;\n            api.getAll(prefixArg, allowListArg).then((res) => {\n              wrapped.push(res);\n              Log.w(TAG, \"getAll res=\" + JSON.stringify(res));\n              reply.reply(wrapped)\n            }).catch((err: ESObject) => {\n              Log.w(TAG, \"Failed to getAll. code =\" + err.code +\", message =\" + err.message);\n              let errs = wrapError(err);\n              wrapped = errs;\n              reply.reply(wrapped)\n            })\n          }\n        });\n      } else {\n        channel.setMessageHandler(null)\n      }\n    }\n    {\n      let channel = new BasicMessageChannel<Object>(\n        binaryMessenger, \"dev.flutter.pigeon.SharedPreferencesApi.clear\", this.getCodec());\n      if (api != null) {\n        channel.setMessageHandler({\n          onMessage(msg: Object, reply: Reply<Object>): void {\n            Log.d(TAG, 'onMessage reply:' + reply)\n            let wrapped = new Array<Object>();\n            let args = msg as Array<Object>;\n            let prefixArg = args[0] as string;\n            let allowListArg = args[1] as Array<string>;\n            api.clear(prefixArg, allowListArg).then(() => {\n              wrapped.push(true);\n              reply.reply(wrapped)\n            }).catch((err: ESObject) => {\n              Log.w(TAG, \"Failed to clear. code =\" + err.code +\", message =\" + err.message);\n              let errs = wrapError(err);\n              wrapped = errs;\n              reply.reply(wrapped)\n            })\n          }\n        });\n      } else {\n        channel.setMessageHandler(null)\n      }\n    }\n    {\n      let channel = new BasicMessageChannel<Object>(\n        binaryMessenger, \"dev.flutter.pigeon.SharedPreferencesApi.setInt\", this.getCodec());\n      if (api != null) {\n        channel.setMessageHandler({\n          onMessage(msg: Object, reply: Reply<Object>): void {\n            let wrapped = new Array<Object>();\n            let args = msg as Array<Object>;\n            let keyArg = args[0] as string;\n            let valueArg = args[1] as number;\n            api.setInt(keyArg, valueArg).then(() => {\n              wrapped.push(true);\n              reply.reply(wrapped)\n            }).catch((err: ESObject) => {\n              Log.w(TAG, \"Failed to setInt. code =\" + err.code +\", message =\" + err.message);\n              let errs = wrapError(err);\n              wrapped = errs;\n              reply.reply(wrapped)\n            })\n          }\n        });\n      } else {\n        channel.setMessageHandler(null)\n      }\n    }\n    {\n      let channel = new BasicMessageChannel<Object>(\n        binaryMessenger, \"dev.flutter.pigeon.SharedPreferencesApi.setString\", this.getCodec());\n      if (api != null) {\n        channel.setMessageHandler({\n          onMessage(msg: Object, reply: Reply<Object>): void {\n            let wrapped = new Array<Object>();\n            let args = msg as Array<Object>;\n            let keyArg = args[0] as string;\n            let valueArg = args[1] as string;\n            api.setString(keyArg, valueArg).then(() => {\n              wrapped.push(true);\n              reply.reply(wrapped)\n            }).catch((err: ESObject) => {\n              Log.w(TAG, \"Failed to setString. code =\" + err.code +\", message =\" + err.message);\n              let errs = wrapError(err);\n              wrapped = errs;\n              reply.reply(wrapped)\n            })\n          }\n        });\n      } else {\n        channel.setMessageHandler(null)\n      }\n    }\n    {\n      let channel = new BasicMessageChannel<Object>(\n        binaryMessenger, \"dev.flutter.pigeon.SharedPreferencesApi.setDouble\", this.getCodec());\n      if (api != null) {\n        channel.setMessageHandler({\n          onMessage(msg: Object, reply: Reply<Object>): void {\n            let wrapped = new Array<Object>();\n            let args = msg as Array<Object>;\n            let keyArg = args[0] as string;\n            let valueArg = args[1] as number;\n            api.setDouble(keyArg, valueArg).then(() => {\n              wrapped.push(true);\n              reply.reply(wrapped)\n            }).catch((err: ESObject) => {\n              Log.w(TAG, \"Failed to setDouble. code =\" + err.code +\", message =\" + err.message);\n              let errs = wrapError(err);\n              wrapped = errs;\n              reply.reply(wrapped)\n            })\n          }\n        });\n      } else {\n        channel.setMessageHandler(null)\n      }\n    }\n    {\n      let channel = new BasicMessageChannel<Object>(\n        binaryMessenger, \"dev.flutter.pigeon.SharedPreferencesApi.setBool\", this.getCodec());\n      if (api != null) {\n        channel.setMessageHandler({\n          onMessage(msg: Object, reply: Reply<Object>): void {\n            let wrapped = new Array<Object>();\n            let args = msg as Array<Object>;\n            let keyArg = args[0] as string;\n            let valueArg = args[1] as boolean;\n            api.setBool(keyArg, valueArg).then(() => {\n              wrapped.push(true);\n              reply.reply(wrapped)\n            }).catch((err: ESObject) => {\n              Log.w(TAG, \"Failed to setBool. code =\" + err.code +\", message =\" + err.message);\n              let errs = wrapError(err);\n              wrapped = errs;\n              reply.reply(wrapped)\n            })\n          }\n        });\n      } else {\n        channel.setMessageHandler(null)\n      }\n    }\n    {\n      let channel = new BasicMessageChannel<Object>(\n        binaryMessenger, \"dev.flutter.pigeon.SharedPreferencesApi.setStringList\", this.getCodec());\n      if (api != null) {\n        channel.setMessageHandler({\n          onMessage(msg: Object, reply: Reply<Object>): void {\n            let wrapped = new Array<Object>();\n            let args = msg as Array<Object>;\n            let keyArg = args[0] as string;\n            let valueArg = args[1] as Array<string>;\n            api.setStringList(keyArg, valueArg).then(() => {\n              wrapped.push(true);\n              reply.reply(wrapped)\n            }).catch((err: ESObject) => {\n              Log.w(TAG, \"Failed to setStringList. code =\" + err.code +\", message =\" + err.message);\n              let errs = wrapError(err);\n              wrapped = errs;\n              reply.reply(wrapped)\n            })\n          }\n        });\n      } else {\n        channel.setMessageHandler(null)\n      }\n    }\n  }\n\n  remove(key: string): boolean {\n    try {\n      let result = true\n      this.preferences?.delete(key,async (err: ESObject) => {\n        if (err) {\n          Log.w(TAG, \"Failed to delete.  message =\" + err.message);\n          result =  false;\n        }\n        Log.i(TAG, \"Succeeded in deleting.\");\n        await this.preferences?.flush();\n      })\n      return result;\n    } catch (err) {\n      Log.e(TAG, \"Failed to delete. \" + JSON.stringify(err));\n      return false;\n    }\n  }\n\n  setString(key: string, value: string): Promise<void> {\n    if (value.startsWith(LIST_IDENTIFIER)) {\n      throw new Error(\n        \"StorageError: This string cannot be stored as it clashes with special identifier prefixes\");\n    }\n    return this.put(key, value);\n  }\n\n  setInt(key: string, value: number): Promise<void> {\n    if(typeof value == \"bigint\") {\n      return this.put(key, Number(value));\n    }\n    return this.put(key, value);\n  }\n\n  put(key: string, value: ESObject): Promise<void> {\n    try {\n      if (this.preferences == null) {\n        return new Promise((reject) => {\n          reject();\n        });\n      } else {\n        this.preferences.put(key, value);\n        return this.preferences.flush();\n      }\n    } catch(err) {\n      Log.w(TAG, \"Failed to put value of 'startup'. \" + JSON.stringify(err));\n      return new Promise((reject) => {\n        reject();\n      });\n    }\n  }\n\n  setDouble(key: string, value: number): Promise<void> {\n    return this.put(key, value);\n  }\n\n  setStringList(key: string, value: string[]): Promise<void> {\n    Log.w(TAG, \"setStringList :\" + value);\n    Log.w(TAG, \"setStringList encoded:\" + (LIST_IDENTIFIER + this.listEncoder.encode(value)));\n    return this.put(key, LIST_IDENTIFIER + this.listEncoder.encode(value));\n  }\n\n  clear(prefix: string, allowList: string[]): Promise<void> {\n    try {\n      this.preferences?.getAll().then((value: object) => {\n        let allKeys = Object.keys(value);\n        for (let key of allKeys) {\n          if (key.startsWith(prefix) && (allowList == null || allowList.indexOf(key) != -1)) {\n            this.preferences?.delete(key);\n          }\n        }\n        return this.preferences?.flush();\n      }).catch((err: ESObject) => {\n        Log.w(TAG, \"Failed to clear.\" + JSON.stringify(err));\n      });\n    } catch (err) {\n      Log.w(TAG, \"Failed to clear.\" + JSON.stringify(err));\n    }\n    return new Promise((reject) => {\n      reject();\n    })\n  }\n\n  filterData(value: [string, Object], prefix: string, allowList: string[]): Map<string, Object> {\n    let allVal = Object.entries(value);\n    let filteredPrefs = new Map<string, Object>();\n    for (let val of allVal) {\n      let key = val[0];\n      let v = val[1];\n      if (key.startsWith(prefix) && (allowList == null || allowList.indexOf(key) != -1)) {\n        filteredPrefs.set(key, this.transformPref(v));\n        Log.w(TAG, \"filterData00：key:\" + key + \" val:\" + (this.transformPref(v)));\n      }\n    }\n    Log.w(TAG, \"filterData1：\" + JSON.stringify(filteredPrefs));\n    return filteredPrefs;\n  }\n\n  async getAll(prefix: string, allowList: Array<string>): Promise<Object> {\n    try {\n      let res = new Map<string, Object>();\n      if (this.preferences == null) {\n        return new Promise((reject) => {\n          reject(\"Failed to getAll\");\n        })\n      }\n      await this.preferences.getAll().then((obj: Object) => {\n        res = this.filterData(obj as [string, ESObject], prefix, allowList);\n      })\n      return new Promise((resolve) => {\n        resolve(res);\n      })\n    } catch (err) {\n      Log.w(TAG, \"Failed to excute getAll.\" + JSON.stringify(err));\n      return new Promise((reject) => {\n        reject(\"Failed to getAll\");\n      })\n    }\n  }\n\n  getCodec(): MessageCodec<Object> {\n    return new StandardMessageCodec();\n  }\n\n  onAttachedToEngine(binding: FlutterPluginBinding): void {\n    try {\n      let promise = data_preferences.getPreferences(binding.getApplicationContext(), PREFERENCES_NAME);\n      promise.then((object) => {\n        this.preferences = object;\n        Log.i(TAG, \"Succeeded in getting preferences.\");\n      }).catch((err: ESObject) => {\n        Log.w(TAG, \"Failed to get preferences. code =\" + err.code + \", message =\" + err.message);\n      })\n    } catch(err) {\n      Log.w(TAG, \"Failed to get preferences.\"+ JSON.stringify(err));\n    }\n    this.setup(binding.getBinaryMessenger(), this);\n  }\n\n  onDetachedFromEngine(binding: FlutterPluginBinding): void {\n    try {\n      let promise = this.preferences?.flush();\n      promise?.then(() => {\n        Log.i(TAG, \"Succeeded in flushing.\");\n      }).catch((err: ESObject) => {\n        Log.w(TAG, \"Failed to flush.\" + JSON.stringify(err));\n      })\n    } catch (err) {\n      Log.w(TAG, \"Failed to flush.\" + JSON.stringify(err));\n    }\n    this.setup(binding.getBinaryMessenger(), null);\n  }\n\n  setBool(key: string, value: boolean): Promise<void> {\n    return this.put(key, value)\n  }\n\n  transformPref(value: Object): Object {\n    if (typeof value == \"string\") {\n      let stringValue = (value as string);\n      if (stringValue.startsWith(LIST_IDENTIFIER)) {\n        let strList: ESObject = this.listEncoder.decode(stringValue.substring(LIST_IDENTIFIER.length));\n        let t: ESObject = JSON.parse(strList);\n        return t;\n      }\n    }\n    return value;\n  }\n}\n\nclass ListEncoder implements SharedPreferencesListEncoder {\n  encode(list: string[]): string {\n    try {\n      let jsonList = JSON.stringify(list)\n      return buffer.from(jsonList).toString('base64');;\n    } catch (err) {\n      Log.e(TAG, \"Failed encode.\"  + JSON.stringify(err));\n    }\n    return ''\n  }\n\n  decode(listString: string): ESObject {\n    try {\n      let buf = buffer.from(listString, 'base64');\n      return buf.toString();\n    } catch (err) {\n      Log.e(TAG, \"Failed decode.\" + JSON.stringify(err));\n    }\n    return undefined\n  }\n}", "leaked": true, "text_tokens": 3391, "split": "valid"}
{"path": "sub-window-floating-window~harmonyos_samples~465/entry/src/main/ets/pages/RouterRedirect.ets", "project_name": "sub-window-floating-window~harmonyos_samples~465", "text": "import { router, window } from '@kit.ArkUI';\nimport CommonConstants from '../constants/CommonConstants';\nimport Logger from '../utils/Logger';\n\n@Entry\n@Component\nstruct RouterRedirect {\n  @State windowStage: window.WindowStage = AppStorage.get('windowStage') as window.WindowStage;\n\n  onPageShow(): void {\n    this.windowStage.createSubWindow('RouterRedirectPage', (err, windowClass) => {\n      if (err.code > 0) {\n        Logger.error('failed to create subWindow Cause:' + err.message);\n        return;\n      }\n      try {\n        windowClass.setUIContent('pages/RouterRedirectPage',()=>{\n          windowClass.setWindowBackgroundColor('#00000000');\n        });\n        windowClass.moveWindowTo(CommonConstants.DEFAULT_WINDOW_X, CommonConstants.DEFAULT_WINDOW_Y);\n        windowClass.resize(this.getUIContext().vp2px(CommonConstants.DEFAULT_WINDOW_SIZE),\n          this.getUIContext().vp2px(CommonConstants.DEFAULT_WINDOW_SIZE));\n        windowClass.showWindow();\n        windowClass.setWindowLayoutFullScreen(true);\n      } catch (err) {\n        Logger.error('failed to create subWindow Cause:' + err);\n      }\n    })\n  }\n\n  onPageHide(): void {\n    if (window.findWindow('RouterRedirectPage').isWindowShowing()) {\n      window.findWindow('RouterRedirectPage').destroyWindow()\n    }\n  }\n\n  build() {\n    Navigation() {\n      Column() {\n        Row() {\n          Image($r('app.media.ic_public_back'))\n            .width($r('app.float.back_image'))\n            .height($r('app.float.back_image'))\n            .margin({\n              left: $r('app.float.common_margin'),\n              top: $r('app.float.common_margin')\n            })\n            .onClick(() => {\n              this.getUIContext().getRouter().back();\n            })\n        }\n        .width(CommonConstants.FULL_PERCENT)\n        Text($r('app.string.router_back'))\n          .fontSize($r('sys.float.ohos_id_text_size_body3'))\n          .fontColor($r('sys.color.ohos_id_color_text_secondary'))\n          .margin({\n            bottom: $r('app.float.common_lr_padding')\n          })\n      }\n      .height(CommonConstants.FULL_PERCENT)\n      .justifyContent(FlexAlign.SpaceBetween)\n    }\n    .hideTitleBar(true)\n    .hideBackButton(false)\n    .hideToolBar(true)\n    .backgroundColor($r('sys.color.ohos_id_color_sub_background'))\n  }\n}", "id": "50652865a49ab31f298814d39a0193058444d154e558df7173817afd2948825f", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "ArkTS代码结构完整，生态耦合自然，具备实用性和学习价值。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2383, "completion_tokens": 66, "total_tokens": 2449, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"ArkTS代码结构完整，生态耦合自然，具备实用性和学习价值。\"\n}", "llm_formatted": "import { router, window } from '@kit.ArkUI';\nimport CommonConstants from '../constants/CommonConstants';\nimport Logger from '../utils/Logger';\n\n@Entry\n@Component\nstruct RouterRedirect {\n  @State windowStage: window.WindowStage = AppStorage.get('windowStage') as window.WindowStage;\n\n  onPageShow(): void {\n    this.windowStage.createSubWindow('RouterRedirectPage', (err, windowClass) => {\n      if (err.code > 0) {\n        Logger.error('failed to create subWindow Cause:' + err.message);\n        return;\n      }\n      try {\n        windowClass.setUIContent('pages/RouterRedirectPage',()=>{\n          windowClass.setWindowBackgroundColor('#00000000');\n        });\n        windowClass.moveWindowTo(CommonConstants.DEFAULT_WINDOW_X, CommonConstants.DEFAULT_WINDOW_Y);\n        windowClass.resize(this.getUIContext().vp2px(CommonConstants.DEFAULT_WINDOW_SIZE),\n          this.getUIContext().vp2px(CommonConstants.DEFAULT_WINDOW_SIZE));\n        windowClass.showWindow();\n        windowClass.setWindowLayoutFullScreen(true);\n      } catch (err) {\n        Logger.error('failed to create subWindow Cause:' + err);\n      }\n    })\n  }\n\n  onPageHide(): void {\n    if (window.findWindow('RouterRedirectPage').isWindowShowing()) {\n      window.findWindow('RouterRedirectPage').destroyWindow()\n    }\n  }\n\n  build() {\n    Navigation() {\n      Column() {\n        Row() {\n          Image($r('app.media.ic_public_back'))\n            .width($r('app.float.back_image'))\n            .height($r('app.float.back_image'))\n            .margin({\n              left: $r('app.float.common_margin'),\n              top: $r('app.float.common_margin')\n            })\n            .onClick(() => {\n              this.getUIContext().getRouter().back();\n            })\n        }\n        .width(CommonConstants.FULL_PERCENT)\n        Text($r('app.string.router_back'))\n          .fontSize($r('sys.float.ohos_id_text_size_body3'))\n          .fontColor($r('sys.color.ohos_id_color_text_secondary'))\n          .margin({\n            bottom: $r('app.float.common_lr_padding')\n          })\n      }\n      .height(CommonConstants.FULL_PERCENT)\n      .justifyContent(FlexAlign.SpaceBetween)\n    }\n    .hideTitleBar(true)\n    .hideBackButton(false)\n    .hideToolBar(true)\n    .backgroundColor($r('sys.color.ohos_id_color_sub_background'))\n  }\n}", "leaked": true, "text_tokens": 514, "split": "valid"}
{"path": "applications_filepicker~OpenHarmony~799/entry/src/main/ets/pages/component/myphone/BreadCrumb.ets", "project_name": "applications_filepicker~OpenHarmony~799", "text": "import { BreadData } from '../../../databases/model/FileData';\n\n@Styles\nfunction pressedStyles() {\n  .backgroundColor($r('app.color.hicloud_hmos_bg'))\n  .borderRadius($r('app.float.common_borderRadius8'))\n}\n\n@Styles\nfunction normalStyles() {\n  .backgroundColor($r('app.color.transparent_color'))\n  .borderRadius($r('app.float.common_borderRadius8'))\n}\n\n@Component\nexport struct BreadCrumb {\n  @Link @Watch('onDireListUpdated') direList: BreadData[];\n  scroller: Scroller = new Scroller();\n\n  // 监听面包屑变化，滚动到指定位置\n  onDireListUpdated(): void {\n    setTimeout(() => {\n      this.scroller.scrollEdge(Edge.End);\n    }, 10);\n  }\n\n  build() {\n    Row() {\n      Row() {\n        Text($r('app.string.myPhone'))\n          .fontSize($r('app.float.common_font_size12'))\n          .opacity($r('app.float.common_opacity9'))\n          .height($r('app.float.common_size30'))\n          .fontColor(this.direList.length ? $r('app.color.detail_path_text_color') : $r('app.color.black'))\n          .textOverflow({ overflow: TextOverflow.Ellipsis })\n          .stateStyles({\n            pressed: pressedStyles,\n            normal: normalStyles\n          })\n        if (this.direList.length) {\n          Image($r('app.media.ic_arrow_right'))\n            .objectFit(ImageFit.Contain)\n            .height($r('app.float.common_size15'))\n            .width($r('app.float.common_size15'))\n            .interpolation(ImageInterpolation.Medium)\n        }\n      }\n      .onClick(() => {\n        if (!this.direList.length) {\n          return;\n        }\n        this.direList = [];\n      })\n\n      Scroll(this.scroller) {\n        Row() {\n          ForEach(this.direList, (item: BreadData, index) => {\n            BreadCrumbItem({\n              direItem: item,\n              index: index,\n              direList: $direList,\n            })\n          }, (item: BreadData) => item.url.toString())\n        }\n      }\n      .layoutWeight(1)\n      .align(Alignment.TopStart)\n      .scrollBar(BarState.Off)\n      .scrollable(ScrollDirection.Horizontal)\n    }\n    .padding({ left: $r('app.float.common_padding16'), right: $r('app.float.common_padding16') })\n  }\n}\n\n@Component\nstruct BreadCrumbItem {\n  direItem: BreadData | undefined = undefined;\n  index: number = 0;\n  @Link direList: BreadData[];\n\n  getTitle(breadCrumb: string) {\n    const breadCrumbMaxLength = 10;\n    return breadCrumb.length > breadCrumbMaxLength ? breadCrumb.substring(0, breadCrumbMaxLength) + '...' : breadCrumb;\n  }\n\n  isLast(): boolean {\n    return this.index === this.direList.length - 1;\n  }\n\n  build() {\n    Row() {\n      Text(this.getTitle('' + this.direItem?.title))\n        .fontSize($r('app.float.common_font_size12'))\n        .opacity($r('app.float.common_opacity9'))\n        .fontColor(this.isLast() ? $r('app.color.black') : $r('app.color.detail_path_text_color'))\n        .height($r('app.float.common_size30'))\n        .margin({ left: $r('app.float.common_size4'), right: $r('app.float.common_size4') })\n        .textOverflow({ overflow: TextOverflow.Ellipsis })\n        .textAlign(TextAlign.Center)\n        .maxLines(1)\n        .stateStyles({\n          pressed: pressedStyles,\n          normal: normalStyles\n        })\n      if (!this.isLast()) {\n        Image($r('app.media.ic_arrow_right'))\n          .objectFit(ImageFit.Contain)\n          .autoResize(false)\n          .height($r('app.float.common_size15'))\n          .width($r('app.float.common_size15'))\n      }\n    }\n    .height($r('app.float.common_size30'))\n    .onClick(() => {\n      if (this.isLast()) {\n        return;\n      }\n      this.direList.splice(this.index + 1);\n    })\n  }\n}\n\n", "id": "bca35648be77587a6c1108518aa3861959bdacc6f2fab369a3710e508392c80c", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "ArkTS组件结构清晰，生态耦合自然，具备良好可迁移性与学习价值。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2784, "completion_tokens": 69, "total_tokens": 2853, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"ArkTS组件结构清晰，生态耦合自然，具备良好可迁移性与学习价值。\"\n}", "llm_formatted": "import { BreadData } from '../../../databases/model/FileData';\n\n@Styles\nfunction pressedStyles() {\n  .backgroundColor($r('app.color.hicloud_hmos_bg'))\n  .borderRadius($r('app.float.common_borderRadius8'))\n}\n\n@Styles\nfunction normalStyles() {\n  .backgroundColor($r('app.color.transparent_color'))\n  .borderRadius($r('app.float.common_borderRadius8'))\n}\n\n@Component\nexport struct BreadCrumb {\n  @Link @Watch('onDireListUpdated') direList: BreadData[];\n  scroller: Scroller = new Scroller();\n\n  // 监听面包屑变化，滚动到指定位置\n  onDireListUpdated(): void {\n    setTimeout(() => {\n      this.scroller.scrollEdge(Edge.End);\n    }, 10);\n  }\n\n  build() {\n    Row() {\n      Row() {\n        Text($r('app.string.myPhone'))\n          .fontSize($r('app.float.common_font_size12'))\n          .opacity($r('app.float.common_opacity9'))\n          .height($r('app.float.common_size30'))\n          .fontColor(this.direList.length ? $r('app.color.detail_path_text_color') : $r('app.color.black'))\n          .textOverflow({ overflow: TextOverflow.Ellipsis })\n          .stateStyles({\n            pressed: pressedStyles,\n            normal: normalStyles\n          })\n        if (this.direList.length) {\n          Image($r('app.media.ic_arrow_right'))\n            .objectFit(ImageFit.Contain)\n            .height($r('app.float.common_size15'))\n            .width($r('app.float.common_size15'))\n            .interpolation(ImageInterpolation.Medium)\n        }\n      }\n      .onClick(() => {\n        if (!this.direList.length) {\n          return;\n        }\n        this.direList = [];\n      })\n\n      Scroll(this.scroller) {\n        Row() {\n          ForEach(this.direList, (item: BreadData, index) => {\n            BreadCrumbItem({\n              direItem: item,\n              index: index,\n              direList: $direList,\n            })\n          }, (item: BreadData) => item.url.toString())\n        }\n      }\n      .layoutWeight(1)\n      .align(Alignment.TopStart)\n      .scrollBar(BarState.Off)\n      .scrollable(ScrollDirection.Horizontal)\n    }\n    .padding({ left: $r('app.float.common_padding16'), right: $r('app.float.common_padding16') })\n  }\n}\n\n@Component\nstruct BreadCrumbItem {\n  direItem: BreadData | undefined = undefined;\n  index: number = 0;\n  @Link direList: BreadData[];\n\n  getTitle(breadCrumb: string) {\n    const breadCrumbMaxLength = 10;\n    return breadCrumb.length > breadCrumbMaxLength ? breadCrumb.substring(0, breadCrumbMaxLength) + '...' : breadCrumb;\n  }\n\n  isLast(): boolean {\n    return this.index === this.direList.length - 1;\n  }\n\n  build() {\n    Row() {\n      Text(this.getTitle('' + this.direItem?.title))\n        .fontSize($r('app.float.common_font_size12'))\n        .opacity($r('app.float.common_opacity9'))\n        .fontColor(this.isLast() ? $r('app.color.black') : $r('app.color.detail_path_text_color'))\n        .height($r('app.float.common_size30'))\n        .margin({ left: $r('app.float.common_size4'), right: $r('app.float.common_size4') })\n        .textOverflow({ overflow: TextOverflow.Ellipsis })\n        .textAlign(TextAlign.Center)\n        .maxLines(1)\n        .stateStyles({\n          pressed: pressedStyles,\n          normal: normalStyles\n        })\n      if (!this.isLast()) {\n        Image($r('app.media.ic_arrow_right'))\n          .objectFit(ImageFit.Contain)\n          .autoResize(false)\n          .height($r('app.float.common_size15'))\n          .width($r('app.float.common_size15'))\n      }\n    }\n    .height($r('app.float.common_size30'))\n    .onClick(() => {\n      if (this.isLast()) {\n        return;\n      }\n      this.direList.splice(this.index + 1);\n    })\n  }\n}\n\n", "leaked": true, "text_tokens": 915, "split": "valid"}
{"path": "component-collection~harmonyos_samples~391/entry/src/main/ets/pages/universal/properties/translateSample/TranslateSample.ets", "project_name": "component-collection~harmonyos_samples~391", "text": "import { CommonItemSlider } from '../../../../common/AttributeModificationTool';\nimport { IntroductionTitle } from '../../../../common/IntroductionTitle';\nimport { TitleBar } from '../../../../common/TitleBar';\n\n@Entry\n@Component\nstruct TranslateSample {\n  @State imageTranslateX: number = 0;\n  @State imageTranslateY: number = 0;\n  @State containerTranslateX: number = 0;\n  @State containerTranslateY: number = 0;\n  private componentSliders: AxisInfo[] =\n    [\n      { isXAxis: true, axisName: $r('app.string.translate_x_axis') },\n      { isXAxis: false, axisName: $r('app.string.translate_y_axis') }\n    ];\n  private imageSliders: AxisInfo[] =\n    [\n      { isXAxis: true, axisName: $r('app.string.translate_x_axis') },\n      { isXAxis: false, axisName: $r('app.string.translate_y_axis') }\n    ];\n\n  build() {\n    Column() {\n      TitleBar({ title: $r('app.string.graphic_transformation_translate') })\n      Scroll() {\n        Column() {\n          IntroductionTitle({ introduction: $r('app.string.translate_image') })\n          // Image translate\n          Column() {\n            Image($r('app.media.ic_scenery1'))\n              .width(160)\n              .height(120)\n              .translate({ x: this.imageTranslateX, y: this.imageTranslateY })\n          }\n          .height(180)\n          .padding(12)\n          .width('100%')\n          .borderRadius(24)\n          .backgroundColor(Color.White)\n          .justifyContent(FlexAlign.Center)\n\n          ForEach(this.imageSliders, (item: AxisInfo) => {\n            Row() {\n              if (item.isXAxis) {\n                CommonItemSlider({ changeValue: $imageTranslateX, min: -20, max: 20, name: item.axisName })\n              } else {\n                CommonItemSlider({ changeValue: $imageTranslateY, min: -20, max: 20, name: item.axisName })\n              }\n            }\n            .padding(4)\n            .margin({ left: 10, right: 10 })\n            .justifyContent(FlexAlign.Center)\n          })\n          IntroductionTitle({ introduction: $r('app.string.translate_container') })\n          // Container translate\n          Column() {\n            Column() {\n              this.TextInfo()\n              this.TextInfo()\n              this.TextInfo()\n            }\n            .margin({ top: 20, bottom: 20 })\n            .backgroundColor($r('app.color.background_grey'))\n            .translate({ x: this.containerTranslateX, y: this.containerTranslateY })\n            .justifyContent(FlexAlign.Center)\n          }\n          .width('100%')\n          .borderRadius(24)\n          .backgroundColor(Color.White)\n          .padding({ top: 4, bottom: 4 })\n\n          ForEach(this.componentSliders, (item: AxisInfo) => {\n            Row() {\n              if (item.isXAxis) {\n                // -20 and 20 are the intervals of translation\n                CommonItemSlider({ changeValue: $containerTranslateX, min: -20, max: 20, name: item.axisName })\n              } else {\n                CommonItemSlider({ changeValue: $containerTranslateY, min: -20, max: 20, name: item.axisName })\n              }\n            }\n            .padding(4)\n            .margin({ left: 10, right: 10 })\n            .justifyContent(FlexAlign.Center)\n          })\n        }\n        .constraintSize({ minHeight: '100%' })\n      }\n    }\n    .width('100%')\n    .backgroundColor($r('app.color.background_shallow_grey'))\n  }\n\n  @Builder\n  TextInfo() {\n    Text('ArkUI')\n      .margin(8)\n      .fontSize(18)\n  }\n}\n\nclass AxisInfo {\n  isXAxis: boolean = true;\n  axisName: Resource = $r('app.string.translate_x_axis');\n}", "id": "86977b69a50fb249ac07e44fb6c1b8b9f6ba8f02a50e24d2874e16844bffb534", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "ArkTS结构完整，生态耦合自然，具备良好的类型与组件使用示范性。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2751, "completion_tokens": 68, "total_tokens": 2819, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"ArkTS结构完整，生态耦合自然，具备良好的类型与组件使用示范性。\"\n}", "llm_formatted": "import { CommonItemSlider } from '../../../../common/AttributeModificationTool';\nimport { IntroductionTitle } from '../../../../common/IntroductionTitle';\nimport { TitleBar } from '../../../../common/TitleBar';\n\n@Entry\n@Component\nstruct TranslateSample {\n  @State imageTranslateX: number = 0;\n  @State imageTranslateY: number = 0;\n  @State containerTranslateX: number = 0;\n  @State containerTranslateY: number = 0;\n  private componentSliders: AxisInfo[] =\n    [\n      { isXAxis: true, axisName: $r('app.string.translate_x_axis') },\n      { isXAxis: false, axisName: $r('app.string.translate_y_axis') }\n    ];\n  private imageSliders: AxisInfo[] =\n    [\n      { isXAxis: true, axisName: $r('app.string.translate_x_axis') },\n      { isXAxis: false, axisName: $r('app.string.translate_y_axis') }\n    ];\n\n  build() {\n    Column() {\n      TitleBar({ title: $r('app.string.graphic_transformation_translate') })\n      Scroll() {\n        Column() {\n          IntroductionTitle({ introduction: $r('app.string.translate_image') })\n          // Image translate\n          Column() {\n            Image($r('app.media.ic_scenery1'))\n              .width(160)\n              .height(120)\n              .translate({ x: this.imageTranslateX, y: this.imageTranslateY })\n          }\n          .height(180)\n          .padding(12)\n          .width('100%')\n          .borderRadius(24)\n          .backgroundColor(Color.White)\n          .justifyContent(FlexAlign.Center)\n\n          ForEach(this.imageSliders, (item: AxisInfo) => {\n            Row() {\n              if (item.isXAxis) {\n                CommonItemSlider({ changeValue: $imageTranslateX, min: -20, max: 20, name: item.axisName })\n              } else {\n                CommonItemSlider({ changeValue: $imageTranslateY, min: -20, max: 20, name: item.axisName })\n              }\n            }\n            .padding(4)\n            .margin({ left: 10, right: 10 })\n            .justifyContent(FlexAlign.Center)\n          })\n          IntroductionTitle({ introduction: $r('app.string.translate_container') })\n          // Container translate\n          Column() {\n            Column() {\n              this.TextInfo()\n              this.TextInfo()\n              this.TextInfo()\n            }\n            .margin({ top: 20, bottom: 20 })\n            .backgroundColor($r('app.color.background_grey'))\n            .translate({ x: this.containerTranslateX, y: this.containerTranslateY })\n            .justifyContent(FlexAlign.Center)\n          }\n          .width('100%')\n          .borderRadius(24)\n          .backgroundColor(Color.White)\n          .padding({ top: 4, bottom: 4 })\n\n          ForEach(this.componentSliders, (item: AxisInfo) => {\n            Row() {\n              if (item.isXAxis) {\n                // -20 and 20 are the intervals of translation\n                CommonItemSlider({ changeValue: $containerTranslateX, min: -20, max: 20, name: item.axisName })\n              } else {\n                CommonItemSlider({ changeValue: $containerTranslateY, min: -20, max: 20, name: item.axisName })\n              }\n            }\n            .padding(4)\n            .margin({ left: 10, right: 10 })\n            .justifyContent(FlexAlign.Center)\n          })\n        }\n        .constraintSize({ minHeight: '100%' })\n      }\n    }\n    .width('100%')\n    .backgroundColor($r('app.color.background_shallow_grey'))\n  }\n\n  @Builder\n  TextInfo() {\n    Text('ArkUI')\n      .margin(8)\n      .fontSize(18)\n  }\n}\n\nclass AxisInfo {\n  isXAxis: boolean = true;\n  axisName: Resource = $r('app.string.translate_x_axis');\n}", "leaked": true, "text_tokens": 882, "split": "valid"}
{"path": "xts_acts~openharmony~1331/arkui/ace_c_arkui_test/entry/src/ohosTest/ets/test/textinput/TextInputClearButtonModeTest.ets", "project_name": "xts_acts~openharmony~1331", "text": "import { expect, describe, it, afterEach, Level } from '@ohos/hypium';\nimport Utils from '../common/Utils';\nimport nativeFunc from 'libnativefunc.so'\n\nexport default function textInputClearButtonModeTest() {\n\n  describe('TextInputClearButtonModeTest', () => {\n\n    afterEach(async (done: Function) => {\n      await Utils.sleep(100);\n      done();\n    })\n\n    /*\n     * @tc.number     : SUB_ARKUI_CAPI_TEXTINPUT_CLEARBUTTONMODE_0100\n     * @tc.name       : testTextInputClearButtonMode001\n     * @tc.desc       : testing clearButtonMode for TextInput with ARKUI_CANCELBUTTON_STYLE_INPUT value\n     * @tc.size       : MediumTest\n     * @tc.type       : Function\n     * @tc.level      : Level 1\n     */\n    it('testTextInputClearButtonMode001', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testTextInputClearButtonMode001()).assertEqual(0)\n      done();\n    });\n\n    /*\n     * @tc.number     : SUB_ARKUI_CAPI_TEXTINPUT_CLEARBUTTONMODE_0200\n     * @tc.name       : testTextInputClearButtonMode002\n     * @tc.desc       : testing clearButtonMode for TextInput with ARKUI_CANCELBUTTON_STYLE_INVISIBLE value\n     * @tc.size       : MediumTest\n     * @tc.type       : Function\n     * @tc.level      : Level 1\n     */\n    it('testTextInputClearButtonMode002', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testTextInputClearButtonMode002()).assertEqual(0)\n      done();\n    });\n\n    /*\n     * @tc.number     : SUB_ARKUI_CAPI_TEXTINPUT_CLEARBUTTONMODE_0300\n     * @tc.name       : testTextInputClearButtonMode003\n     * @tc.desc       : testing clearButtonMode for TextInput with ARKUI_CANCELBUTTON_STYLE_CONSTANT value\n     * @tc.size       : MediumTest\n     * @tc.type       : Function\n     * @tc.level      : Level 1\n     */\n    it('testTextInputClearButtonMode003', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testTextInputClearButtonMode003()).assertEqual(0)\n      done();\n    });\n\n    /*\n     * @tc.number     : SUB_ARKUI_CAPI_TEXTINPUT_CLEARBUTTONMODE_0400\n     * @tc.name       : testTextInputClearButtonMode004\n     * @tc.desc       : testing clearButtonMode for TextInput with abnormal value\n     * @tc.size       : MediumTest\n     * @tc.type       : Function\n     * @tc.level      : Level 1\n     */\n    it('testTextInputClearButtonMode004', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testTextInputClearButtonMode004()).assertEqual(0)\n      done();\n    });\n  })\n}\n", "id": "b8d651d3fcc3e6a58a1c895ad6194697b81702eef19dfaf91e064dbc9e64d754", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 3.0, "confidence": 0.95, "rationale": "符合ArkTS生态，结构清晰，具备测试代码的学习价值。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2536, "completion_tokens": 63, "total_tokens": 2599, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 3,\n  \"confidence\": 0.95,\n  \"rationale\": \"符合ArkTS生态，结构清晰，具备测试代码的学习价值。\"\n}", "llm_formatted": "import { expect, describe, it, afterEach, Level } from '@ohos/hypium';\nimport Utils from '../common/Utils';\nimport nativeFunc from 'libnativefunc.so'\n\nexport default function textInputClearButtonModeTest() {\n\n  describe('TextInputClearButtonModeTest', () => {\n\n    afterEach(async (done: Function) => {\n      await Utils.sleep(100);\n      done();\n    })\n\n    /*\n     * @tc.number     : SUB_ARKUI_CAPI_TEXTINPUT_CLEARBUTTONMODE_0100\n     * @tc.name       : testTextInputClearButtonMode001\n     * @tc.desc       : testing clearButtonMode for TextInput with ARKUI_CANCELBUTTON_STYLE_INPUT value\n     * @tc.size       : MediumTest\n     * @tc.type       : Function\n     * @tc.level      : Level 1\n     */\n    it('testTextInputClearButtonMode001', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testTextInputClearButtonMode001()).assertEqual(0)\n      done();\n    });\n\n    /*\n     * @tc.number     : SUB_ARKUI_CAPI_TEXTINPUT_CLEARBUTTONMODE_0200\n     * @tc.name       : testTextInputClearButtonMode002\n     * @tc.desc       : testing clearButtonMode for TextInput with ARKUI_CANCELBUTTON_STYLE_INVISIBLE value\n     * @tc.size       : MediumTest\n     * @tc.type       : Function\n     * @tc.level      : Level 1\n     */\n    it('testTextInputClearButtonMode002', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testTextInputClearButtonMode002()).assertEqual(0)\n      done();\n    });\n\n    /*\n     * @tc.number     : SUB_ARKUI_CAPI_TEXTINPUT_CLEARBUTTONMODE_0300\n     * @tc.name       : testTextInputClearButtonMode003\n     * @tc.desc       : testing clearButtonMode for TextInput with ARKUI_CANCELBUTTON_STYLE_CONSTANT value\n     * @tc.size       : MediumTest\n     * @tc.type       : Function\n     * @tc.level      : Level 1\n     */\n    it('testTextInputClearButtonMode003', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testTextInputClearButtonMode003()).assertEqual(0)\n      done();\n    });\n\n    /*\n     * @tc.number     : SUB_ARKUI_CAPI_TEXTINPUT_CLEARBUTTONMODE_0400\n     * @tc.name       : testTextInputClearButtonMode004\n     * @tc.desc       : testing clearButtonMode for TextInput with abnormal value\n     * @tc.size       : MediumTest\n     * @tc.type       : Function\n     * @tc.level      : Level 1\n     */\n    it('testTextInputClearButtonMode004', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testTextInputClearButtonMode004()).assertEqual(0)\n      done();\n    });\n  })\n}\n", "leaked": true, "text_tokens": 667, "split": "valid"}
{"path": "component-collection~harmonyos_samples~391/entry/src/main/ets/pages/universal/properties/fontSample/FontSample.ets", "project_name": "component-collection~harmonyos_samples~391", "text": "import { IntroductionTitle } from '../../../../common/IntroductionTitle';\nimport { TitleBar } from '../../../../common/TitleBar';\n\n@Extend(Row)\nfunction rowStyle() {\n  .height(80)\n  .width('100%')\n  .borderRadius(24)\n  .backgroundColor(Color.White)\n  .margin({ left: 12, right: 12 })\n  .justifyContent(FlexAlign.SpaceAround)\n  .padding({ left: 20, right: 20, top: 24, bottom: 24 })\n}\n\n@Entry\n@Component\nstruct Font {\n  build() {\n    Column() {\n      TitleBar({ title: $r('app.string.prop_font') })\n      Scroll() {\n        Column() {\n          IntroductionTitle({ introduction: $r('app.string.font_color') })\n          Row() {\n            Text($r('app.string.prop_bluefont'))\n              .fontSize(20)\n              .fontColor($r('app.color.background_blue'))\n            Text($r('app.string.prop_orangefont'))\n              .fontSize(20)\n              .fontColor($r('app.color.background_orange'))\n            Text($r('app.string.prop_pinkfont'))\n              .fontSize(20)\n              .fontColor($r('app.color.background_pink'))\n          }\n          .rowStyle()\n\n          IntroductionTitle({ introduction: $r('app.string.font_size') })\n          Row() {\n            Text('14vp')\n              .fontSize(14)\n            Text('18vp')\n              .fontSize(18)\n            Text('26vp')\n              .fontSize(26)\n          }\n          .rowStyle()\n\n          IntroductionTitle({ introduction: $r('app.string.font_thickness') })\n          Row() {\n            Text('300')\n              .fontSize(18)\n              .fontWeight(300)\n            Text('500')\n              .fontSize(18)\n              .fontWeight(500)\n            Text('800')\n              .fontSize(18)\n              .fontWeight(800)\n          }\n          .rowStyle()\n\n          IntroductionTitle({ introduction: $r('app.string.font_style') })\n          Row() {\n            Text('normal')\n              .fontSize(20)\n              .fontStyle(FontStyle.Normal)\n            Text('italic')\n              .fontSize(20)\n              .fontStyle(FontStyle.Italic)\n          }\n          .rowStyle()\n\n          IntroductionTitle({ introduction: $r('app.string.prop_size') })\n          Row() {\n            Text('sans-serif')\n              .fontSize(20)\n              .fontFamily('sans-serif')\n            Text('HYQiHei-65S')\n              .fontSize(20)\n              .fontFamily('HYQiHei-65S')\n          }\n          .rowStyle()\n        }\n        .constraintSize({ minHeight: '100%' })\n      }\n    }\n    .width('100%')\n    .backgroundColor($r('app.color.background_shallow_grey'))\n  }\n}", "id": "d46b44993f1aba094598bdcdb0700956f582836f4a07ff4d9c9f9793a1358338", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "ArkTS代码结构清晰，生态耦合自然，具有良好的可学习性和迁移价值。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2499, "completion_tokens": 68, "total_tokens": 2567, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"ArkTS代码结构清晰，生态耦合自然，具有良好的可学习性和迁移价值。\"\n}", "llm_formatted": "import { IntroductionTitle } from '../../../../common/IntroductionTitle';\nimport { TitleBar } from '../../../../common/TitleBar';\n\n@Extend(Row)\nfunction rowStyle() {\n  .height(80)\n  .width('100%')\n  .borderRadius(24)\n  .backgroundColor(Color.White)\n  .margin({ left: 12, right: 12 })\n  .justifyContent(FlexAlign.SpaceAround)\n  .padding({ left: 20, right: 20, top: 24, bottom: 24 })\n}\n\n@Entry\n@Component\nstruct Font {\n  build() {\n    Column() {\n      TitleBar({ title: $r('app.string.prop_font') })\n      Scroll() {\n        Column() {\n          IntroductionTitle({ introduction: $r('app.string.font_color') })\n          Row() {\n            Text($r('app.string.prop_bluefont'))\n              .fontSize(20)\n              .fontColor($r('app.color.background_blue'))\n            Text($r('app.string.prop_orangefont'))\n              .fontSize(20)\n              .fontColor($r('app.color.background_orange'))\n            Text($r('app.string.prop_pinkfont'))\n              .fontSize(20)\n              .fontColor($r('app.color.background_pink'))\n          }\n          .rowStyle()\n\n          IntroductionTitle({ introduction: $r('app.string.font_size') })\n          Row() {\n            Text('14vp')\n              .fontSize(14)\n            Text('18vp')\n              .fontSize(18)\n            Text('26vp')\n              .fontSize(26)\n          }\n          .rowStyle()\n\n          IntroductionTitle({ introduction: $r('app.string.font_thickness') })\n          Row() {\n            Text('300')\n              .fontSize(18)\n              .fontWeight(300)\n            Text('500')\n              .fontSize(18)\n              .fontWeight(500)\n            Text('800')\n              .fontSize(18)\n              .fontWeight(800)\n          }\n          .rowStyle()\n\n          IntroductionTitle({ introduction: $r('app.string.font_style') })\n          Row() {\n            Text('normal')\n              .fontSize(20)\n              .fontStyle(FontStyle.Normal)\n            Text('italic')\n              .fontSize(20)\n              .fontStyle(FontStyle.Italic)\n          }\n          .rowStyle()\n\n          IntroductionTitle({ introduction: $r('app.string.prop_size') })\n          Row() {\n            Text('sans-serif')\n              .fontSize(20)\n              .fontFamily('sans-serif')\n            Text('HYQiHei-65S')\n              .fontSize(20)\n              .fontFamily('HYQiHei-65S')\n          }\n          .rowStyle()\n        }\n        .constraintSize({ minHeight: '100%' })\n      }\n    }\n    .width('100%')\n    .backgroundColor($r('app.color.background_shallow_grey'))\n  }\n}", "leaked": true, "text_tokens": 630, "split": "valid"}
{"path": "JumpBetweenApps~harmonyos_samples~501/dependence/AppLinkingTestDemo/entry/src/main/ets/pages/Index.ets", "project_name": "JumpBetweenApps~harmonyos_samples~501", "text": "import { Goods } from './Goods';\nimport { PaymentSuccess } from './PaymentSuccess';\n\n// [Start Index_part]\n@Entry\n@Component\nstruct Index {\n  @StorageProp('targetPage') targetPage: string = '';\n  @Provide navPathStack: NavPathStack = new NavPathStack();\n\n  onPageShow(): void {\n    const currentPage = this.navPathStack.getAllPathName()[this.navPathStack.size() -1];\n    if (!currentPage) {\n      this.navPathStack.pushPathByName('Goods', null);\n    }\n    if (this.targetPage && this.targetPage.length !== 0 && currentPage !== 'Goods') {\n      this.navPathStack.pushPathByName(this.targetPage, null);\n    }\n  }\n\n  // [StartExclude Index_part]\n  @Builder\n  PageMap(name: string) {\n    if (name === 'Goods') {\n      Goods()\n    } else if (name === 'PaymentSuccess') {\n      PaymentSuccess()\n    }\n  }\n  build() {\n    Navigation(this.navPathStack) {\n      Column() {\n        Text($r('app.string.home_page'))\n        Button($r('app.string.go_to_page')).onClick(() => {\n          this.navPathStack.pushPathByName('Goods', null)\n        })\n      }\n      .height('100%')\n      .width('100%')\n      .justifyContent(FlexAlign.Center)\n      .alignItems(HorizontalAlign.Center)\n    }\n    .navDestination(this.PageMap)\n    .expandSafeArea([SafeAreaType.SYSTEM], [SafeAreaEdge.BOTTOM])\n  }\n  // [EndExclude Index_part]\n}\n// [End Index_part]", "id": "98d3806335fc792b95702215caca57b0653f3b95be7203a3d94767e0af9a47d6", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 3.0, "confidence": 0.95, "rationale": "符合ArkTS规范，结构清晰，具备实际导航与页面跳转逻辑，具有学习价值。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2208, "completion_tokens": 70, "total_tokens": 2278, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 3,\n  \"confidence\": 0.95,\n  \"rationale\": \"符合ArkTS规范，结构清晰，具备实际导航与页面跳转逻辑，具有学习价值。\"\n}", "llm_formatted": "import { Goods } from './Goods';\nimport { PaymentSuccess } from './PaymentSuccess';\n\n@Entry\n@Component\nstruct Index {\n  @StorageProp('targetPage') targetPage: string = '';\n  @Provide navPathStack: NavPathStack = new NavPathStack();\n\n  onPageShow(): void {\n    const currentPage = this.navPathStack.getAllPathName()[this.navPathStack.size() -1];\n    if (!currentPage) {\n      this.navPathStack.pushPathByName('Goods', null);\n    }\n    if (this.targetPage && this.targetPage.length !== 0 && currentPage !== 'Goods') {\n      this.navPathStack.pushPathByName(this.targetPage, null);\n    }\n  }\n\n  @Builder\n  PageMap(name: string) {\n    if (name === 'Goods') {\n      Goods()\n    } else if (name === 'PaymentSuccess') {\n      PaymentSuccess()\n    }\n  }\n\n  build() {\n    Navigation(this.navPathStack) {\n      Column() {\n        Text($r('app.string.home_page'))\n        Button($r('app.string.go_to_page')).onClick(() => {\n          this.navPathStack.pushPathByName('Goods', null)\n        })\n      }\n      .height('100%')\n      .width('100%')\n      .justifyContent(FlexAlign.Center)\n      .alignItems(HorizontalAlign.Center)\n    }\n    .navDestination(this.PageMap)\n    .expandSafeArea([SafeAreaType.SYSTEM], [SafeAreaEdge.BOTTOM])\n  }\n}", "leaked": true, "text_tokens": 339, "split": "valid"}
{"path": "arkui-linux~openEuler~2446/samples/arkui-test/Component/09_Animation/entry/src/main/ets/pages/AnimateToTest.ets", "project_name": "arkui-linux~openEuler~2446", "text": "import router from '@ohos.router';\nimport prompt from '@ohos.prompt';\n\n@Entry\n@Component\nstruct AnimateToTest {\n  @State btnWidth: number = 200;\n  @State btnHeight: number = 60;\n  @State btnAnim: boolean = true;\n\n  // @ts-ignore\n  @State translate: TranslateOptions = { // 位移数据\n    x: 0,\n    y: 0,\n    z: 0\n  }\n\n  private step1: () => Promise<boolean>; // 第一步动画\n  private step2: () => Promise<boolean>; // 第二步动画\n  private step3: () => Promise<boolean>; // 第三步动画\n  private step4: () => Promise<boolean>; // 第四步动画\n\n  build() {\n    Column(){\n      Row() {\n        Button('返回', { type: ButtonType.Normal })\n          .height(30)\n          .width(50)\n          .fontColor('#696969')\n          .backgroundColor('#DCDCDC')\n          .onClick(() => {\n            router.replaceUrl({ url: 'pages/MainPage' });\n          })\n          .margin({ top: 80 })\n          .align(Alignment.Start)\n\n        Text('显式动画')\n          .fontSize(22)\n          .margin({ top: 80, left: 20 })\n      }\n      .width('80%')\n      .margin({ bottom: 30 })\n\n      Column({space: 10}) {\n        Button('Click Me')\n          .size({width: this.btnWidth, height: this.btnHeight})\n          .onClick(() => {\n            if(this.btnAnim) {\n              animateTo({\n                duration: 1300,\n                tempo: 1,\n                curve: Curve.Sharp,\n                delay: 200,\n                iterations: 1,\n                playMode: PlayMode.Normal,\n                onFinish: () => {\n                  prompt.showToast({ message: \"play finish\" })\n                }\n              }, () => {\n                this.btnWidth = 100;\n                this.btnHeight = 50;\n              });\n            } else {\n              animateTo({\n                duration: 300,\n                tempo: 1,\n                curve: Curve.Linear,\n                delay: 200,\n                iterations: 1,\n                playMode: PlayMode.Normal,\n                onFinish: () => {\n                  prompt.showToast({ message: \"play finish\" })\n                }\n              }, () => {\n                this.btnWidth = 200;\n                this.btnHeight = 60;\n              });\n            }\n            this.btnAnim = !this.btnAnim;\n          })\n\n        Button('animateTo')\n          .onClick(async () => {\n            await this.step1();            // 等待第一步动画执行完毕\n            await this.step2();            // 等待第二步动画执行完毕\n            await this.step3();            // 等待第三步动画执行完毕\n            await this.step4();            // 等待第四步动画执行完毕\n          })\n\n        Text(\"AnimateTo\")\n          .fontSize(20)\n          .backgroundColor(\"#aabbcc\")\n          .translate(this.translate)\n      }\n      .width('100%')\n      .padding(10)\n\n    }\n    .backgroundColor($r('app.color.background'))\n    .size({width: '100%', height: '100%'})\n  }\n\n  private animateStep(value: AnimateParam, event: () => void): () => Promise<boolean> {\n    return () => {\n      return new Promise((resolve, reject) => {\n        if(value) {                      // 判断参数是否合法\n          let onFinish = value.onFinish; // 保存原有动画回调\n          value.onFinish = () => {       // 替换新的动画回调\n            onFinish?.call(this)         // 执行原有动画回到\n            resolve(true);               // 触发方法执行完毕\n          }\n          animateTo(value, event);       // 开始执行显式动画\n        } else {\n          // reject(\"value invalid\")     // 触发方法执行失败\n          resolve(false);                // 参数非法，不执行\n        }\n      });\n    }\n  }\n\n  aboutToAppear() {\n    let duration = 3000;\n    this.step1 = this.animateStep({      // 初始化单步动画1\n      duration: duration,\n      tempo: 0.5,\n      curve: Curve.Linear,\n      iterations: 1,\n      playMode: PlayMode.Normal,\n      onFinish: () => {\n        console.log(\"animation finish\")\n      }\n    }, () => {\n      this.translate = {\n        x: 0,\n        y: 100,\n        z: 0\n      }\n    });\n\n    this.step2 = this.animateStep({      // 初始化单步动画2\n      duration: duration,\n      tempo: 0.5,\n      curve: Curve.Linear,\n      iterations: 1,\n      playMode: PlayMode.Normal,\n      onFinish: () => {\n        console.log(\"animation finish\")\n      }\n    }, () => {\n      this.translate = {\n        x: 100,\n        y: 100,\n        z: 0\n      }\n    });\n\n    this.step3 = this.animateStep({      // 初始化单步动画3\n      duration: duration,\n      tempo: 0.5,\n      curve: Curve.Linear,\n      iterations: 1,\n      playMode: PlayMode.Normal,\n      onFinish: () => {\n        console.log(\"animation finish\")\n      }\n    }, () => {\n      this.translate = {\n        x: 100,\n        y: 0,\n        z: 0\n      }\n    });\n\n    this.step4 = this.animateStep({      // 初始化单步动画4\n      duration: duration,\n      tempo: 0.5,\n      curve: Curve.Linear,\n      iterations: 1,\n      playMode: PlayMode.Normal,\n      onFinish: () => {\n        console.log(\"animation finish\")\n      }\n    }, () => {\n      this.translate = {\n        x: 0,\n        y: 0,\n        z: 0\n      }\n    });\n  }\n\n  // 提取一个方法\n  private generateAnimateParam(duration: number, event: () => void): AnimateParam {\n    return {\n      duration: duration,\n      tempo: 0.5,\n      curve: Curve.Linear,\n      iterations: 1,\n      playMode: PlayMode.Normal,\n      onFinish: () => {\n        event?.call(this);\n      }\n    }\n  }\n\n}", "id": "6408b4978dde654a7aa67f4674c6fd74db9b090c9955d4a49e7de2acc7292c73", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 5.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "ArkTS生态完整，动画逻辑清晰，类型与命名规范，具备高学习价值。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 3254, "completion_tokens": 68, "total_tokens": 3322, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 5,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"ArkTS生态完整，动画逻辑清晰，类型与命名规范，具备高学习价值。\"\n}", "llm_formatted": "import router from '@ohos.router';\nimport prompt from '@ohos.prompt';\n\n@Entry\n@Component\nstruct AnimateToTest {\n  @State btnWidth: number = 200;\n  @State btnHeight: number = 60;\n  @State btnAnim: boolean = true;\n\n  @State translate: TranslateOptions = {\n    x: 0,\n    y: 0,\n    z: 0\n  }\n\n  private step1: () => Promise<boolean>;\n  private step2: () => Promise<boolean>;\n  private step3: () => Promise<boolean>;\n  private step4: () => Promise<boolean>;\n\n  build() {\n    Column(){\n      Row() {\n        Button('返回', { type: ButtonType.Normal })\n          .height(30)\n          .width(50)\n          .fontColor('#696969')\n          .backgroundColor('#DCDCDC')\n          .onClick(() => {\n            router.replaceUrl({ url: 'pages/MainPage' });\n          })\n          .margin({ top: 80 })\n          .align(Alignment.Start)\n\n        Text('显式动画')\n          .fontSize(22)\n          .margin({ top: 80, left: 20 })\n      }\n      .width('80%')\n      .margin({ bottom: 30 })\n\n      Column({space: 10}) {\n        Button('Click Me')\n          .size({width: this.btnWidth, height: this.btnHeight})\n          .onClick(() => {\n            if(this.btnAnim) {\n              animateTo({\n                duration: 1300,\n                tempo: 1,\n                curve: Curve.Sharp,\n                delay: 200,\n                iterations: 1,\n                playMode: PlayMode.Normal,\n                onFinish: () => {\n                  prompt.showToast({ message: \"play finish\" })\n                }\n              }, () => {\n                this.btnWidth = 100;\n                this.btnHeight = 50;\n              });\n            } else {\n              animateTo({\n                duration: 300,\n                tempo: 1,\n                curve: Curve.Linear,\n                delay: 200,\n                iterations: 1,\n                playMode: PlayMode.Normal,\n                onFinish: () => {\n                  prompt.showToast({ message: \"play finish\" })\n                }\n              }, () => {\n                this.btnWidth = 200;\n                this.btnHeight = 60;\n              });\n            }\n            this.btnAnim = !this.btnAnim;\n          })\n\n        Button('animateTo')\n          .onClick(async () => {\n            await this.step1();\n            await this.step2();\n            await this.step3();\n            await this.step4();\n          })\n\n        Text(\"AnimateTo\")\n          .fontSize(20)\n          .backgroundColor(\"#aabbcc\")\n          .translate(this.translate)\n      }\n      .width('100%')\n      .padding(10)\n\n    }\n    .backgroundColor($r('app.color.background'))\n    .size({width: '100%', height: '100%'})\n  }\n\n  private animateStep(value: AnimateParam, event: () => void): () => Promise<boolean> {\n    return () => {\n      return new Promise((resolve, reject) => {\n        if(value) {\n          let onFinish = value.onFinish;\n          value.onFinish = () => {\n            onFinish?.call(this)\n            resolve(true);\n          }\n          animateTo(value, event);\n        } else {\n          resolve(false);\n        }\n      });\n    }\n  }\n\n  aboutToAppear() {\n    let duration = 3000;\n    this.step1 = this.animateStep({\n      duration: duration,\n      tempo: 0.5,\n      curve: Curve.Linear,\n      iterations: 1,\n      playMode: PlayMode.Normal,\n      onFinish: () => {\n        console.log(\"animation finish\")\n      }\n    }, () => {\n      this.translate = {\n        x: 0,\n        y: 100,\n        z: 0\n      }\n    });\n\n    this.step2 = this.animateStep({\n      duration: duration,\n      tempo: 0.5,\n      curve: Curve.Linear,\n      iterations: 1,\n      playMode: PlayMode.Normal,\n      onFinish: () => {\n        console.log(\"animation finish\")\n      }\n    }, () => {\n      this.translate = {\n        x: 100,\n        y: 100,\n        z: 0\n      }\n    });\n\n    this.step3 = this.animateStep({\n      duration: duration,\n      tempo: 0.5,\n      curve: Curve.Linear,\n      iterations: 1,\n      playMode: PlayMode.Normal,\n      onFinish: () => {\n        console.log(\"animation finish\")\n      }\n    }, () => {\n      this.translate = {\n        x: 100,\n        y: 0,\n        z: 0\n      }\n    });\n\n    this.step4 = this.animateStep({\n      duration: duration,\n      tempo: 0.5,\n      curve: Curve.Linear,\n      iterations: 1,\n      playMode: PlayMode.Normal,\n      onFinish: () => {\n        console.log(\"animation finish\")\n      }\n    }, () => {\n      this.translate = {\n        x: 0,\n        y: 0,\n        z: 0\n      }\n    });\n  }\n\n  private generateAnimateParam(duration: number, event: () => void): AnimateParam {\n    return {\n      duration: duration,\n      tempo: 0.5,\n      curve: Curve.Linear,\n      iterations: 1,\n      playMode: PlayMode.Normal,\n      onFinish: () => {\n        event?.call(this);\n      }\n    }\n  }\n\n}", "leaked": true, "text_tokens": 1385, "split": "valid"}
{"path": "applications_permission_manager~OpenHarmony~815/permissionmanager/src/main/ets/common/observer/EventObserver.ets", "project_name": "applications_permission_manager~OpenHarmony~815", "text": "import { AsyncCallback, BusinessError } from '@ohos.base';\nimport { Log } from '../utils/utils';\nimport commonEventManager from '@ohos.commonEventManager';\n\nexport class EventObserver {\n  private events: string[];\n  private subscriber: commonEventManager.CommonEventSubscriber | undefined = undefined;\n  private subscribeInfo: commonEventManager.CommonEventSubscribeInfo = {\n    events: []\n  };\n\n  constructor(events: string[]) {\n    this.events = events;\n  }\n\n  /**\n   * 注册监听资源变化事件\n   * @param callback\n   * return\n   */\n  public register(callback: AsyncCallback<commonEventManager.CommonEventData>): void {\n    if (callback === undefined || callback === null) {\n      Log.error(`callback is undefined.`);\n      return;\n    }\n    try {\n      if (this.events === undefined || !this.events.length) {\n        Log.error(`event is undefined.`);\n        return;\n      }\n      this.subscribeInfo.events = this.events;\n      commonEventManager.createSubscriber(this.subscribeInfo).then(subscriber => {\n        if (subscriber === undefined) {\n          Log.error(`subscriber is undefined.`);\n          return;\n        }\n        this.subscriber = subscriber;\n        try {\n          commonEventManager.subscribe(this.subscriber, callback);\n          Log.info(`subscribe success.`);\n        } catch (err) {\n          Log.error(`subscribe faild, code: ${err.code}, message: ${err.message}.`);\n        }\n      }).catch((err: BusinessError) => {\n        Log.error(`createSubscriber faild, code: ${err.code}, message: ${err.message}.`);\n      })\n    } catch (error) {\n      Log.error(`create subscriber faild, code: ${error.code}, message: ${error.message}.`);\n    }\n  }\n\n  /**\n   * 注销监听\n   * return\n   */\n  public unregister(): void {\n    if (this.subscriber === undefined) {\n      Log.error(`subscriber is undefined.`);\n      return;\n    }\n    try {\n      commonEventManager.unsubscribe(this.subscriber, err => {\n        if (err) {\n          Log.error(`unsubscriber faild, code: ${err.code}, message: ${err.message}.`);\n        } else {\n          Log.info(`unsubscriber success.`);\n        }\n      })\n    } catch (error) {\n      Log.error(`unsubscriber faild, code: ${error.code}, message: ${error.message}.`);\n    }\n  }\n\n}", "id": "39b6d41bb22cf1499b9542618be5e5243c330ee6253c52ef9a3f112580622c58", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "结构清晰，生态耦合自然，具备实用性和学习价值", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 1755, "completion_tokens": 66, "total_tokens": 1821, "raw_response": "```json\n{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"结构清晰，生态耦合自然，具备实用性和学习价值\"\n}\n```", "llm_formatted": "import { AsyncCallback, BusinessError } from '@ohos/base';\nimport { Log } from '../utils/utils';\nimport commonEventManager from '@ohos.commonEventManager';\n\nexport class EventObserver {\n  private events: string[];\n  private subscriber: commonEventManager.CommonEventSubscriber | undefined = undefined;\n  private subscribeInfo: commonEventManager.CommonEventSubscribeInfo = {\n    events: []\n  };\n\n  constructor(events: string[]) {\n    this.events = events;\n  }\n\n  /**\n   * 注册监听资源变化事件\n   * @param callback\n   */\n  public register(callback: AsyncCallback<commonEventManager.CommonEventData>): void {\n    if (callback === undefined || callback === null) {\n      Log.error(`callback is undefined.`);\n      return;\n    }\n    try {\n      if (this.events === undefined || !this.events.length) {\n        Log.error(`event is undefined.`);\n        return;\n      }\n      this.subscribeInfo.events = this.events;\n      commonEventManager.createSubscriber(this.subscribeInfo).then(subscriber => {\n        if (subscriber === undefined) {\n          Log.error(`subscriber is undefined.`);\n          return;\n        }\n        this.subscriber = subscriber;\n        try {\n          commonEventManager.subscribe(this.subscriber, callback);\n          Log.info(`subscribe success.`);\n        } catch (err) {\n          Log.error(`subscribe faild, code: ${err.code}, message: ${err.message}.`);\n        }\n      }).catch((err: BusinessError) => {\n        Log.error(`createSubscriber faild, code: ${err.code}, message: ${err.message}.`);\n      })\n    } catch (error) {\n      Log.error(`create subscriber faild, code: ${error.code}, message: ${error.message}.`);\n    }\n  }\n\n  /**\n   * 注销监听\n   */\n  public unregister(): void {\n    if (this.subscriber === undefined) {\n      Log.error(`subscriber is undefined.`);\n      return;\n    }\n    try {\n      commonEventManager.unsubscribe(this.subscriber, err => {\n        if (err) {\n          Log.error(`unsubscriber faild, code: ${err.code}, message: ${err.message}.`);\n        } else {\n          Log.info(`unsubscriber success.`);\n        }\n      })\n    } catch (error) {\n      Log.error(`unsubscriber faild, code: ${error.code}, message: ${error.message}.`);\n    }\n  }\n}", "leaked": true, "text_tokens": 487, "split": "valid"}
{"path": "multi-nav-bar~harmonyos_samples~278/entry/src/main/ets/pages/Index.ets", "project_name": "multi-nav-bar~harmonyos_samples~278", "text": "import { Home } from '../view/Home';\n\n@Entry\n@Component\nstruct Index {\n  build() {\n    Column() {\n      Home()\n    }\n    .width('100%')\n    .height('100%')\n  }\n}", "id": "a42eea502ab32035fa99fd43ab1c2287f874110a2e3bedf9620a74391941246f", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 3.0, "confidence": 0.95, "rationale": "符合ArkTS生态，结构清晰，具备组件化与布局能力，具有学习价值。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 1920, "completion_tokens": 68, "total_tokens": 1988, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 3,\n  \"confidence\": 0.95,\n  \"rationale\": \"符合ArkTS生态，结构清晰，具备组件化与布局能力，具有学习价值。\"\n}", "llm_formatted": "import { Home } from '../view/Home';\n\n@Entry\n@Component\nstruct Index {\n  build() {\n    Column() {\n      Home()\n    }\n    .width('100%')\n    .height('100%')\n  }\n}", "leaked": true, "text_tokens": 51, "split": "valid"}
{"path": "component_collection_master~张兴华~1071/entry/src/main/ets/pages/globalMethods/dialogs/actionSheetDialogSample/ActionSheetDialogSample.ets", "project_name": "component_collection_master~张兴华~1071", "text": "import { IntroductionTitle } from '../../../../common/IntroductionTitle';\nimport ShowToast from '../../../../util/ShowToast';\nimport { TitleBar } from '../../../../common/TitleBar';\n\n@Extend(Row)\nfunction rowStyle() {\n  .width('94%')\n  .borderRadius(24)\n  .margin({ top: 8, bottom: 8 })\n  .justifyContent(FlexAlign.SpaceBetween)\n}\n\n@Extend(Column)\nfunction columnStyle() {\n  .width('100%')\n  .borderRadius(24)\n  .margin({ top: 8, bottom: 8 })\n  .justifyContent(FlexAlign.SpaceBetween)\n  .backgroundColor(Color.White)\n  .padding(15)\n}\n\n@Extend(Button)\nfunction buttonStyle() {\n  .margin(8)\n  .fontSize(16)\n  .layoutWeight(1)\n  .padding({ left: 12, right: 12, top: 8, bottom: 8 })\n}\n\n@Entry\n@Component\nstruct ListDialogSample {\n  private mTextInputController: TextInputController = new TextInputController();\n\n  build() {\n    Column() {\n      TitleBar({ title: $r('app.string.action_sheet_dialog') })\n      Scroll() {\n        Column() {\n          IntroductionTitle({ introduction: $r('app.string.alert_dialog_location') })\n          Row() {\n            Button($r('app.string.alert_dialog_top'))\n              .buttonStyle(0)\n              .onClick(() => {\n                ActionSheet.show(\n                  {\n                    title: $r('app.string.alert_dialog_prompt'),\n                    message: $r('app.string.alert_dialog_top'),\n                    confirm: {\n                      value: $r('app.string.alert_dialog_confirm'),\n                      action: () => {\n                        ShowToast.shortToast($r('app.string.alert_dialog_top'))\n                      }\n                    },\n                    cancel: () => {\n                      ShowToast.shortToast($r('app.string.alert_dialog_cancel'))\n                    },\n                    sheets: [\n                      {\n                        title: $r('app.string.text_picker_text_apple'),\n                        action: () => {\n                          ShowToast.shortToast($r('app.string.text_picker_text_apple'))\n                        }\n                      },\n                      {\n                        title: $r('app.string.text_picker_text_banana'),\n                        action: () => {\n                          ShowToast.shortToast($r('app.string.text_picker_text_banana'))\n                        }\n                      },\n                      {\n                        title: $r('app.string.text_picker_text_peach'),\n                        action: () => {\n                          ShowToast.shortToast($r('app.string.text_picker_text_peach'))\n                        }\n                      }\n                    ],\n                    alignment: DialogAlignment.Top\n                  }\n                );\n              })\n              .id('sheet_topButton')\n            Button($r('app.string.alert_dialog_center'))\n              .buttonStyle(0)\n              .onClick(() => {\n                ActionSheet.show(\n                  {\n                    title: $r('app.string.alert_dialog_prompt'),\n                    message: $r('app.string.alert_dialog_center'),\n                    confirm: {\n                      value: $r('app.string.alert_dialog_confirm'),\n                      action: () => {\n                        ShowToast.shortToast($r('app.string.alert_dialog_center'));\n                      }\n                    },\n                    cancel: () => {\n                      ShowToast.shortToast($r('app.string.alert_dialog_cancel'));\n                    },\n                    sheets: [\n                      {\n                        title: $r('app.string.text_picker_text_apple'),\n                        action: () => {\n                          ShowToast.shortToast($r('app.string.text_picker_text_apple'));\n                        }\n                      },\n                      {\n                        title: $r('app.string.text_picker_text_banana'),\n                        action: () => {\n                          ShowToast.shortToast($r('app.string.text_picker_text_banana'));\n                        }\n                      },\n                      {\n                        title: $r('app.string.text_picker_text_peach'),\n                        action: () => {\n                          ShowToast.shortToast($r('app.string.text_picker_text_peach'));\n                        }\n                      }\n                    ],\n                    alignment: DialogAlignment.Center\n                  }\n                );\n              })\n              .id('sheet_centerButton')\n            Button($r('app.string.alert_dialog_bottom'))\n              .buttonStyle(0)\n              .onClick(() => {\n                ActionSheet.show(\n                  {\n                    title: $r('app.string.alert_dialog_prompt'),\n                    message: $r('app.string.alert_dialog_bottom'),\n                    confirm: {\n                      value: $r('app.string.alert_dialog_confirm'),\n                      action: () => {\n                        ShowToast.shortToast($r('app.string.alert_dialog_bottom'));\n                      }\n                    },\n                    sheets: [\n                      {\n                        title: $r('app.string.text_picker_text_apple'),\n                        action: () => {\n                          ShowToast.shortToast($r('app.string.text_picker_text_apple'));\n                        }\n                      },\n                      {\n                        title: $r('app.string.text_picker_text_banana'),\n                        action: () => {\n                          ShowToast.shortToast($r('app.string.text_picker_text_banana'));\n                        }\n                      },\n                      {\n                        title: $r('app.string.text_picker_text_peach'),\n                        action: () => {\n                          ShowToast.shortToast($r('app.string.text_picker_text_peach'));\n                        }\n                      }\n                    ],\n                    cancel: () => {\n                      ShowToast.shortToast($r('app.string.alert_dialog_cancel'));\n                    },\n                    alignment: DialogAlignment.Bottom\n                  }\n                );\n              })\n              .id('sheet_bottomButton')\n          }\n          .rowStyle()\n\n          IntroductionTitle({ introduction: $r('app.string.alert_dialog_auto_cancel') })\n          Row() {\n            Button($r('app.string.alert_dialog_true'))\n              .buttonStyle(0)\n              .onClick(() => {\n                ActionSheet.show(\n                  {\n                    title: $r('app.string.alert_dialog_prompt'),\n                    message: $r('app.string.alert_dialog_true'),\n                    autoCancel: true,\n                    confirm: {\n                      value: $r('app.string.alert_dialog_confirm'),\n                      action: () => {\n                        ShowToast.shortToast($r('app.string.alert_dialog_true'));\n                      }\n                    },\n                    sheets: [\n                      {\n                        title: $r('app.string.text_picker_text_apple'),\n                        action: () => {\n                          ShowToast.shortToast($r('app.string.text_picker_text_apple'));\n                        }\n                      },\n                      {\n                        title: $r('app.string.text_picker_text_banana'),\n                        action: () => {\n                          ShowToast.shortToast($r('app.string.text_picker_text_banana'));\n                        }\n                      },\n                      {\n                        title: $r('app.string.text_picker_text_peach'),\n                        action: () => {\n                          ShowToast.shortToast($r('app.string.text_picker_text_peach'));\n                        }\n                      }\n                    ],\n                    cancel: () => {\n                      ShowToast.shortToast($r('app.string.alert_dialog_cancel'));\n                    }\n                  }\n                );\n              })\n              .id('sheet_closeableButton')\n            Button($r('app.string.alert_dialog_false'))\n              .buttonStyle(0)\n              .onClick(() => {\n                ActionSheet.show(\n                  {\n                    title: $r('app.string.alert_dialog_prompt'),\n                    message: $r('app.string.alert_dialog_false'),\n                    autoCancel: false,\n                    confirm: {\n                      value: $r('app.string.alert_dialog_confirm'),\n                      action: () => {\n                        ShowToast.shortToast($r('app.string.alert_dialog_false'));\n                      }\n                    },\n                    sheets: [\n                      {\n                        title: $r('app.string.text_picker_text_apple'),\n                        action: () => {\n                          ShowToast.shortToast($r('app.string.text_picker_text_apple'));\n                        }\n                      },\n                      {\n                        title: $r('app.string.text_picker_text_banana'),\n                        action: () => {\n                          ShowToast.shortToast($r('app.string.text_picker_text_banana'));\n                        }\n                      },\n                      {\n                        title: $r('app.string.text_picker_text_peach'),\n                        action: () => {\n                          ShowToast.shortToast($r('app.string.text_picker_text_peach'));\n                        }\n                      }\n                    ],\n                    cancel: () => {\n                      ShowToast.shortToast($r('app.string.alert_dialog_cancel'));\n                    }\n                  }\n                );\n              })\n              .id('sheet_noCloseButton')\n          }\n          .rowStyle()\n\n          IntroductionTitle({ introduction: $r('app.string.alert_dialog_offset') })\n          Row() {\n            Button($r('app.string.alert_dialog_left'))\n              .buttonStyle(0)\n              .onClick(() => {\n                ActionSheet.show(\n                  {\n                    title: $r('app.string.alert_dialog_prompt'),\n                    message: $r('app.string.alert_dialog_left'),\n                    confirm: {\n                      value: $r('app.string.alert_dialog_confirm'),\n                      action: () => {\n                        ShowToast.shortToast($r('app.string.alert_dialog_left'));\n                      }\n                    },\n                    cancel: () => {\n                      ShowToast.shortToast($r('app.string.alert_dialog_cancel'));\n                    },\n                    alignment: DialogAlignment.Center,\n                    sheets: [\n                      {\n                        title: $r('app.string.text_picker_text_apple'),\n                        action: () => {\n                          ShowToast.shortToast($r('app.string.text_picker_text_apple'));\n                        }\n                      },\n                      {\n                        title: $r('app.string.text_picker_text_banana'),\n                        action: () => {\n                          ShowToast.shortToast($r('app.string.text_picker_text_banana'));\n                        }\n                      },\n                      {\n                        title: $r('app.string.text_picker_text_peach'),\n                        action: () => {\n                          ShowToast.shortToast($r('app.string.text_picker_text_peach'));\n                        }\n                      }\n                    ],\n                    offset: { dx: -20, dy: -150 }\n                  }\n                );\n              })\n              .id('sheet_upperLeftButton')\n            Button($r('app.string.alert_dialog_right'))\n              .buttonStyle(0)\n              .onClick(() => {\n                ActionSheet.show(\n                  {\n                    title: $r('app.string.alert_dialog_prompt'),\n                    message: $r('app.string.alert_dialog_right'),\n                    confirm: {\n                      value: $r('app.string.alert_dialog_confirm'),\n                      action: () => {\n                        ShowToast.shortToast($r('app.string.alert_dialog_right'));\n                      }\n                    },\n                    cancel: () => {\n                      ShowToast.shortToast($r('app.string.alert_dialog_cancel'));\n                    },\n                    sheets: [\n                      {\n                        title: $r('app.string.text_picker_text_apple'),\n                        action: () => {\n                          ShowToast.shortToast($r('app.string.text_picker_text_apple'));\n                        }\n                      },\n                      {\n                        title: $r('app.string.text_picker_text_banana'),\n                        action: () => {\n                          ShowToast.shortToast($r('app.string.text_picker_text_banana'));\n                        }\n                      },\n                      {\n                        title: $r('app.string.text_picker_text_peach'),\n                        action: () => {\n                          ShowToast.shortToast($r('app.string.text_picker_text_peach'));\n                        }\n                      }\n                    ],\n                    offset: { dx: 20, dy: -35 }\n                  }\n                );\n              })\n              .id('sheet_lowRightButton')\n          }\n          .rowStyle()\n\n          IntroductionTitle({ introduction: $r('app.string.action_sheet_click_sheets') })\n          Row() {\n            Button($r('app.string.action_sheet_dialog_click_content'))\n              .buttonStyle(0)\n              .onClick(() => {\n                ActionSheet.show(\n                  {\n                    title: $r('app.string.alert_dialog_prompt'),\n                    message: $r('app.string.action_sheet_dialog_click_content'),\n                    confirm: {\n                      value: $r('app.string.alert_dialog_confirm'),\n                      action: () => {\n                        ShowToast.shortToast($r('app.string.action_sheet_dialog_click_content'));\n                      }\n                    },\n                    alignment: DialogAlignment.Center,\n                    sheets: [\n                      {\n                        title: $r('app.string.text_picker_text_apple'),\n                        action: () => {\n                          ShowToast.shortToast($r('app.string.text_picker_text_apple'));\n                        }\n                      },\n                      {\n                        title: $r('app.string.text_picker_text_banana'),\n                        action: () => {\n                          ShowToast.shortToast($r('app.string.text_picker_text_banana'));\n                        }\n                      },\n                      {\n                        title: $r('app.string.text_picker_text_peach'),\n                        action: () => {\n                          ShowToast.shortToast($r('app.string.text_picker_text_peach'));\n                        }\n                      }\n                    ]\n                  }\n                );\n              })\n              .id('sheet_click_contentButton')\n          }\n          .rowStyle()\n\n          IntroductionTitle({ introduction: $r('app.string.avoiding_input_method_testing') })\n          Column() {\n            Row() {\n              TextInput({\n                controller: this.mTextInputController,\n                placeholder: $r('app.string.avoiding_input_method_testing')\n              })\n                .layoutWeight(1).height(50).id('test_input')\n            }.rowStyle()\n\n            Row() {\n              Button($r('app.string.alert_dialog_bottom'))\n                .id('btn_test_input')\n                .buttonStyle(0)\n                .onClick(() => {\n                  this.mTextInputController.setTextSelection(1, 2)\n                  ActionSheet.show(\n                    {\n                      title: $r('app.string.alert_dialog_prompt'),\n                      message: $r('app.string.alert_dialog_bottom'),\n                      confirm: {\n                        value: $r('app.string.alert_dialog_confirm'),\n                        action: () => {\n                          ShowToast.shortToast($r('app.string.alert_dialog_bottom'));\n                        }\n                      },\n                      sheets: [\n                        {\n                          title: $r('app.string.text_picker_text_apple'),\n                          action: () => {\n                            ShowToast.shortToast($r('app.string.text_picker_text_apple'));\n                          }\n                        },\n                        {\n                          title: $r('app.string.text_picker_text_banana'),\n                          action: () => {\n                            ShowToast.shortToast($r('app.string.text_picker_text_banana'));\n                          }\n                        },\n                        {\n                          title: $r('app.string.text_picker_text_peach'),\n                          action: () => {\n                            ShowToast.shortToast($r('app.string.text_picker_text_peach'));\n                          }\n                        }\n                      ],\n                      cancel: () => {\n                        ShowToast.shortToast($r('app.string.alert_dialog_cancel'));\n                      },\n                      alignment: DialogAlignment.Bottom\n                    }\n                  );\n                })\n                .id('sheet_bottomButton')\n            }.rowStyle()\n          }.columnStyle().margin({ bottom: 80 })\n        }\n        .padding(12)\n        .constraintSize({ minHeight: '100%' })\n      }\n    }\n    .width('100%')\n    .backgroundColor($r('app.color.background_shallow_grey'))\n  }\n}", "id": "75bc1effa6d71bf1d53e424453b753af261c33f8320be7a547715fc90a268d88", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "ArkTS生态代码，结构清晰，逻辑完整，具备良好的可学习性和迁移价值。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 4873, "completion_tokens": 68, "total_tokens": 4941, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"ArkTS生态代码，结构清晰，逻辑完整，具备良好的可学习性和迁移价值。\"\n}", "llm_formatted": "import { IntroductionTitle } from '../../../../common/IntroductionTitle';\nimport ShowToast from '../../../../util/ShowToast';\nimport { TitleBar } from '../../../../common/TitleBar';\n\n@Extend(Row)\nfunction rowStyle() {\n  .width('94%')\n  .borderRadius(24)\n  .margin({ top: 8, bottom: 8 })\n  .justifyContent(FlexAlign.SpaceBetween)\n}\n\n@Extend(Column)\nfunction columnStyle() {\n  .width('100%')\n  .borderRadius(24)\n  .margin({ top: 8, bottom: 8 })\n  .justifyContent(FlexAlign.SpaceBetween)\n  .backgroundColor(Color.White)\n  .padding(15)\n}\n\n@Extend(Button)\nfunction buttonStyle() {\n  .margin(8)\n  .fontSize(16)\n  .layoutWeight(1)\n  .padding({ left: 12, right: 12, top: 8, bottom: 8 })\n}\n\n@Entry\n@Component\nstruct ListDialogSample {\n  private mTextInputController: TextInputController = new TextInputController();\n\n  build() {\n    Column() {\n      TitleBar({ title: $r('app.string.action_sheet_dialog') })\n      Scroll() {\n        Column() {\n          IntroductionTitle({ introduction: $r('app.string.alert_dialog_location') })\n          Row() {\n            Button($r('app.string.alert_dialog_top'))\n              .buttonStyle(0)\n              .onClick(() => {\n                ActionSheet.show(\n                  {\n                    title: $r('app.string.alert_dialog_prompt'),\n                    message: $r('app.string.alert_dialog_top'),\n                    confirm: {\n                      value: $r('app.string.alert_dialog_confirm'),\n                      action: () => {\n                        ShowToast.shortToast($r('app.string.alert_dialog_top'))\n                      }\n                    },\n                    cancel: () => {\n                      ShowToast.shortToast($r('app.string.alert_dialog_cancel'))\n                    },\n                    sheets: [\n                      {\n                        title: $r('app.string.text_picker_text_apple'),\n                        action: () => {\n                          ShowToast.shortToast($r('app.string.text_picker_text_apple'))\n                        }\n                      },\n                      {\n                        title: $r('app.string.text_picker_text_banana'),\n                        action: () => {\n                          ShowToast.shortToast($r('app.string.text_picker_text_banana'))\n                        }\n                      },\n                      {\n                        title: $r('app.string.text_picker_text_peach'),\n                        action: () => {\n                          ShowToast.shortToast($r('app.string.text_picker_text_peach'))\n                        }\n                      }\n                    ],\n                    alignment: DialogAlignment.Top\n                  }\n                );\n              })\n              .id('sheet_topButton')\n            Button($r('app.string.alert_dialog_center'))\n              .buttonStyle(0)\n              .onClick(() => {\n                ActionSheet.show(\n                  {\n                    title: $r('app.string.alert_dialog_prompt'),\n                    message: $r('app.string.alert_dialog_center'),\n                    confirm: {\n                      value: $r('app.string.alert_dialog_confirm'),\n                      action: () => {\n                        ShowToast.shortToast($r('app.string.alert_dialog_center'));\n                      }\n                    },\n                    cancel: () => {\n                      ShowToast.shortToast($r('app.string.alert_dialog_cancel'));\n                    },\n                    sheets: [\n                      {\n                        title: $r('app.string.text_picker_text_apple'),\n                        action: () => {\n                          ShowToast.shortToast($r('app.string.text_picker_text_apple'));\n                        }\n                      },\n                      {\n                        title: $r('app.string.text_picker_text_banana'),\n                        action: () => {\n                          ShowToast.shortToast($r('app.string.text_picker_text_banana'));\n                        }\n                      },\n                      {\n                        title: $r('app.string.text_picker_text_peach'),\n                        action: () => {\n                          ShowToast.shortToast($r('app.string.text_picker_text_peach'));\n                        }\n                      }\n                    ],\n                    alignment: DialogAlignment.Center\n                  }\n                );\n              })\n              .id('sheet_centerButton')\n            Button($r('app.string.alert_dialog_bottom'))\n              .buttonStyle(0)\n              .onClick(() => {\n                ActionSheet.show(\n                  {\n                    title: $r('app.string.alert_dialog_prompt'),\n                    message: $r('app.string.alert_dialog_bottom'),\n                    confirm: {\n                      value: $r('app.string.alert_dialog_confirm'),\n                      action: () => {\n                        ShowToast.shortToast($r('app.string.alert_dialog_bottom'));\n                      }\n                    },\n                    sheets: [\n                      {\n                        title: $r('app.string.text_picker_text_apple'),\n                        action: () => {\n                          ShowToast.shortToast($r('app.string.text_picker_text_apple'));\n                        }\n                      },\n                      {\n                        title: $r('app.string.text_picker_text_banana'),\n                        action: () => {\n                          ShowToast.shortToast($r('app.string.text_picker_text_banana'));\n                        }\n                      },\n                      {\n                        title: $r('app.string.text_picker_text_peach'),\n                        action: () => {\n                          ShowToast.shortToast($r('app.string.text_picker_text_peach'));\n                        }\n                      }\n                    ],\n                    cancel: () => {\n                      ShowToast.shortToast($r('app.string.alert_dialog_cancel'));\n                    },\n                    alignment: DialogAlignment.Bottom\n                  }\n                );\n              })\n              .id('sheet_bottomButton')\n          }\n          .rowStyle()\n\n          IntroductionTitle({ introduction: $r('app.string.alert_dialog_auto_cancel') })\n          Row() {\n            Button($r('app.string.alert_dialog_true'))\n              .buttonStyle(0)\n              .onClick(() => {\n                ActionSheet.show(\n                  {\n                    title: $r('app.string.alert_dialog_prompt'),\n                    message: $r('app.string.alert_dialog_true'),\n                    autoCancel: true,\n                    confirm: {\n                      value: $r('app.string.alert_dialog_confirm'),\n                      action: () => {\n                        ShowToast.shortToast($r('app.string.alert_dialog_true'));\n                      }\n                    },\n                    sheets: [\n                      {\n                        title: $r('app.string.text_picker_text_apple'),\n                        action: () => {\n                          ShowToast.shortToast($r('app.string.text_picker_text_apple'));\n                        }\n                      },\n                      {\n                        title: $r('app.string.text_picker_text_banana'),\n                        action: () => {\n                          ShowToast.shortToast($r('app.string.text_picker_text_banana'));\n                        }\n                      },\n                      {\n                        title: $r('app.string.text_picker_text_peach'),\n                        action: () => {\n                          ShowToast.shortToast($r('app.string.text_picker_text_peach'));\n                        }\n                      }\n                    ],\n                    cancel: () => {\n                      ShowToast.shortToast($r('app.string.alert_dialog_cancel'));\n                    }\n                  }\n                );\n              })\n              .id('sheet_closeableButton')\n            Button($r('app.string.alert_dialog_false'))\n              .buttonStyle(0)\n              .onClick(() => {\n                ActionSheet.show(\n                  {\n                    title: $r('app.string.alert_dialog_prompt'),\n                    message: $r('app.string.alert_dialog_false'),\n                    autoCancel: false,\n                    confirm: {\n                      value: $r('app.string.alert_dialog_confirm'),\n                      action: () => {\n                        ShowToast.shortToast($r('app.string.alert_dialog_false'));\n                      }\n                    },\n                    sheets: [\n                      {\n                        title: $r('app.string.text_picker_text_apple'),\n                        action: () => {\n                          ShowToast.shortToast($r('app.string.text_picker_text_apple'));\n                        }\n                      },\n                      {\n                        title: $r('app.string.text_picker_text_banana'),\n                        action: () => {\n                          ShowToast.shortToast($r('app.string.text_picker_text_banana'));\n                        }\n                      },\n                      {\n                        title: $r('app.string.text_picker_text_peach'),\n                        action: () => {\n                          ShowToast.shortToast($r('app.string.text_picker_text_peach'));\n                        }\n                      }\n                    ],\n                    cancel: () => {\n                      ShowToast.shortToast($r('app.string.alert_dialog_cancel'));\n                    }\n                  }\n                );\n              })\n              .id('sheet_noCloseButton')\n          }\n          .rowStyle()\n\n          IntroductionTitle({ introduction: $r('app.string.alert_dialog_offset') })\n          Row() {\n            Button($r('app.string.alert_dialog_left'))\n              .buttonStyle(0)\n              .onClick(() => {\n                ActionSheet.show(\n                  {\n                    title: $r('app.string.alert_dialog_prompt'),\n                    message: $r('app.string.alert_dialog_left'),\n                    confirm: {\n                      value: $r('app.string.alert_dialog_confirm'),\n                      action: () => {\n                        ShowToast.shortToast($r('app.string.alert_dialog_left'));\n                      }\n                    },\n                    cancel: () => {\n                      ShowToast.shortToast($r('app.string.alert_dialog_cancel'));\n                    },\n                    alignment: DialogAlignment.Center,\n                    sheets: [\n                      {\n                        title: $r('app.string.text_picker_text_apple'),\n                        action: () => {\n                          ShowToast.shortToast($r('app.string.text_picker_text_apple'));\n                        }\n                      },\n                      {\n                        title: $r('app.string.text_picker_text_banana'),\n                        action: () => {\n                          ShowToast.shortToast($r('app.string.text_picker_text_banana'));\n                        }\n                      },\n                      {\n                        title: $r('app.string.text_picker_text_peach'),\n                        action: () => {\n                          ShowToast.shortToast($r('app.string.text_picker_text_peach'));\n                        }\n                      }\n                    ],\n                    offset: { dx: -20, dy: -150 }\n                  }\n                );\n              })\n              .id('sheet_upperLeftButton')\n            Button($r('app.string.alert_dialog_right'))\n              .buttonStyle(0)\n              .onClick(() => {\n                ActionSheet.show(\n                  {\n                    title: $r('app.string.alert_dialog_prompt'),\n                    message: $r('app.string.alert_dialog_right'),\n                    confirm: {\n                      value: $r('app.string.alert_dialog_confirm'),\n                      action: () => {\n                        ShowToast.shortToast($r('app.string.alert_dialog_right'));\n                      }\n                    },\n                    cancel: () => {\n                      ShowToast.shortToast($r('app.string.alert_dialog_cancel'));\n                    },\n                    sheets: [\n                      {\n                        title: $r('app.string.text_picker_text_apple'),\n                        action: () => {\n                          ShowToast.shortToast($r('app.string.text_picker_text_apple'));\n                        }\n                      },\n                      {\n                        title: $r('app.string.text_picker_text_banana'),\n                        action: () => {\n                          ShowToast.shortToast($r('app.string.text_picker_text_banana'));\n                        }\n                      },\n                      {\n                        title: $r('app.string.text_picker_text_peach'),\n                        action: () => {\n                          ShowToast.shortToast($r('app.string.text_picker_text_peach'));\n                        }\n                      }\n                    ],\n                    offset: { dx: 20, dy: -35 }\n                  }\n                );\n              })\n              .id('sheet_lowRightButton')\n          }\n          .rowStyle()\n\n          IntroductionTitle({ introduction: $r('app.string.action_sheet_click_sheets') })\n          Row() {\n            Button($r('app.string.action_sheet_dialog_click_content'))\n              .buttonStyle(0)\n              .onClick(() => {\n                ActionSheet.show(\n                  {\n                    title: $r('app.string.alert_dialog_prompt'),\n                    message: $r('app.string.action_sheet_dialog_click_content'),\n                    confirm: {\n                      value: $r('app.string.alert_dialog_confirm'),\n                      action: () => {\n                        ShowToast.shortToast($r('app.string.action_sheet_dialog_click_content'));\n                      }\n                    },\n                    alignment: DialogAlignment.Center,\n                    sheets: [\n                      {\n                        title: $r('app.string.text_picker_text_apple'),\n                        action: () => {\n                          ShowToast.shortToast($r('app.string.text_picker_text_apple'));\n                        }\n                      },\n                      {\n                        title: $r('app.string.text_picker_text_banana'),\n                        action: () => {\n                          ShowToast.shortToast($r('app.string.text_picker_text_banana'));\n                        }\n                      },\n                      {\n                        title: $r('app.string.text_picker_text_peach'),\n                        action: () => {\n                          ShowToast.shortToast($r('app.string.text_picker_text_peach'));\n                        }\n                      }\n                    ]\n                  }\n                );\n              })\n              .id('sheet_click_contentButton')\n          }\n          .rowStyle()\n\n          IntroductionTitle({ introduction: $r('app.string.avoiding_input_method_testing') })\n          Column() {\n            Row() {\n              TextInput({\n                controller: this.mTextInputController,\n                placeholder: $r('app.string.avoiding_input_method_testing')\n              })\n                .layoutWeight(1).height(50).id('test_input')\n            }.rowStyle()\n\n            Row() {\n              Button($r('app.string.alert_dialog_bottom'))\n                .id('btn_test_input')\n                .buttonStyle(0)\n                .onClick(() => {\n                  this.mTextInputController.setTextSelection(1, 2)\n                  ActionSheet.show(\n                    {\n                      title: $r('app.string.alert_dialog_prompt'),\n                      message: $r('app.string.alert_dialog_bottom'),\n                      confirm: {\n                        value: $r('app.string.alert_dialog_confirm'),\n                        action: () => {\n                          ShowToast.shortToast($r('app.string.alert_dialog_bottom'));\n                        }\n                      },\n                      sheets: [\n                        {\n                          title: $r('app.string.text_picker_text_apple'),\n                          action: () => {\n                            ShowToast.shortToast($r('app.string.text_picker_text_apple'));\n                          }\n                        },\n                        {\n                          title: $r('app.string.text_picker_text_banana'),\n                          action: () => {\n                            ShowToast.shortToast($r('app.string.text_picker_text_banana'));\n                          }\n                        },\n                        {\n                          title: $r('app.string.text_picker_text_peach'),\n                          action: () => {\n                            ShowToast.shortToast($r('app.string.text_picker_text_peach'));\n                          }\n                        }\n                      ],\n                      cancel: () => {\n                        ShowToast.shortToast($r('app.string.alert_dialog_cancel'));\n                      },\n                      alignment: DialogAlignment.Bottom\n                    }\n                  );\n                })\n                .id('sheet_bottomButton')\n            }.rowStyle()\n          }.columnStyle().margin({ bottom: 80 })\n        }\n        .padding(12)\n        .constraintSize({ minHeight: '100%' })\n      }\n    }\n    .width('100%')\n    .backgroundColor($r('app.color.background_shallow_grey'))\n  }\n}", "leaked": true, "text_tokens": 3004, "split": "valid"}
{"path": "AboutPreferences~肖~4249/WeChat/src/main/ets/pages/Index.ets", "project_name": "AboutPreferences~肖~4249", "text": "import preferences from '@ohos.data.preferences'\nimport { util } from '@kit.ArkTS'\nimport { http } from '@kit.NetworkKit'\nimport { promptAction } from '@kit.ArkUI'\nimport { notificationManager } from '@kit.NotificationKit'\nimport { BusinessError } from '@kit.BasicServicesKit'\nimport { wantAgent } from '@kit.AbilityKit'\n\ninterface IMsgItem {\n  content: string\n  avatar1: Resource\n  username: string\n  id: string\n  timeStamp: number\n  self: boolean\n}\n\ninterface IAiMsgContent {\n  result: number\n  content: string\n}\n\ninterface delItem {\n  icon: Resource\n  title: string\n}\n\n// 读取或设置首选项的消息类\nclass MsgStore {\n  // 获取首选项仓库\n  async getStore() {\n    return await preferences.getPreferences(getContext(this), 'MsgStore')\n  }\n\n  //     读取消息列表\n  async getMsgList() {\n    const store = await this.getStore()\n    const msgs = await store.get('MsgList', '[]') as string\n    return JSON.parse(msgs) as IMsgItem[]\n  }\n\n  //   设置消息列表\n  async setMsgList(json: string) {\n    const store = await this.getStore()\n    await store.put('MsgList', json)\n    await store.flush()\n\n  }\n}\n\n@Entry\n@Component\nstruct Index {\n  myHttp: http.HttpRequest = http.createHttp()\n  store: MsgStore = new MsgStore()\n  @State\n  @Watch(\"updateMsgList\")\n  msgList: IMsgItem[] = []\n  // 当弹出输入框时，会把整个stack顶出一部份 所以用这个值来记录被顶出去的数量\n  @State topY: number = 0\n\n  aboutToAppear(): void {\n    this.getList()\n  }\n\n  getList = async () => {\n    this.msgList = await this.store.getMsgList()\n  }\n\n  updateMsgList() {\n    this.store.setMsgList(JSON.stringify(this.msgList))\n  }\n\n  @State contentStr: string = ''\n  SendMsg = async () => {\n    const msg: IMsgItem = {\n      content: this.contentStr,\n      avatar1: $r('app.media.head_xtb'),\n      id: util.generateRandomUUID(),\n      timeStamp: Date.now(),\n      self: true,\n      username: 'benshaw'\n    }\n    //   把发送的消息添加到消息列表中\n    // this.store.setMsgList(JSON.stringify(msg))\n    this.msgList.push(msg)\n    console.log('我的消息:', this.contentStr)\n    //   发送请求 模拟AI对话\n    const res =\n      await this.myHttp.request(`http://api.qingyunke.com/api.php?key=free&appid=0&msg=${encodeURI(this.contentStr)}`)\n    // this.contentStr = ''\n    const data = JSON.parse(res.result as string) as IAiMsgContent\n    console.log('AI的消息:', data.content)\n\n    if (!data.result) {\n      //     回复消息成功了 把消息添加到列表中\n      const msg: IMsgItem = {\n        content: data.content,\n        avatar1: $r('app.media.head_bili'),\n        id: util.generateRandomUUID(),\n        timeStamp: Date.now(),\n        self: false,\n        username: 'Ai机器人'\n      }\n      //   把发送的消息添加到消息列表中\n      // this.store.setMsgList(JSON.stringify(msg))\n      this.msgList.push(msg)\n      console.log('消息列表:', JSON.stringify(this.msgList))\n\n      // 为通知添加行为意图\n      const agentInfo = await wantAgent.getWantAgent({\n        wants: [\n          {\n            deviceId: '',\n            bundleName: 'com.xtbAIChat.myapplication',\n            moduleName: 'WeChat',\n            abilityName: 'EntryAbility',\n            parameters: {\n              info: Date.now()\n            }\n          }\n        ],\n        actionType: wantAgent.OperationType.START_ABILITY,\n        requestCode: 1\n      })\n      //   把收的消息 在用户通知服务中进行提醒\n      const request: notificationManager.NotificationRequest = {\n        id: Date.now(), //通知ID，默认为0\n        //通知内容\n        content: {\n          // 通知内容类型\n          notificationContentType: notificationManager.ContentType.NOTIFICATION_CONTENT_BASIC_TEXT,\n          // 基本类型通知内容\n          normal: {\n            title: `微信收到${msg.username}新的消息:`, //通知标题\n            text: data.content, //通知内容\n            additionalText: `消息来自:Ai机器人`//通知附加内容，是对通知内容的补充\n          }\n        },\n        wantAgent: agentInfo//为通知添加行为意图\n      }\n      notificationManager.publish(request).then(() => {\n        console.info(\"publish success\");\n      }).catch((err: BusinessError) => {\n        console.error(`publish fail: ${JSON.stringify(err)}`);\n      });\n\n\n    } else {\n      AlertDialog.show({\n        message: '机器人回复消息失败'\n      })\n    }\n\n  }\n  delFn = (id: string) => {\n    let index = this.msgList.findIndex(item => item.id === id)\n    this.msgList.splice(index, 1)\n\n  }\n\n  build() {\n    Stack({ alignContent: Alignment.Bottom }) {\n      // 上面的消息对话框\n      Column() {\n        Row() {\n          Image($r('app.media.fanhui'))\n            .fillColor('#1f1f1f')\n            .width(30)\n            .height(30)\n          Text('☹AI机器人☹')\n            .fontSize(30)\n            .textAlign(TextAlign.Center)\n            .fontWeight(500)\n          Image($r('app.media.gengduo'))\n            .fillColor('#1f1f1f')\n            .width(30)\n            .height(30)\n        }\n        .height(70)\n        .width('100%')\n        .padding(12)\n        .justifyContent(FlexAlign.SpaceBetween)\n        .border({\n          color: '#ffaea6a6',\n          width: {\n            bottom: 1\n          }\n        })\n\n        List({ space: 20 }) {\n          ForEach(this.msgList, (item: IMsgItem) => {\n            ListItem() {\n              // Text(item.content)\n              MsgItemComp({ item: item, handlerDel: this.delFn })\n            }\n\n          }, (item: IMsgItem) => item.id)\n\n        }\n        .width('100%')\n        .layoutWeight(1)\n        .padding({\n          bottom: 80,\n          left: 20,\n          right: 20\n        })\n      }\n      .position({ y: this.topY })\n      .height('100%')\n\n\n      //  下面的发送消息\n      Row({ space: 10 }) {\n        Image($r('app.media.yuyin'))\n          .width(30)\n          .height(30)\n        TextInput({ text: this.contentStr })\n          .backgroundColor(Color.White)\n          .layoutWeight(1)\n          .height(40)\n          .borderRadius(4)\n          .onChange((v) => {\n            this.contentStr = v\n\n          })\n        Image($r('app.media.daxiao'))\n          .width(30)\n          .height(30)\n        Button('发送')\n          .height(30)\n          .borderRadius(4)\n          .backgroundColor('#138e11')\n          .enabled(!!this.contentStr)\n          .onClick(() => {\n            // promptAction.showToast({\n            //   message: this.contentStr\n            // })\n            //   实现发送消息的功能\n            this.SendMsg()\n            this.contentStr = ''\n            promptAction.showToast({\n              message: JSON.stringify(this.msgList)\n            })\n\n          })\n      }\n      .width('100%')\n      .backgroundColor('#f5f8f7')\n      .height(70)\n      .padding(20)\n      .border({\n        color: '#eeeeee',\n        width: {\n          top: 0.5\n        }\n      })\n    }\n    .height('100%')\n    .width('100%')\n    .backgroundColor('#ececec')\n    .onAreaChange((oldA: Area, newA: Area) => {\n      // this.topY = newA.globalPosition.y?.toString() //Math.abs(parseFloat(newA.globalPosition?.y.toString()))\n      console.log('当弹出输入框时，整体个stack在y上的变化:', newA.globalPosition.y?.toString())\n      if (newA.globalPosition.y) {\n        this.topY = Math.abs(parseFloat(newA.globalPosition.y?.toString()))\n        console.log('当弹出输入框时，topY:', this.topY)\n      }\n\n    })\n  }\n}\n\n\n@Component\nstruct MsgItemComp {\n  item: Partial<IMsgItem> = {}\n  formatData = (ts: number) => {\n    let d = new Date()\n    d.setTime(ts)\n    return d.toLocaleDateString() + \" \" + d.toLocaleTimeString()\n  }\n  @State showDel: boolean = false\n  iconList: delItem[] = [\n    {\n      icon: $r('app.media.fuzhi'),\n      title: '复制'\n    }, {\n    icon: $r('app.media.zhuanfa'),\n    title: '转发'\n  }, {\n    icon: $r('app.media.favorite'),\n    title: '收藏'\n  }, {\n    icon: $r('app.media.shanchu'),\n    title: '删除'\n  }, {\n    icon: $r('app.media.duoxuan'),\n    title: '多选'\n  }, {\n    icon: $r(\"app.media.yinyong\"),\n    title: '引用'\n  }, {\n    icon: $r(\"app.media.tixing\"),\n    title: '提醒'\n  }, {\n    icon: $r('app.media.fanyi'),\n    title: '翻译'\n  }, {\n    icon: $r(\"app.media.souyisou\"),\n    title: '搜搜'\n  }]\n  handlerDel: (id: string) => void = () => {\n  }\n\n  @Builder\n  DelPanel() {\n    Grid() {\n      ForEach(this.iconList, (item: delItem) => {\n        GridItem() {\n          Column({ space: 4 }) {\n            Image(item.icon)\n              .width(25)\n              .fillColor(Color.White)\n            Text(item.title)\n              .fontSize(14)\n              .fontColor(Color.White)\n          }\n          .onClick(() => {\n            if (item.title === '删除') {\n              AlertDialog.show({\n                message: '准备删除一条数据',\n              },)\n              this.showDel = false\n              //   删除操作\n              this.handlerDel(this.item.id as string)\n            }\n          })\n        }\n      }, () => util.generateRandomUUID())\n    }\n    .width('80%')\n    .height(200)\n    .backgroundColor('#4c4c4c')\n    .columnsGap(20)\n    .rowsGap(20)\n    .padding(20)\n    .borderRadius(4)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      // Text('测试中...').fontSize(10)\n      Text(this.formatData(this.item.timeStamp as number))\n        .fontSize(10)\n        .fontColor('rgb(130, 130, 132)')\n      Row({ space: 20 }) {\n        Image(this.item.self ? $r('app.media.head_xtb') : $r('app.media.head_bili'))\n          .width(50)\n          .height(50)\n          .borderRadius(8)\n        Text(this.item.content)\n          .fontSize(14)\n          .fontColor('#181818')\n          .padding(8)\n          .borderRadius(4)\n          .backgroundColor(this.item.self ? '#9fdc59' : Color.White)\n          .layoutWeight(5)\n          .gesture(LongPressGesture().onAction(() => {\n            //   触发长按回调\n            this.showDel = true\n          }))\n          .bindPopup(this.showDel, { builder: this.DelPanel, placement: Placement.Top })\n        Text()\n          .layoutWeight(1)\n      }\n      .width('100%')\n      .direction(this.item.self ? Direction.Rtl : Direction.Ltr)\n      .justifyContent(this.item.self ? FlexAlign.End : FlexAlign.Start)\n      .padding({\n        left: 2,\n        right: 2\n      })\n    }\n    .width('100%')\n\n  }\n}", "id": "f96738250d6fdb06b340e46d04c77e1c07e6fdc0f081e8c42ffb7ff59c8ec990", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "ArkTS生态耦合良好，结构清晰，具备学习价值", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 3962, "completion_tokens": 66, "total_tokens": 4028, "raw_response": "```json\n{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"ArkTS生态耦合良好，结构清晰，具备学习价值\"\n}\n```", "llm_formatted": "import preferences from '@ohos.data.preferences'\nimport { util } from '@kit.ArkTS'\nimport { http } from '@kit.NetworkKit'\nimport { promptAction } from '@kit.ArkUI'\nimport { notificationManager } from '@kit.NotificationKit'\nimport { BusinessError } from '@kit.BasicServicesKit'\nimport { wantAgent } from '@kit.AbilityKit'\n\ninterface IMsgItem {\n  content: string\n  avatar1: Resource\n  username: string\n  id: string\n  timeStamp: number\n  self: boolean\n}\n\ninterface IAiMsgContent {\n  result: number\n  content: string\n}\n\ninterface delItem {\n  icon: Resource\n  title: string\n}\n\n// 读取或设置首选项的消息类\nclass MsgStore {\n  // 获取首选项仓库\n  async getStore() {\n    return await preferences.getPreferences(getContext(this), 'MsgStore')\n  }\n\n  //     读取消息列表\n  async getMsgList() {\n    const store = await this.getStore()\n    const msgs = await store.get('MsgList', '[]') as string\n    return JSON.parse(msgs) as IMsgItem[]\n  }\n\n  //   设置消息列表\n  async setMsgList(json: string) {\n    const store = await this.getStore()\n    await store.put('MsgList', json)\n    await store.flush()\n\n  }\n}\n\n@Entry\n@Component\nstruct Index {\n  myHttp: http.HttpRequest = http.createHttp()\n  store: MsgStore = new MsgStore()\n  @State\n  @Watch(\"updateMsgList\")\n  msgList: IMsgItem[] = []\n  // 当弹出输入框时，会把整个stack顶出一部份 所以用这个值来记录被顶出去的数量\n  @State topY: number = 0\n\n  aboutToAppear(): void {\n    this.getList()\n  }\n\n  getList = async () => {\n    this.msgList = await this.store.getMsgList()\n  }\n\n  updateMsgList() {\n    this.store.setMsgList(JSON.stringify(this.msgList))\n  }\n\n  @State contentStr: string = ''\n  SendMsg = async () => {\n    const msg: IMsgItem = {\n      content: this.contentStr,\n      avatar1: $r('app.media.head_xtb'),\n      id: util.generateRandomUUID(),\n      timeStamp: Date.now(),\n      self: true,\n      username: 'benshaw'\n    }\n    //   把发送的消息添加到消息列表中\n    // this.store.setMsgList(JSON.stringify(msg))\n    this.msgList.push(msg)\n    console.log('我的消息:', this.contentStr)\n    //   发送请求 模拟AI对话\n    const res =\n      await this.myHttp.request(`http://api.qingyunke.com/api.php?key=free&appid=0&msg=${encodeURI(this.contentStr)}`)\n    // this.contentStr = ''\n    const data = JSON.parse(res.result as string) as IAiMsgContent\n    console.log('AI的消息:', data.content)\n\n    if (!data.result) {\n      //     回复消息成功了 把消息添加到列表中\n      const msg: IMsgItem = {\n        content: data.content,\n        avatar1: $r('app.media.head_bili'),\n        id: util.generateRandomUUID(),\n        timeStamp: Date.now(),\n        self: false,\n        username: 'Ai机器人'\n      }\n      //   把发送的消息添加到消息列表中\n      // this.store.setMsgList(JSON.stringify(msg))\n      this.msgList.push(msg)\n      console.log('消息列表:', JSON.stringify(this.msgList))\n\n      // 为通知添加行为意图\n      const agentInfo = await wantAgent.getWantAgent({\n        wants: [\n          {\n            deviceId: '',\n            bundleName: 'com.xtbAIChat.myapplication',\n            moduleName: 'WeChat',\n            abilityName: 'EntryAbility',\n            parameters: {\n              info: Date.now()\n            }\n          }\n        ],\n        actionType: wantAgent.OperationType.START_ABILITY,\n        requestCode: 1\n      })\n      //   把收的消息 在用户通知服务中进行提醒\n      const request: notificationManager.NotificationRequest = {\n        id: Date.now(), //通知ID，默认为0\n        //通知内容\n        content: {\n          // 通知内容类型\n          notificationContentType: notificationManager.ContentType.NOTIFICATION_CONTENT_BASIC_TEXT,\n          // 基本类型通知内容\n          normal: {\n            title: `微信收到${msg.username}新的消息:`, //通知标题\n            text: data.content, //通知内容\n            additionalText: `消息来自:Ai机器人`//通知附加内容，是对通知内容的补充\n          }\n        },\n        wantAgent: agentInfo//为通知添加行为意图\n      }\n      notificationManager.publish(request).then(() => {\n        console.info(\"publish success\");\n      }).catch((err: BusinessError) => {\n        console.error(`publish fail: ${JSON.stringify(err)}`);\n      });\n\n\n    } else {\n      AlertDialog.show({\n        message: '机器人回复消息失败'\n      })\n    }\n\n  }\n  delFn = (id: string) => {\n    let index = this.msgList.findIndex(item => item.id === id)\n    this.msgList.splice(index, 1)\n\n  }\n\n  build() {\n    Stack({ alignContent: Alignment.Bottom }) {\n      // 上面的消息对话框\n      Column() {\n        Row() {\n          Image($r('app.media.fanhui'))\n            .fillColor('#1f1f1f')\n            .width(30)\n            .height(30)\n          Text('☹AI机器人☹')\n            .fontSize(30)\n            .textAlign(TextAlign.Center)\n            .fontWeight(500)\n          Image($r('app.media.gengduo'))\n            .fillColor('#1f1f1f')\n            .width(30)\n            .height(30)\n        }\n        .height(70)\n        .width('100%')\n        .padding(12)\n        .justifyContent(FlexAlign.SpaceBetween)\n        .border({\n          color: '#ffaea6a6',\n          width: {\n            bottom: 1\n          }\n        })\n\n        List({ space: 20 }) {\n          ForEach(this.msgList, (item: IMsgItem) => {\n            ListItem() {\n              // Text(item.content)\n              MsgItemComp({ item: item, handlerDel: this.delFn })\n            }\n\n          }, (item: IMsgItem) => item.id)\n\n        }\n        .width('100%')\n        .layoutWeight(1)\n        .padding({\n          bottom: 80,\n          left: 20,\n          right: 20\n        })\n      }\n      .position({ y: this.topY })\n      .height('100%')\n\n\n      //  下面的发送消息\n      Row({ space: 10 }) {\n        Image($r('app.media.yuyin'))\n          .width(30)\n          .height(30)\n        TextInput({ text: this.contentStr })\n          .backgroundColor(Color.White)\n          .layoutWeight(1)\n          .height(40)\n          .borderRadius(4)\n          .onChange((v) => {\n            this.contentStr = v\n\n          })\n        Image($r('app.media.daxiao'))\n          .width(30)\n          .height(30)\n        Button('发送')\n          .height(30)\n          .borderRadius(4)\n          .backgroundColor('#138e11')\n          .enabled(!!this.contentStr)\n          .onClick(() => {\n            // promptAction.showToast({\n            //   message: this.contentStr\n            // })\n            //   实现发送消息的功能\n            this.SendMsg()\n            this.contentStr = ''\n            promptAction.showToast({\n              message: JSON.stringify(this.msgList)\n            })\n\n          })\n      }\n      .width('100%')\n      .backgroundColor('#f5f8f7')\n      .height(70)\n      .padding(20)\n      .border({\n        color: '#eeeeee',\n        width: {\n          top: 0.5\n        }\n      })\n    }\n    .height('100%')\n    .width('100%')\n    .backgroundColor('#ececec')\n    .onAreaChange((oldA: Area, newA: Area) => {\n      // this.topY = newA.globalPosition.y?.toString() //Math.abs(parseFloat(newA.globalPosition?.y.toString()))\n      console.log('当弹出输入框时，整体个stack在y上的变化:', newA.globalPosition.y?.toString())\n      if (newA.globalPosition.y) {\n        this.topY = Math.abs(parseFloat(newA.globalPosition.y?.toString()))\n        console.log('当弹出输入框时，topY:', this.topY)\n      }\n\n    })\n  }\n}\n\n\n@Component\nstruct MsgItemComp {\n  item: Partial<IMsgItem> = {}\n  formatData = (ts: number) => {\n    let d = new Date()\n    d.setTime(ts)\n    return d.toLocaleDateString() + \" \" + d.toLocaleTimeString()\n  }\n  @State showDel: boolean = false\n  iconList: delItem[] = [\n    {\n      icon: $r('app.media.fuzhi'),\n      title: '复制'\n    }, {\n    icon: $r('app.media.zhuanfa'),\n    title: '转发'\n  }, {\n    icon: $r('app.media.favorite'),\n    title: '收藏'\n  }, {\n    icon: $r('app.media.shanchu'),\n    title: '删除'\n  }, {\n    icon: $r('app.media.duoxuan'),\n    title: '多选'\n  }, {\n    icon: $r(\"app.media.yinyong\"),\n    title: '引用'\n  }, {\n    icon: $r(\"app.media.tixing\"),\n    title: '提醒'\n  }, {\n    icon: $r('app.media.fanyi'),\n    title: '翻译'\n  }, {\n    icon: $r(\"app.media.souyisou\"),\n    title: '搜搜'\n  }]\n  handlerDel: (id: string) => void = () => {\n  }\n\n  @Builder\n  DelPanel() {\n    Grid() {\n      ForEach(this.iconList, (item: delItem) => {\n        GridItem() {\n          Column({ space: 4 }) {\n            Image(item.icon)\n              .width(25)\n              .fillColor(Color.White)\n            Text(item.title)\n              .fontSize(14)\n              .fontColor(Color.White)\n          }\n          .onClick(() => {\n            if (item.title === '删除') {\n              AlertDialog.show({\n                message: '准备删除一条数据',\n              },)\n              this.showDel = false\n              //   删除操作\n              this.handlerDel(this.item.id as string)\n            }\n          })\n        }\n      }, () => util.generateRandomUUID())\n    }\n    .width('80%')\n    .height(200)\n    .backgroundColor('#4c4c4c')\n    .columnsGap(20)\n    .rowsGap(20)\n    .padding(20)\n    .borderRadius(4)\n  }\n\n  build() {\n    Column({ space: 10 }) {\n      // Text('测试中...').fontSize(10)\n      Text(this.formatData(this.item.timeStamp as number))\n        .fontSize(10)\n        .fontColor('rgb(130, 130, 132)')\n      Row({ space: 20 }) {\n        Image(this.item.self ? $r('app.media.head_xtb') : $r('app.media.head_bili'))\n          .width(50)\n          .height(50)\n          .borderRadius(8)\n        Text(this.item.content)\n          .fontSize(14)\n          .fontColor('#181818')\n          .padding(8)\n          .borderRadius(4)\n          .backgroundColor(this.item.self ? '#9fdc59' : Color.White)\n          .layoutWeight(5)\n          .gesture(LongPressGesture().onAction(() => {\n            //   触发长按回调\n            this.showDel = true\n          }))\n          .bindPopup(this.showDel, { builder: this.DelPanel, placement: Placement.Top })\n        Text()\n          .layoutWeight(1)\n      }\n      .width('100%')\n      .direction(this.item.self ? Direction.Rtl : Direction.Ltr)\n      .justifyContent(this.item.self ? FlexAlign.End : FlexAlign.Start)\n      .padding({\n        left: 2,\n        right: 2\n      })\n    }\n    .width('100%')\n\n  }\n}", "leaked": true, "text_tokens": 2694, "split": "valid"}
{"path": "xts_acts~openharmony~1331/arkui/ace_c_arkui_test_api20/entry/src/ohosTest/ets/test/uiInput/UiInputErrorCodeTest.test.ets", "project_name": "xts_acts~openharmony~1331", "text": "import { beforeAll, describe, expect, it, Level, afterEach } from '@ohos/hypium';\nimport Utils from '../common/Utils';\nimport { Driver, ON } from '@ohos.UiTest';\n\nexport default function uiInputErrorCodeTest() {\n\n  describe('UiInputErrorCodeTest', () => {\n\n    let PAGE_TAG = 'UiInputErrorCodeTest';\n\n    beforeAll(async (done: Function) => {\n      await Utils.pushPage(`uiInput/${PAGE_TAG}`, done);\n    });\n\n    /*\n    * @tc.number     : errorCode_001\n    * @tc.name       : errorCode_001\n    * @tc.desc       : test OH_ArkUI_AddSupportedUIStates return 180006\n    * @tc.size       : MediumTest\n    * @tc.type       : Function\n    * @tc.level      : Level 1\n    */\n    it('errorCode_001', Level.LEVEL1, async (done: Function) => {\n      let driver = Driver.create();\n      let component = await driver.findComponent(ON.id('ErrorCodeButton'));\n      await Utils.sleep(2000);\n      await component.click();\n      await Utils.sleep(2000);\n      let strJson = getInspectorByKey('ErrorCodetextStates');\n      await Utils.sleep(1000);\n      let obj: ESObject = JSON.parse(strJson);\n      console.info(\"errorCode_001 content is: \" + JSON.stringify(obj.$attrs.content));\n      expect(obj.$attrs.content).assertEqual('180006');\n      done();\n    })\n\n    /*\n    * @tc.number     : errorCode_002\n    * @tc.name       : errorCode_002\n    * @tc.desc       : test OH_ArkUI_AddSupportedUIStates return 0\n    * @tc.size       : MediumTest\n    * @tc.type       : Function\n    * @tc.level      : Level 1\n    */\n    it('errorCode_002', Level.LEVEL1, async (done: Function) => {\n      let driver = Driver.create();\n      let component = await driver.findComponent(ON.id('ErrorCodeButton'));\n      await Utils.sleep(2000);\n      await component.click();\n      await Utils.sleep(2000);\n      let strJson = getInspectorByKey('ErrorCodetextStates1');\n      await Utils.sleep(1000);\n      let obj: ESObject = JSON.parse(strJson);\n      console.info(\"errorCode_002 content is: \" + JSON.stringify(obj.$attrs.content));\n      expect(obj.$attrs.content).assertEqual('0');\n      done();\n    })\n\n    /*\n    * @tc.number     : errorCode_003\n    * @tc.name       : errorCode_003\n    * @tc.desc       : test OH_ArkUI_AddSupportedUIStates return 401\n    * @tc.size       : MediumTest\n    * @tc.type       : Function\n    * @tc.level      : Level 1\n    */\n    it('errorCode_003', Level.LEVEL1, async (done: Function) => {\n      let driver = Driver.create();\n      let component = await driver.findComponent(ON.id('ErrorCodeButton'));\n      await Utils.sleep(2000);\n      await component.click();\n      await Utils.sleep(2000);\n      let strJson = getInspectorByKey('ErrorCodetextStates2');\n      await Utils.sleep(1000);\n      let obj: ESObject = JSON.parse(strJson);\n      console.info(\"errorCode_003 content is: \" + JSON.stringify(obj.$attrs.content));\n      expect(obj.$attrs.content).assertEqual('401');\n      done();\n    })\n\n    /*\n    * @tc.number     : errorCode_004\n    * @tc.name       : errorCode_004\n    * @tc.desc       : test OH_ArkUI_AddSupportedUIStates return 180006\n    * @tc.size       : MediumTest\n    * @tc.type       : Function\n    * @tc.level      : Level 1\n    */\n    it('errorCode_004', Level.LEVEL1, async (done: Function) => {\n      let driver = Driver.create();\n      let component = await driver.findComponent(ON.id('ErrorCodeButton'));\n      await Utils.sleep(2000);\n      await component.click();\n      await Utils.sleep(2000);\n      let strJson3 = getInspectorByKey('ErrorCodetextStates3');\n      await Utils.sleep(1000);\n      let obj3: ESObject = JSON.parse(strJson3);\n      console.info(\"errorCode_004 content is: \" + JSON.stringify(obj3.$attrs.content));\n      expect(obj3.$attrs.content).assertEqual('0');\n      let strJson4 = getInspectorByKey('ErrorCodetextStates4');\n      await Utils.sleep(1000);\n      let obj4: ESObject = JSON.parse(strJson4);\n      console.info(\"errorCode_004 content is: \" + JSON.stringify(obj4.$attrs.content));\n      expect(obj4.$attrs.content).assertEqual('0');\n      let strJson5 = getInspectorByKey('ErrorCodetextStates5');\n      await Utils.sleep(1000);\n      let obj5: ESObject = JSON.parse(strJson5);\n      console.info(\"errorCode_004 content is: \" + JSON.stringify(obj5.$attrs.content));\n      expect(obj5.$attrs.content).assertEqual('180006');\n      let strJson6 = getInspectorByKey('ErrorCodetextStates6');\n      await Utils.sleep(1000);\n      let obj6: ESObject = JSON.parse(strJson6);\n      console.info(\"errorCode_004 content is: \" + JSON.stringify(obj6.$attrs.content));\n      expect(obj6.$attrs.content).assertEqual('180006');\n      let strJson7 = getInspectorByKey('ErrorCodetextStates7');\n      await Utils.sleep(1000);\n      let obj7: ESObject = JSON.parse(strJson7);\n      console.info(\"errorCode_004 content is: \" + JSON.stringify(obj7.$attrs.content));\n      expect(obj7.$attrs.content).assertEqual('180006');\n      let strJson8 = getInspectorByKey('ErrorCodetextStates8');\n      await Utils.sleep(1000);\n      let obj8: ESObject = JSON.parse(strJson8);\n      console.info(\"errorCode_004 content is: \" + JSON.stringify(obj8.$attrs.content));\n      expect(obj8.$attrs.content).assertEqual('180006');\n      done();\n    })\n  })\n}", "id": "58945d4e92b2638b42d39a00daa77d22bc58c5f85b6f44019e62f8835d11c893", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "ArkTS语法规范，生态耦合自然，具有测试用例学习价值", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2696, "completion_tokens": 69, "total_tokens": 2765, "raw_response": "```json\n{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"ArkTS语法规范，生态耦合自然，具有测试用例学习价值\"\n}\n```", "llm_formatted": "typescript\nimport { beforeAll, describe, expect, it, Level, afterEach } from '@ohos/hypium';\nimport Utils from '../common/Utils';\nimport { Driver, ON } from '@ohos.UiTest';\n\nexport default function uiInputErrorCodeTest() {\n  describe('UiInputErrorCodeTest', () => {\n    let PAGE_TAG = 'UiInputErrorCodeTest';\n\n    beforeAll(async (done: Function) => {\n      await Utils.pushPage(`uiInput/${PAGE_TAG}`, done);\n    });\n\n    it('errorCode_001', Level.LEVEL1, async (done: Function) => {\n      let driver = Driver.create();\n      let component = await driver.findComponent(ON.id('ErrorCodeButton'));\n      await Utils.sleep(2000);\n      await component.click();\n      await Utils.sleep(2000);\n      let strJson = getInspectorByKey('ErrorCodetextStates');\n      await Utils.sleep(1000);\n      let obj: ESObject = JSON.parse(strJson);\n      console.info(\"errorCode_001 content is: \" + JSON.stringify(obj.$attrs.content));\n      expect(obj.$attrs.content).assertEqual('180006');\n      done();\n    });\n\n    it('errorCode_002', Level.LEVEL1, async (done: Function) => {\n      let driver = Driver.create();\n      let component = await driver.findComponent(ON.id('ErrorCodeButton'));\n      await Utils.sleep(2000);\n      await component.click();\n      await Utils.sleep(2000);\n      let strJson = getInspectorByKey('ErrorCodetextStates1');\n      await Utils.sleep(1000);\n      let obj: ESObject = JSON.parse(strJson);\n      console.info(\"errorCode_002 content is: \" + JSON.stringify(obj.$attrs.content));\n      expect(obj.$attrs.content).assertEqual('0');\n      done();\n    });\n\n    it('errorCode_003', Level.LEVEL1, async (done: Function) => {\n      let driver = Driver.create();\n      let component = await driver.findComponent(ON.id('ErrorCodeButton'));\n      await Utils.sleep(2000);\n      await component.click();\n      await Utils.sleep(2000);\n      let strJson = getInspectorByKey('ErrorCodetextStates2');\n      await Utils.sleep(1000);\n      let obj: ESObject = JSON.parse(strJson);\n      console.info(\"errorCode_003 content is: \" + JSON.stringify(obj.$attrs.content));\n      expect(obj.$attrs.content).assertEqual('401');\n      done();\n    });\n\n    it('errorCode_004', Level.LEVEL1, async (done: Function) => {\n      let driver = Driver.create();\n      let component = await driver.findComponent(ON.id('ErrorCodeButton'));\n      await Utils.sleep(2000);\n      await component.click();\n      await Utils.sleep(2000);\n      let strJson3 = getInspectorByKey('ErrorCodetextStates3');\n      await Utils.sleep(1000);\n      let obj3: ESObject = JSON.parse(strJson3);\n      console.info(\"errorCode_004 content is: \" + JSON.stringify(obj3.$attrs.content));\n      expect(obj3.$attrs.content).assertEqual('0');\n      let strJson4 = getInspectorByKey('ErrorCodetextStates4');\n      await Utils.sleep(1000);\n      let obj4: ESObject = JSON.parse(strJson4);\n      console.info(\"errorCode_004 content is: \" + JSON.stringify(obj4.$attrs.content));\n      expect(obj4.$attrs.content).assertEqual('0');\n      let strJson5 = getInspectorByKey('ErrorCodetextStates5');\n      await Utils.sleep(1000);\n      let obj5: ESObject = JSON.parse(strJson5);\n      console.info(\"errorCode_004 content is: \" + JSON.stringify(obj5.$attrs.content));\n      expect(obj5.$attrs.content).assertEqual('180006');\n      let strJson6 = getInspectorByKey('ErrorCodetextStates6');\n      await Utils.sleep(1000);\n      let obj6: ESObject = JSON.parse(strJson6);\n      console.info(\"errorCode_004 content is: \" + JSON.stringify(obj6.$attrs.content));\n      expect(obj6.$attrs.content).assertEqual('180006');\n      let strJson7 = getInspectorByKey('ErrorCodetextStates7');\n      await Utils.sleep(1000);\n      let obj7: ESObject = JSON.parse(strJson7);\n      console.info(\"errorCode_004 content is: \" + JSON.stringify(obj7.$attrs.content));\n      expect(obj7.$attrs.content).assertEqual('180006');\n      let strJson8 = getInspectorByKey('ErrorCodetextStates8');\n      await Utils.sleep(1000);\n      let obj8: ESObject = JSON.parse(strJson8);\n      console.info(\"errorCode_004 content is: \" + JSON.stringify(obj8.$attrs.content));\n      expect(obj8.$attrs.content).assertEqual('180006');\n      done();\n    });\n  });\n}", "leaked": true, "text_tokens": 1428, "split": "valid"}
{"path": "js-unit~harmonyos_samples~561/entry/src/ohosTest/ets/test/List.test.ets", "project_name": "js-unit~harmonyos_samples~561", "text": "import basicTest from './basicExampleTest/basicExample.test';\nimport assert from './assertExampleTest/assertExample.test';\nimport param from './paramExampleTest/paramExample.test';\nimport custom from './customExampleTest/customExample.test';\nimport cover from './coverExampleTest/coverExample.test';\nimport callBack from './callBackExampleTest/callBackExample.test';\n\nexport default function testsuite() {\n  basicTest();\n  assert();\n  param();\n  custom();\n  cover();\n  callBack();\n}", "id": "8e449ba0b96e6bc57c19d045b39bf4aa0ab192298ff4c567b2de4ba426bfc3be", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 3.0, "quality_score": 3.0, "confidence": 0.9, "rationale": "结构清晰，符合TS/ArkTS规范，具备可复用性与学习价值。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 1968, "completion_tokens": 67, "total_tokens": 2035, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 3,\n  \"quality_score\": 3,\n  \"confidence\": 0.9,\n  \"rationale\": \"结构清晰，符合TS/ArkTS规范，具备可复用性与学习价值。\"\n}", "llm_formatted": "import basicTest from './basicExampleTest/basicExample.test';\nimport assert from './assertExampleTest/assertExample.test';\nimport param from './paramExampleTest/paramExample.test';\nimport custom from './customExampleTest/customExample.test';\nimport cover from './coverExampleTest/coverExample.test';\nimport callBack from './callBackExampleTest/callBackExample.test';\n\nexport default function testsuite() {\n  basicTest();\n  assert();\n  param();\n  custom();\n  cover();\n  callBack();\n}", "leaked": true, "text_tokens": 99, "split": "valid"}
{"path": "xts_acts~openharmony~1331/storage/storagepickerjstest/entry/src/ohosTest/ets/test/audioPickerPromise.test.ets", "project_name": "xts_acts~openharmony~1331", "text": "import { afterEach, describe, expect, it, Level} from '@ohos/hypium';\nimport { sleep, startAbility, stopAbility } from './Common'\nimport picker from '@ohos.file.picker';\n\nexport default function audioPickerPromise(abilityContext: Context) {\n  describe(\"audioPickerPromise\", () => {\n    afterEach(async () => {\n      await sleep(500);\n      await startAbility('ohos.acts.storage.picker', 'TestAbility');\n      await sleep(500);\n      await stopAbility('com.huawei.hmos.filemanager');\n      await stopAbility('com.huawei.hms.musicservice');\n      await stopAbility('com.ohos.filepicker');\n      await sleep(500);\n    });\n\n    /**\n     * @tc.number   : SUB_STORAGE_AUDIOPICKER_SELECT_PROMISE_0000\n     * @tc.name   : test_Audiopicker_Select_Promise_000\n     * @tc.desc   : select with option\n     * @tc.size   : MediumTest\n     * @tc.type   : Function\n     * @tc.level   : Level 0\n     */\n    it(\"test_Audiopicker_Select_Promise_000\", Level.LEVEL0, async (done: Function) => {\n      let testNum = \"test_Audiopicker_Select_Promise_000\";\n      let option = new picker.AudioSelectOptions();\n      let dirName = \"Audios\";\n      let fileName = \"01.mp3\";\n      await selectWithOption(testNum, done, option, dirName, fileName);\n    });\n    /**\n     * @tc.number   : SUB_STORAGE_AUDIOPICKER_SELECT_PROMISE_0100\n     * @tc.name   : test_Audiopicker_Select_Promise_001\n     * @tc.desc   : select without option\n     * @tc.size   : MediumTest\n     * @tc.type   : Function\n     * @tc.level   : Level 3\n     */\n    it(\"test_Audiopicker_Select_Promise_001\", Level.LEVEL0, async (done: Function) => {\n      let testNum = \"test_Audiopicker_Select_Promise_001\";\n      let dirName = \"Audios\";\n      let fileName = \"01.mp3\";\n      await select(testNum, done, dirName, fileName);\n    });\n    /**\n     * @tc.number   : SUB_STORAGE_AUDIOPICKER_SELECT_PROMISE_0200\n     * @tc.name   : test_Audiopicker_Select_Promise_002\n     * @tc.desc   : select without option\n     * @tc.size   : MediumTest\n     * @tc.type   : Function\n     * @tc.level   : Level 3\n     */\n    it(\"test_Audiopicker_Select_Promise_002\", Level.LEVEL0, async (done: Function) => {\n      let testNum = \"test_Audiopicker_Select_Promise_002\";\n      let option = new picker.AudioSelectOptions();\n      option.maxSelectNumber = 3;\n      let dirName = \"Audios\";\n      let fileName = \"01.mp3\";\n      await selectWithOption(testNum, done, option, dirName, fileName);\n    });\n    /**\n     * @tc.number   : SUB_STORAGE_AUDIOPICKER_SAVE_PROMISE_0000\n     * @tc.name   : test_Audiopicker_Save_Promise_000\n     * @tc.desc   : save mp3 in Audios\n     * @tc.size   : MediumTest\n     * @tc.type   : Function\n     * @tc.level   : Level 0\n     */\n    it(\"test_Audiopicker_Save_Promise_000\", Level.LEVEL0, async (done: Function) => {\n      let testNum = \"test_Audiopicker_Save_Promise_000\";\n      let option = new picker.AudioSaveOptions();\n      option.newFileNames = [\"AudioViewPicker01.mp3\"];\n      let saveDir = \"Audios\";\n      await saveWithOption(testNum, done, option, saveDir);\n    });\n    /**\n     * @tc.number   : SUB_STORAGE_AUDIOPICKER_SAVE_PROMISE_0100\n     * @tc.name   : test_Audiopicker_Save_Promise_001\n     * @tc.desc   : save without option, cancel\n     * @tc.size   : MediumTest\n     * @tc.type   : Function\n     * @tc.level   : Level 0\n     */\n    it(\"test_Audiopicker_Save_Promise_001\", Level.LEVEL0, async (done: Function) => {\n      let testNum = \"test_Audiopicker_Save_Promise_001\";\n      await saveWithoutSelect(testNum, done);\n    });\n  });\n}\n\n\nasync function select(testNum: string, done: Function, dirName: string, fileName: string) {\n  try {\n    let audioPicker = new picker.AudioViewPicker();\n    audioPicker.select().then((result) => {\n      console.info(`${testNum}::select result: ${JSON.stringify(result)}`);\n      done();\n    }).catch((err: Error) => {\n      console.info(`${testNum}::select err: ${JSON.stringify(err)}`);\n      done();\n      return;\n    });\n    expect(true).assertTrue();\n    done();\n  }\n  catch (error) {\n    console.info(`${testNum}::select error: ${JSON.stringify(error)}`);\n    expect(false).assertTrue();\n    done();\n  }\n}\n\n\nasync function selectWithOption(testNum: string, done: Function, option: picker.AudioSelectOptions, dirName: string, fileName: string) {\n  try {\n    let audioPicker = new picker.AudioViewPicker();\n    audioPicker.select(option).then((result) => {\n      console.info(`${testNum}::selectWithOption result: ${JSON.stringify(result)}`);\n      done();\n    }).catch((err: Error) => {\n      console.info(`${testNum}::selectWithOption err: ${JSON.stringify(err)}`);\n      done();\n      return;\n    });\n    expect(true).assertTrue();\n    done();\n  }\n  catch (error) {\n    console.info(`${testNum}::selectWithOption error: ${JSON.stringify(error)}`);\n    expect(false).assertTrue();\n    done();\n  }\n}\n\nasync function saveWithoutSelect(testNum: string, done: Function) {\n  try {\n    let audioPicker = new picker.AudioViewPicker();\n    audioPicker.save().then((result) => {\n      console.info(`${testNum}::saveWithoutSelect result: ${JSON.stringify(result)}`);\n      done();\n    }).catch((err: Error) => {\n      console.info(`${testNum}::saveWithoutSelect err: ${JSON.stringify(err)}`);\n      done();\n      return;\n    });\n    expect(true).assertTrue();\n    done();\n  }\n  catch (error) {\n    console.info(`${testNum}::saveWithoutSelect error: ${JSON.stringify(error)}`);\n    expect(false).assertTrue();\n    done();\n  }\n}\n\nasync function saveWithOption(testNum: string, done: Function, option: picker.AudioSaveOptions, dirName: string) {\n  try {\n    let audioPicker = new picker.AudioViewPicker();\n    audioPicker.save(option).then((result) => {\n      console.info(`${testNum}::saveWithOption result: ${JSON.stringify(result)}`);\n      done();\n    }).catch((err: Error) => {\n      console.info(`${testNum}::saveWithOption err: ${JSON.stringify(err)}`);\n      done();\n      return;\n    });\n    expect(true).assertTrue();\n    done();\n  }\n  catch (error) {\n    console.info(`${testNum}::saveWithOption error: ${JSON.stringify(error)}`);\n    expect(false).assertTrue();\n    done();\n  }\n}", "id": "f356213832f8d2f89b98eb5ffff463fbb2ec2b30c5ba44665e88afd69205ea02", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "高质量单测代码，体现ArkTS生态与API使用规范，具有较强学习价值。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 3534, "completion_tokens": 68, "total_tokens": 3602, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"高质量单测代码，体现ArkTS生态与API使用规范，具有较强学习价值。\"\n}", "llm_formatted": "typescript\nimport { afterEach, describe, expect, it, Level } from '@ohos/hypium';\nimport { sleep, startAbility, stopAbility } from './Common'\nimport picker from '@ohos.file.picker';\n\nexport default function audioPickerPromise(abilityContext: Context) {\n  describe(\"audioPickerPromise\", () => {\n    afterEach(async () => {\n      await sleep(500);\n      await startAbility('ohos.acts.storage.picker', 'TestAbility');\n      await sleep(500);\n      await stopAbility('com.huawei.hmos.filemanager');\n      await stopAbility('com.huawei.hms.musicservice');\n      await stopAbility('com.ohos.filepicker');\n      await sleep(500);\n    });\n\n    it(\"test_Audiopicker_Select_Promise_000\", Level.LEVEL0, async (done: Function) => {\n      let testNum = \"test_Audiopicker_Select_Promise_000\";\n      let option = new picker.AudioSelectOptions();\n      let dirName = \"Audios\";\n      let fileName = \"01.mp3\";\n      await selectWithOption(testNum, done, option, dirName, fileName);\n    });\n\n    it(\"test_Audiopicker_Select_Promise_001\", Level.LEVEL0, async (done: Function) => {\n      let testNum = \"test_Audiopicker_Select_Promise_001\";\n      let dirName = \"Audios\";\n      let fileName = \"01.mp3\";\n      await select(testNum, done, dirName, fileName);\n    });\n\n    it(\"test_Audiopicker_Select_Promise_002\", Level.LEVEL0, async (done: Function) => {\n      let testNum = \"test_Audiopicker_Select_Promise_002\";\n      let option = new picker.AudioSelectOptions();\n      option.maxSelectNumber = 3;\n      let dirName = \"Audios\";\n      let fileName = \"01.mp3\";\n      await selectWithOption(testNum, done, option, dirName, fileName);\n    });\n\n    it(\"test_Audiopicker_Save_Promise_000\", Level.LEVEL0, async (done: Function) => {\n      let testNum = \"test_Audiopicker_Save_Promise_000\";\n      let option = new picker.AudioSaveOptions();\n      option.newFileNames = [\"AudioViewPicker01.mp3\"];\n      let saveDir = \"Audios\";\n      await saveWithOption(testNum, done, option, saveDir);\n    });\n\n    it(\"test_Audiopicker_Save_Promise_001\", Level.LEVEL0, async (done: Function) => {\n      let testNum = \"test_Audiopicker_Save_Promise_001\";\n      await saveWithoutSelect(testNum, done);\n    });\n  });\n}\n\nasync function select(testNum: string, done: Function, dirName: string, fileName: string) {\n  try {\n    let audioPicker = new picker.AudioViewPicker();\n    audioPicker.select().then((result) => {\n      console.info(`${testNum}::select result: ${JSON.stringify(result)}`);\n      done();\n    }).catch((err: Error) => {\n      console.info(`${testNum}::select err: ${JSON.stringify(err)}`);\n      done();\n      return;\n    });\n    expect(true).assertTrue();\n    done();\n  }\n  catch (error) {\n    console.info(`${testNum}::select error: ${JSON.stringify(error)}`);\n    expect(false).assertTrue();\n    done();\n  }\n}\n\nasync function selectWithOption(testNum: string, done: Function, option: picker.AudioSelectOptions, dirName: string, fileName: string) {\n  try {\n    let audioPicker = new picker.AudioViewPicker();\n    audioPicker.select(option).then((result) => {\n      console.info(`${testNum}::selectWithOption result: ${JSON.stringify(result)}`);\n      done();\n    }).catch((err: Error) => {\n      console.info(`${testNum}::selectWithOption err: ${JSON.stringify(err)}`);\n      done();\n      return;\n    });\n    expect(true).assertTrue();\n    done();\n  }\n  catch (error) {\n    console.info(`${testNum}::selectWithOption error: ${JSON.stringify(error)}`);\n    expect(false).assertTrue();\n    done();\n  }\n}\n\nasync function saveWithoutSelect(testNum: string, done: Function) {\n  try {\n    let audioPicker = new picker.AudioViewPicker();\n    audioPicker.save().then((result) => {\n      console.info(`${testNum}::saveWithoutSelect result: ${JSON.stringify(result)}`);\n      done();\n    }).catch((err: Error) => {\n      console.info(`${testNum}::saveWithoutSelect err: ${JSON.stringify(err)}`);\n      done();\n      return;\n    });\n    expect(true).assertTrue();\n    done();\n  }\n  catch (error) {\n    console.info(`${testNum}::saveWithoutSelect error: ${JSON.stringify(error)}`);\n    expect(false).assertTrue();\n    done();\n  }\n}\n\nasync function saveWithOption(testNum: string, done: Function, option: picker.AudioSaveOptions, dirName: string) {\n  try {\n    let audioPicker = new picker.AudioViewPicker();\n    audioPicker.save(option).then((result) => {\n      console.info(`${testNum}::saveWithOption result: ${JSON.stringify(result)}`);\n      done();\n    }).catch((err: Error) => {\n      console.info(`${testNum}::saveWithOption err: ${JSON.stringify(err)}`);\n      done();\n      return;\n    });\n    expect(true).assertTrue();\n    done();\n  }\n  catch (error) {\n    console.info(`${testNum}::saveWithOption error: ${JSON.stringify(error)}`);\n    expect(false).assertTrue();\n    done();\n  }\n}", "leaked": true, "text_tokens": 1665, "split": "valid"}
{"path": "multi-news-read~harmonyos_samples~325/entry/src/main/ets/viewmodel/MultiImageViewModel.ets", "project_name": "multi-news-read~harmonyos_samples~325", "text": "import Constants from '../common/Constants';\nimport { News } from './ImageAndTextViewModel';\n\nexport default class MultiImageViewModel {\n  private newsList: News[] = [];\n\n  constructor() {\n    this.newsList.push(new News(Constants.NEWS_ID_LIST[0],\n      $r('app.string.music_listening_experience'),\n      [\n        $r(\"app.media.multi_image_group_01_1\"),\n        $r(\"app.media.multi_image_group_01_2\"),\n        $r(\"app.media.multi_image_group_01_3\")\n      ],\n      $r('app.string.media_news'),\n      $r('app.string.news_update_1_hour_ago')\n    ));\n    this.newsList.push(new News(Constants.NEWS_ID_LIST[1],\n      $r('app.string.spring_scenery'),\n      [\n        $r(\"app.media.multi_image_group_02_1\"),\n        $r(\"app.media.multi_image_group_02_2\"),\n        $r(\"app.media.multi_image_group_02_3\")\n      ],\n      $r('app.string.media_news'),\n      $r('app.string.news_update_1_hour_ago')\n    ));\n    this.newsList.push(new News(Constants.NEWS_ID_LIST[2],\n      $r('app.string.autumn_sun_wheat_field'),\n      [\n        $r(\"app.media.multi_image_group_03_1\"),\n        $r(\"app.media.multi_image_group_03_2\"),\n        $r(\"app.media.multi_image_group_03_3\")\n      ]\n      ,\n      $r('app.string.media_news'),\n      $r('app.string.news_update_1_hour_ago')\n    )\n    )\n    ;\n    this.newsList.push(new News(Constants.NEWS_ID_LIST[3],\n      $r('app.string.rabbit_in_mythology'), [\n        $r(\"app.media.multi_image_group_04_1\"),\n        $r(\"app.media.multi_image_group_04_2\"),\n        $r(\"app.media.multi_image_group_04_3\")\n      ]\n      ,\n      $r('app.string.media_news'),\n      $r('app.string.news_update_2_hours_ago')\n    )\n    )\n    ;\n    this.newsList.push(new News(Constants.NEWS_ID_LIST[4],\n      $r('app.string.ai_in_education'), [\n        $r(\"app.media.multi_image_group_05_1\"),\n        $r(\"app.media.multi_image_group_05_2\"),\n        $r(\"app.media.multi_image_group_05_3\")\n      ],\n      $r('app.string.media_news'),\n      $r('app.string.news_update_2_hours_ago')\n    ));\n  }\n\n  public getMultiImageList(): News[] {\n    return this.newsList;\n  }\n}", "id": "93ff2bf2aebcc850acb71d64b87dda87ee8b03df1d7897f1db5fa6c5cfc19ebf", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 3.0, "confidence": 0.9, "rationale": "结构清晰，符合ArkTS规范，具备实际业务逻辑与可复用性。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2446, "completion_tokens": 66, "total_tokens": 2512, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 3,\n  \"confidence\": 0.9,\n  \"rationale\": \"结构清晰，符合ArkTS规范，具备实际业务逻辑与可复用性。\"\n}", "llm_formatted": "import Constants from '../common/Constants';\nimport { News } from './ImageAndTextViewModel';\n\nexport default class MultiImageViewModel {\n  private newsList: News[] = [];\n\n  constructor() {\n    this.newsList.push(new News(Constants.NEWS_ID_LIST[0],\n      $r('app.string.music_listening_experience'),\n      [\n        $r(\"app.media.multi_image_group_01_1\"),\n        $r(\"app.media.multi_image_group_01_2\"),\n        $r(\"app.media.multi_image_group_01_3\")\n      ],\n      $r('app.string.media_news'),\n      $r('app.string.news_update_1_hour_ago')\n    ));\n    this.newsList.push(new News(Constants.NEWS_ID_LIST[1],\n      $r('app.string.spring_scenery'),\n      [\n        $r(\"app.media.multi_image_group_02_1\"),\n        $r(\"app.media.multi_image_group_02_2\"),\n        $r(\"app.media.multi_image_group_02_3\")\n      ],\n      $r('app.string.media_news'),\n      $r('app.string.news_update_1_hour_ago')\n    ));\n    this.newsList.push(new News(Constants.NEWS_ID_LIST[2],\n      $r('app.string.autumn_sun_wheat_field'),\n      [\n        $r(\"app.media.multi_image_group_03_1\"),\n        $r(\"app.media.multi_image_group_03_2\"),\n        $r(\"app.media.multi_image_group_03_3\")\n      ],\n      $r('app.string.media_news'),\n      $r('app.string.news_update_1_hour_ago')\n    ));\n    this.newsList.push(new News(Constants.NEWS_ID_LIST[3],\n      $r('app.string.rabbit_in_mythology'), [\n        $r(\"app.media.multi_image_group_04_1\"),\n        $r(\"app.media.multi_image_group_04_2\"),\n        $r(\"app.media.multi_image_group_04_3\")\n      ],\n      $r('app.string.media_news'),\n      $r('app.string.news_update_2_hours_ago')\n    ));\n    this.newsList.push(new News(Constants.NEWS_ID_LIST[4],\n      $r('app.string.ai_in_education'), [\n        $r(\"app.media.multi_image_group_05_1\"),\n        $r(\"app.media.multi_image_group_05_2\"),\n        $r(\"app.media.multi_image_group_05_3\")\n      ],\n      $r('app.string.media_news'),\n      $r('app.string.news_update_2_hours_ago')\n    ));\n  }\n\n  public getMultiImageList(): News[] {\n    return this.newsList;\n  }\n}", "leaked": true, "text_tokens": 577, "split": "valid"}
{"path": "xts_acts~openharmony~1331/arkui/ace_c_arkui_test/entry/src/ohosTest/ets/test/span/SpanFontFamilyTest.test.ets", "project_name": "xts_acts~openharmony~1331", "text": "import { beforeEach, describe, expect, it, Level } from '@ohos/hypium';\nimport Utils from '../common/Utils';\nimport nativeFunc from 'libnativefunc.so'\n\nexport default function spanFontFamilyTest() {\n\n  describe('SpanFontFamilyTest', () => {\n\n    beforeEach(async (done: Function) => {\n      await Utils.sleep(100);\n      done();\n    });\n\n    /*\n     * @tc.number     : SUB_ARKUI_CAPI_SPAN_FONT_FAMILY_0100\n     * @tc.name       : testSpanFontFamily001\n     * @tc.desc       : testing fontFamily for text with normal value\n     * @tc.size       : MediumTest\n     * @tc.type       : Function\n     * @tc.level      : Level 1\n     */\n    it('testSpanFontFamily001', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testSpanFontFamily001()).assertEqual(0)\n      done()\n    })\n\n    /*\n     * @tc.number     : SUB_ARKUI_CAPI_SPAN_FONT_FAMILY_0200\n     * @tc.name       : testSpanFontFamily002\n     * @tc.desc       : testing fontFamily for text with normal value\n     * @tc.size       : MediumTest\n     * @tc.type       : Function\n     * @tc.level      : Level 1\n     */\n    it('testSpanFontFamily002', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testSpanFontFamily002()).assertEqual(0)\n      done()\n    })\n\n    /*\n     * @tc.number     : SUB_ARKUI_CAPI_SPAN_FONT_FAMILY_0300\n     * @tc.name       : testSpanFontFamily003\n     * @tc.desc       : testing fontFamily for text with normal value\n     * @tc.size       : MediumTest\n     * @tc.type       : Function\n     * @tc.level      : Level 1\n     */\n    it('testSpanFontFamily003', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testSpanFontFamily003()).assertEqual(0)\n      done()\n    })\n  })\n}\n", "id": "ac3b218d5722ebc4986a887e0cb4177011a1c2f43818b4e397f22bc43f2209aa", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 3.0, "confidence": 0.95, "rationale": "符合ArkTS生态，结构清晰，具备测试用例典型模式与类型使用。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2356, "completion_tokens": 67, "total_tokens": 2423, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 3,\n  \"confidence\": 0.95,\n  \"rationale\": \"符合ArkTS生态，结构清晰，具备测试用例典型模式与类型使用。\"\n}", "llm_formatted": "import { beforeEach, describe, expect, it, Level } from '@ohos/hypium';\nimport Utils from '../common/Utils';\nimport nativeFunc from 'libnativefunc.so';\n\nexport default function spanFontFamilyTest() {\n  describe('SpanFontFamilyTest', () => {\n    beforeEach(async (done: Function) => {\n      await Utils.sleep(100);\n      done();\n    });\n\n    it('testSpanFontFamily001', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testSpanFontFamily001()).assertEqual(0);\n      done();\n    });\n\n    it('testSpanFontFamily002', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testSpanFontFamily002()).assertEqual(0);\n      done();\n    });\n\n    it('testSpanFontFamily003', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testSpanFontFamily003()).assertEqual(0);\n      done();\n    });\n  });\n}", "leaked": true, "text_tokens": 487, "split": "valid"}
{"path": "applications_dlp_manager~openharmony~1048/entry/src/main/ets/common/UIContextUtil.ets", "project_name": "applications_dlp_manager~openharmony~1048", "text": "import { common } from '@kit.AbilityKit';\nimport CounterLock from './CounterLock';\nimport { HiLog } from './HiLog';\nimport Singleton from './Singleton';\nimport { UIContext } from '@kit.ArkUI';\n\nconst TAG: string = 'UIContextUtil';\n\nexport default class UIContextUtil {\n  private static singletonInstance: Singleton<UIContextUtil> = new Singleton<UIContextUtil>(() => new UIContextUtil());\n  private static uiContext: UIContext | undefined = undefined;\n  private static locker: CounterLock = new CounterLock();\n\n  public static getInstance(): UIContextUtil {\n    return UIContextUtil.singletonInstance.getInstance();\n  }\n\n  public getUIContext(\n    context: common.UIAbilityContext | common.UIExtensionContext | common.ServiceExtensionContext\n  ): UIContext {\n    HiLog.info(TAG, 'Getting UIContext.');\n    if (!UIContextUtil.uiContext) {\n      UIContextUtil.locker.acquire();\n      try {\n        if (!UIContextUtil.uiContext) {\n          HiLog.info(TAG, 'UIContext is undefined. Creating UIContext without window.');\n          UIContextUtil.uiContext = UIContext.createUIContextWithoutWindow(context) as UIContext;\n        }\n      } finally {\n        UIContextUtil.locker.release();\n      }\n    }\n    return UIContextUtil.uiContext;\n  }\n}", "id": "d784a7a3373be4af66db41da0789819f22fb215a5b95602e198ce44e26d0fe4d", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "结构清晰，类型规范，生态耦合自然，具备良好实践价值。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 1541, "completion_tokens": 69, "total_tokens": 1610, "raw_response": "```json\n{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"结构清晰，类型规范，生态耦合自然，具备良好实践价值。\"\n}\n```", "llm_formatted": "import { common } from '@kit.AbilityKit';\nimport CounterLock from './CounterLock';\nimport { HiLog } from './HiLog';\nimport Singleton from './Singleton';\nimport { UIContext } from '@kit.ArkUI';\n\nconst TAG: string = 'UIContextUtil';\n\nexport default class UIContextUtil {\n  private static singletonInstance: Singleton<UIContextUtil> = new Singleton<UIContextUtil>(() => new UIContextUtil());\n  private static uiContext: UIContext | undefined = undefined;\n  private static locker: CounterLock = new CounterLock();\n\n  public static getInstance(): UIContextUtil {\n    return UIContextUtil.singletonInstance.getInstance();\n  }\n\n  public getUIContext(\n    context: common.UIAbilityContext | common.UIExtensionContext | common.ServiceExtensionContext\n  ): UIContext {\n    HiLog.info(TAG, 'Getting UIContext.');\n    if (!UIContextUtil.uiContext) {\n      UIContextUtil.locker.acquire();\n      try {\n        if (!UIContextUtil.uiContext) {\n          HiLog.info(TAG, 'UIContext is undefined. Creating UIContext without window.');\n          UIContextUtil.uiContext = UIContext.createUIContextWithoutWindow(context) as UIContext;\n        }\n      } finally {\n        UIContextUtil.locker.release();\n      }\n    }\n    return UIContextUtil.uiContext;\n  }\n}", "leaked": true, "text_tokens": 273, "split": "valid"}
{"path": "applications_auth_widget~MHBase~977/entry/src/ohosTest/ets/test/uitest/FindWindowExample.test.ets", "project_name": "applications_auth_widget~MHBase~977", "text": "import { describe, expect, it, TestType } from '@ohos/hypium';\nimport { Driver } from '@ohos.UiTest';\nimport abilityDelegatorRegistry from '@ohos.app.ability.abilityDelegatorRegistry';\nimport Want from '@ohos.app.ability.Want';\n\nconst delegator = abilityDelegatorRegistry.getAbilityDelegator();\nconst bundleName = abilityDelegatorRegistry.getArguments().bundleName;\n\nconst delays = 1000;\n\nexport default function FindWindowExampleTest() {\n  describe('FindWindowExampleTest', () => {\n    it('findWindowExampleTest_bundleName', TestType.FUNCTION, async (done: Function) => {\n      let want: Want = {\n        bundleName: bundleName,\n        abilityName: \"TestAbility\"\n      }\n      await delegator.startAbility(want);\n      let driver = Driver.create();\n      await driver.delayMs(delays);\n      await driver.findWindow({\n        bundleName: bundleName\n      });\n      expect(true).assertTrue();\n      done();\n    })\n  })\n}", "id": "247d5c0f8c5b80c0e01cfa08718bee40f0b892c863f386761f14716b26548063", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 3.0, "confidence": 0.9, "rationale": "符合ArkTS生态规范，含测试用例结构与API调用", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 1489, "completion_tokens": 67, "total_tokens": 1556, "raw_response": "```json\n{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 3,\n  \"confidence\": 0.9,\n  \"rationale\": \"符合ArkTS生态规范，含测试用例结构与API调用\"\n}\n```", "llm_formatted": "import { describe, expect, it, TestType } from '@ohos/hypium';\nimport { Driver } from '@ohos.UiTest';\nimport abilityDelegatorRegistry from '@ohos.app.ability.abilityDelegatorRegistry';\nimport Want from '@ohos.app.ability.Want';\n\nconst delegator = abilityDelegatorRegistry.getAbilityDelegator();\nconst bundleName = abilityDelegatorRegistry.getArguments().bundleName;\n\nconst delays = 1000;\n\nexport default function FindWindowExampleTest() {\n  describe('FindWindowExampleTest', () => {\n    it('findWindowExampleTest_bundleName', TestType.FUNCTION, async (done: Function) => {\n      let want: Want = {\n        bundleName: bundleName,\n        abilityName: \"TestAbility\"\n      }\n      await delegator.startAbility(want);\n      let driver = Driver.create();\n      await driver.delayMs(delays);\n      await driver.findWindow({\n        bundleName: bundleName\n      });\n      expect(true).assertTrue();\n      done();\n    })\n  })\n}", "leaked": true, "text_tokens": 221, "split": "valid"}
{"path": "鸿蒙星河版_Codelabs_学习代码仓~苏杰豪~3486/entryPreferences/src/main/ets/view/ButtonComponent.ets", "project_name": "鸿蒙星河版_Codelabs_学习代码仓~苏杰豪~3486", "text": "import StyleConstants from '../common/constants/StyleConstants';\nimport PreferenceModel from '../model/PreferenceModel';\nimport ButtonItemData from '../viewmodel/ButtonItemData';\nimport Fruit from '../viewmodel/Fruit';\n\n/**\n * Button component.\n */\n@Component\nexport default struct ButtonComponent {\n  @Link fruit: Fruit;\n  private buttonItemValues: Array<ButtonItemData> = this.getButtonItemValues();\n\n  build() {\n    Column() {\n      ForEach(this.buttonItemValues, (item: ButtonItemData) => {\n        Button(item.resource, { type: ButtonType.Capsule, stateEffect: true })\n          .backgroundColor($r('app.color.button_background_color'))\n          .width(StyleConstants.BUTTON_WIDTH)\n          .height(StyleConstants.BUTTON_HEIGHT)\n          .fontWeight(StyleConstants.FONT_WEIGHT)\n          .fontSize(StyleConstants.FONT_SIZE)\n          .margin({ bottom: StyleConstants.BUTTON_MARGIN_BOTTOM })\n          .onClick(() => {\n            item.clickMethod();\n          })\n      }, (item: ButtonItemData) => JSON.stringify(item))\n    }\n  }\n\n  /**\n   * Gets the data in the clicked button.\n   */\n  getButtonItemValues() {\n    const values: Array<ButtonItemData> = [\n      new ButtonItemData(\n        $r('app.string.write_data_btn_text'),\n        () => {\n          // Write data.\n          PreferenceModel.writeData(this.fruit);\n        }\n      ),\n      new ButtonItemData(\n        $r('app.string.read_data_btn_text'),\n        () => {\n          // Get data from the preferences database.\n          PreferenceModel.getFruitData().then((resultData: Fruit) => {\n            if (resultData) {\n              this.fruit = resultData;\n            }\n          });\n        }\n      ),\n      new ButtonItemData(\n        $r('app.string.delete_data_file_btn_text'),\n        () => {\n          // Delete database files.\n          PreferenceModel.deletePreferences();\n          // After a database file is deleted, the corresponding data is left blank.\n          this.fruit.fruitName = '';\n          this.fruit.fruitNum = ''\n        }\n      )\n    ];\n    return values;\n  }\n}", "id": "1a0273b41e307cfb9206940a7db8a54bad4ca395153da7447162c43c0fd322b8", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "结构清晰，生态耦合自然，类型与命名规范，具备良好学习价值。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 1704, "completion_tokens": 71, "total_tokens": 1775, "raw_response": "```json\n{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"结构清晰，生态耦合自然，类型与命名规范，具备良好学习价值。\"\n}\n```", "llm_formatted": "import StyleConstants from '../common/constants/StyleConstants';\nimport PreferenceModel from '../model/PreferenceModel';\nimport ButtonItemData from '../viewmodel/ButtonItemData';\nimport Fruit from '../viewmodel/Fruit';\n\n/**\n * Button component.\n */\n@Component\nexport default struct ButtonComponent {\n  @Link fruit: Fruit;\n  private buttonItemValues: Array<ButtonItemData> = this.getButtonItemValues();\n\n  build() {\n    Column() {\n      ForEach(this.buttonItemValues, (item: ButtonItemData) => {\n        Button(item.resource, { type: ButtonType.Capsule, stateEffect: true })\n          .backgroundColor($r('app.color.button_background_color'))\n          .width(StyleConstants.BUTTON_WIDTH)\n          .height(StyleConstants.BUTTON_HEIGHT)\n          .fontWeight(StyleConstants.FONT_WEIGHT)\n          .fontSize(StyleConstants.FONT_SIZE)\n          .margin({ bottom: StyleConstants.BUTTON_MARGIN_BOTTOM })\n          .onClick(() => {\n            item.clickMethod();\n          })\n      }, (item: ButtonItemData) => JSON.stringify(item))\n    }\n  }\n\n  /**\n   * Gets the data in the clicked button.\n   */\n  getButtonItemValues() {\n    const values: Array<ButtonItemData> = [\n      new ButtonItemData(\n        $r('app.string.write_data_btn_text'),\n        () => {\n          // Write data.\n          PreferenceModel.writeData(this.fruit);\n        }\n      ),\n      new ButtonItemData(\n        $r('app.string.read_data_btn_text'),\n        () => {\n          // Get data from the preferences database.\n          PreferenceModel.getFruitData().then((resultData: Fruit) => {\n            if (resultData) {\n              this.fruit = resultData;\n            }\n          });\n        }\n      ),\n      new ButtonItemData(\n        $r('app.string.delete_data_file_btn_text'),\n        () => {\n          // Delete database files.\n          PreferenceModel.deletePreferences();\n          // After a database file is deleted, the corresponding data is left blank.\n          this.fruit.fruitName = '';\n          this.fruit.fruitNum = ''\n        }\n      )\n    ];\n    return values;\n  }\n}", "leaked": true, "text_tokens": 436, "split": "valid"}
{"path": "applications_permission_manager~OpenHarmony~815/permissionmanager/src/main/ets/common/components/search.ets", "project_name": "applications_permission_manager~OpenHarmony~815", "text": "import Constants from '../utils/constant';\nimport { AppInfo, ApplicationObj } from '../model/typedef';\n\n@Component\nexport struct textInput {\n  @Link applicationItem: Array<AppInfo | ApplicationObj>; // application info array\n  @Link searchResult: boolean; // search results\n  @State oldApplicationItem: Array<AppInfo | ApplicationObj> = []; // Original application information array\n\n  aboutToAppear() {\n    this.oldApplicationItem = this.applicationItem;\n  }\n\n  build() {\n    Column() {\n      Flex({ alignContent: FlexAlign.Start }) {\n        TextInput({ placeholder: $r('app.string.textInput_placeholder') })\n          .backgroundColor($r('sys.color.comp_background_list_card'))\n          .padding({ left: Constants.TEXTINPUT_PADDING_LEFT })\n          .type(InputType.Normal)\n          .border({\n            width: Constants.TEXTINPUT_BORDER_WIDTH, color: $r('app.color.label_color_20'), radius: Constants.TEXTINPUT_BORDER_RADIUS\n          })\n          .placeholderColor(Color.Grey)\n          .placeholderFont({\n            size: Constants.TEXT_MIDDLE_FONT_SIZE,\n            weight: FontWeight.Normal,\n            family: 'sans-serif',\n            style: FontStyle.Normal\n          })\n          .caretColor($r('sys.color.font_secondary'))\n          .height(Constants.TEXTINPUT_HEIGHT)\n          .onChange((value: string) => {\n            if (value === '' || value === null) {\n              this.applicationItem = this.oldApplicationItem;\n            } else {\n              this.applicationItem = this.oldApplicationItem.filter((item: AppInfo | ApplicationObj) => {\n                  return String(item.label).indexOf(value) > -1;\n              })\n            }\n            if (this.applicationItem.length) {\n              this.searchResult = true;\n            } else {\n              this.searchResult = false;\n            }\n          })\n        Button().defaultFocus(true).opacity(0).position({ x: '-100%' })\n        Image($r('app.media.ic_public_search_filled'))\n          .objectFit(ImageFit.Contain)\n          .width(Constants.TEXTINPUT_IMAGE_WIDTH)\n          .height(Constants.TEXTINPUT_IMAGE_HEIGHT)\n          .position({ x: Constants.TEXTINPUT_IMAGE_MARGIN_LEFT, y: Constants.TEXTINPUT_IMAGE_MARGIN_TOP })\n      }\n    }\n  }\n}", "id": "c24ca2b8657aa08eed8619117584e9f264c1132355830a375d6c6b615e6acc85", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "结构清晰，类型规范，生态耦合自然，具备良好学习价值", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 1726, "completion_tokens": 68, "total_tokens": 1794, "raw_response": "```json\n{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"结构清晰，类型规范，生态耦合自然，具备良好学习价值\"\n}\n```", "llm_formatted": "import Constants from '../utils/constant';\nimport { AppInfo, ApplicationObj } from '../model/typedef';\n\n@Component\nexport struct textInput {\n  @Link applicationItem: Array<AppInfo | ApplicationObj>; // application info array\n  @Link searchResult: boolean; // search results\n  @State oldApplicationItem: Array<AppInfo | ApplicationObj> = []; // Original application information array\n\n  aboutToAppear() {\n    this.oldApplicationItem = this.applicationItem;\n  }\n\n  build() {\n    Column() {\n      Flex({ alignContent: FlexAlign.Start }) {\n        TextInput({ placeholder: $r('app.string.textInput_placeholder') })\n          .backgroundColor($r('sys.color.comp_background_list_card'))\n          .padding({ left: Constants.TEXTINPUT_PADDING_LEFT })\n          .type(InputType.Normal)\n          .border({\n            width: Constants.TEXTINPUT_BORDER_WIDTH, color: $r('app.color.label_color_20'), radius: Constants.TEXTINPUT_BORDER_RADIUS\n          })\n          .placeholderColor(Color.Grey)\n          .placeholderFont({\n            size: Constants.TEXT_MIDDLE_FONT_SIZE,\n            weight: FontWeight.Normal,\n            family: 'sans-serif',\n            style: FontStyle.Normal\n          })\n          .caretColor($r('sys.color.font_secondary'))\n          .height(Constants.TEXTINPUT_HEIGHT)\n          .onChange((value: string) => {\n            if (value === '' || value === null) {\n              this.applicationItem = this.oldApplicationItem;\n            } else {\n              this.applicationItem = this.oldApplicationItem.filter((item: AppInfo | ApplicationObj) => {\n                  return String(item.label).indexOf(value) > -1;\n              })\n            }\n            if (this.applicationItem.length) {\n              this.searchResult = true;\n            } else {\n              this.searchResult = false;\n            }\n          })\n        Button().defaultFocus(true).opacity(0).position({ x: '-100%' })\n        Image($r('app.media.ic_public_search_filled'))\n          .objectFit(ImageFit.Contain)\n          .width(Constants.TEXTINPUT_IMAGE_WIDTH)\n          .height(Constants.TEXTINPUT_IMAGE_HEIGHT)\n          .position({ x: Constants.TEXTINPUT_IMAGE_MARGIN_LEFT, y: Constants.TEXTINPUT_IMAGE_MARGIN_TOP })\n      }\n    }\n  }\n}", "leaked": true, "text_tokens": 458, "split": "valid"}
{"path": "preferences~harmonyos_samples~329/entry/src/main/ets/mainability/MainAbility.ets", "project_name": "preferences~harmonyos_samples~329", "text": "import { UIAbility,AbilityConstant,Want } from '@kit.AbilityKit';\nimport { window } from '@kit.ArkUI';\nimport Logger from '../model/Logger';\n\nconst TAG: string = '[MainAbility]';\n\nexport default class MainAbility extends UIAbility {\n  onCreate(want: Want, launchParam: AbilityConstant.LaunchParam): void {\n    Logger.info(TAG, 'MainAbility onCreate is called');\n  }\n\n  onDestroy() {\n    Logger.info(TAG, 'MainAbility onDestroy is called');\n  }\n\n  onWindowStageCreate(windowStage: window.WindowStage): void {\n    Logger.info(TAG, 'MainAbility onWindowStageCreate is called');\n    windowStage.loadContent('pages/Index', (err, data) => {\n      if (err.code) {\n        Logger.error(TAG, `Failed to load the content. Cause:${JSON.stringify(err) ?? ''}`);\n        return;\n      }\n      Logger.info(TAG, `Succeeded in loading the content. Data:${JSON.stringify(data) ?? ''}`);\n    });\n  }\n\n  onWindowStageDestroy() {\n    Logger.info(TAG, 'MainAbility onWindowStageDestroy is called');\n  }\n\n  onForeground() {\n    Logger.info(TAG, 'MainAbility onForeground is called');\n  }\n\n  onBackground() {\n    Logger.info(TAG, 'MainAbility onBackground is called');\n  }\n}", "id": "195aa5ea67deac54c8265b2d083c663e677e8bb142aacd6b769c2194dedefc32", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 3.0, "confidence": 0.95, "rationale": "符合ArkTS生态规范，结构完整，具有实际业务逻辑与调用模式。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2143, "completion_tokens": 67, "total_tokens": 2210, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 3,\n  \"confidence\": 0.95,\n  \"rationale\": \"符合ArkTS生态规范，结构完整，具有实际业务逻辑与调用模式。\"\n}", "llm_formatted": "import { UIAbility,AbilityConstant,Want } from '@kit.AbilityKit';\nimport { window } from '@kit.ArkUI';\nimport Logger from '../model/Logger';\n\nconst TAG: string = '[MainAbility]';\n\nexport default class MainAbility extends UIAbility {\n  onCreate(want: Want, launchParam: AbilityConstant.LaunchParam): void {\n    Logger.info(TAG, 'MainAbility onCreate is called');\n  }\n\n  onDestroy() {\n    Logger.info(TAG, 'MainAbility onDestroy is called');\n  }\n\n  onWindowStageCreate(windowStage: window.WindowStage): void {\n    Logger.info(TAG, 'MainAbility onWindowStageCreate is called');\n    windowStage.loadContent('pages/Index', (err, data) => {\n      if (err.code) {\n        Logger.error(TAG, `Failed to load the content. Cause:${JSON.stringify(err) ?? ''}`);\n        return;\n      }\n      Logger.info(TAG, `Succeeded in loading the content. Data:${JSON.stringify(data) ?? ''}`);\n    });\n  }\n\n  onWindowStageDestroy() {\n    Logger.info(TAG, 'MainAbility onWindowStageDestroy is called');\n  }\n\n  onForeground() {\n    Logger.info(TAG, 'MainAbility onForeground is called');\n  }\n\n  onBackground() {\n    Logger.info(TAG, 'MainAbility onBackground is called');\n  }\n}", "leaked": true, "text_tokens": 274, "split": "valid"}
{"path": "applications_dlp_manager~openharmony~1048/entry/src/main/ets/component/helper/EncryptProtectionHelper.ets", "project_name": "applications_dlp_manager~openharmony~1048", "text": "import Constants from '../../common/constant';\nimport EncryptProtectionShowCodeEnum from '../../common/enum/EncryptProtectionShowCodeEnum';\n\nexport default class EncryptProtectionHelper {\n  public static readonly INPUT_MAX_LENGTH = 50 * 20;\n  private static readonly ERROR_SHOW_MAP = new Map<number, Resource>([\n    [EncryptProtectionShowCodeEnum.NET_ERROR, $r('app.string.network_invalid')],\n    [EncryptProtectionShowCodeEnum.INPUT_ERROR, $r('app.string.incorrect_work_ID')],\n    [EncryptProtectionShowCodeEnum.DEFAULT_ERROR, $r('app.string.File_cannot_be_opened')],\n  ]);\n  private static readonly BUSINESS_CODE_MAP = new Map<number, number>([\n    [Constants.ERR_JS_NETWORK_INVALID, EncryptProtectionShowCodeEnum.NET_ERROR],\n    [Constants.ERR_JS_ACCOUNT_NOT_FOUND, EncryptProtectionShowCodeEnum.INPUT_ERROR],\n  ]);\n\n  public static isParamError(errorCode: number): boolean {\n    return errorCode === Constants.ERR_JS_ACCOUNT_NOT_FOUND;\n  }\n\n  public static getShowErr(errorCode: number): Resource | undefined {\n    return EncryptProtectionHelper.ERROR_SHOW_MAP.get(errorCode);\n  }\n\n  public static isShowErr(errorCode: number, isOver: boolean): boolean {\n    return isOver || (errorCode !== EncryptProtectionShowCodeEnum.INIT_SUCCESS);\n  }\n\n  public static convertErrorCodeToShowCode(errorCode: number): number {\n    const showCode = EncryptProtectionHelper.BUSINESS_CODE_MAP.get(errorCode);\n    if (showCode) {\n      return showCode;\n    }\n    return EncryptProtectionShowCodeEnum.DEFAULT_ERROR;\n  }\n}\n\n\n", "id": "b33329a69d56fb61c0e22416a45c84ad1cf5568ebb3ef1de0da25e92d7a6bedd", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "结构清晰，类型规范，生态耦合自然，具备良好可迁移性", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 1594, "completion_tokens": 69, "total_tokens": 1663, "raw_response": "```json\n{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"结构清晰，类型规范，生态耦合自然，具备良好可迁移性\"\n}\n```", "llm_formatted": "import Constants from '../../common/constant';\nimport EncryptProtectionShowCodeEnum from '../../common/enum/EncryptProtectionShowCodeEnum';\n\nexport default class EncryptProtectionHelper {\n  public static readonly INPUT_MAX_LENGTH = 50 * 20;\n  private static readonly ERROR_SHOW_MAP = new Map<number, Resource>([\n    [EncryptProtectionShowCodeEnum.NET_ERROR, $r('app.string.network_invalid')],\n    [EncryptProtectionShowCodeEnum.INPUT_ERROR, $r('app.string.incorrect_work_ID')],\n    [EncryptProtectionShowCodeEnum.DEFAULT_ERROR, $r('app.string.File_cannot_be_opened')],\n  ]);\n  private static readonly BUSINESS_CODE_MAP = new Map<number, number>([\n    [Constants.ERR_JS_NETWORK_INVALID, EncryptProtectionShowCodeEnum.NET_ERROR],\n    [Constants.ERR_JS_ACCOUNT_NOT_FOUND, EncryptProtectionShowCodeEnum.INPUT_ERROR],\n  ]);\n\n  public static isParamError(errorCode: number): boolean {\n    return errorCode === Constants.ERR_JS_ACCOUNT_NOT_FOUND;\n  }\n\n  public static getShowErr(errorCode: number): Resource | undefined {\n    return EncryptProtectionHelper.ERROR_SHOW_MAP.get(errorCode);\n  }\n\n  public static isShowErr(errorCode: number, isOver: boolean): boolean {\n    return isOver || (errorCode !== EncryptProtectionShowCodeEnum.INIT_SUCCESS);\n  }\n\n  public static convertErrorCodeToShowCode(errorCode: number): number {\n    const showCode = EncryptProtectionHelper.BUSINESS_CODE_MAP.get(errorCode);\n    if (showCode) {\n      return showCode;\n    }\n    return EncryptProtectionShowCodeEnum.DEFAULT_ERROR;\n  }\n}", "leaked": true, "text_tokens": 326, "split": "valid"}
{"path": "privacy-radar-public~Chaos~2061/ohos-picker/entry/src/main/ets/data/PermissionInfo.ets", "project_name": "privacy-radar-public~Chaos~2061", "text": "export class PermissionInfo {\n  content?: Resource\n  icon?: Resource;\n  status?: string\n  result: number = -1\n}", "id": "2b57594104e6a35b62eebc87c982d91049086e3687ca700554ff2934bc2fb795", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 3.0, "quality_score": 2.0, "confidence": 0.9, "rationale": "结构清晰，类型定义合理，具备基础学习价值。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 1898, "completion_tokens": 60, "total_tokens": 1958, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 3,\n  \"quality_score\": 2,\n  \"confidence\": 0.9,\n  \"rationale\": \"结构清晰，类型定义合理，具备基础学习价值。\"\n}", "llm_formatted": "export class PermissionInfo {\n  content?: Resource\n  icon?: Resource\n  status?: string\n  result: number = -1\n}", "leaked": true, "text_tokens": 29, "split": "valid"}
{"path": "NetAdaptiveVideoStream~harmonyos_samples~358/entry/src/main/ets/view/VideoPlayControl.ets", "project_name": "NetAdaptiveVideoStream~harmonyos_samples~358", "text": "import { AVPlayerController } from '../viewmodel/AVPlayerController';\n\n@Component\nexport struct VideoPlayControl {\n  @ObjectLink hlsPlayerController: AVPlayerController;\n\n  build() {\n    Image(this.hlsPlayerController.isPlaying ? $r('sys.media.ohos_ic_public_pause') :\n    $r('sys.media.ohos_ic_public_play'))\n      .width($r('app.float.play_switch_width'))\n      .height($r('app.float.play_switch_height'))\n      .fillColor(Color.White)\n      .onClick(() => {\n        if (!this.hlsPlayerController.isPlaying) {\n          this.hlsPlayerController.play();\n        } else {\n          this.hlsPlayerController.pause();\n        }\n      })\n  }\n}", "id": "04f1f03fd4f65a4c363d2a4458095006b26e8ef125fdf08595e3364583e715a2", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 3.0, "confidence": 0.95, "rationale": "结构清晰，符合ArkTS生态，具备实际可迁移的组件逻辑与类型使用。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2019, "completion_tokens": 68, "total_tokens": 2087, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 3,\n  \"confidence\": 0.95,\n  \"rationale\": \"结构清晰，符合ArkTS生态，具备实际可迁移的组件逻辑与类型使用。\"\n}", "llm_formatted": "import { AVPlayerController } from '../viewmodel/AVPlayerController';\n\n@Component\nexport struct VideoPlayControl {\n  @ObjectLink hlsPlayerController: AVPlayerController;\n\n  build() {\n    Image(this.hlsPlayerController.isPlaying ? $r('sys.media.ohos_ic_public_pause') :\n    $r('sys.media.ohos_ic_public_play'))\n      .width($r('app.float.play_switch_width'))\n      .height($r('app.float.play_switch_height'))\n      .fillColor(Color.White)\n      .onClick(() => {\n        if (!this.hlsPlayerController.isPlaying) {\n          this.hlsPlayerController.play();\n        } else {\n          this.hlsPlayerController.pause();\n        }\n      })\n  }\n}", "leaked": true, "text_tokens": 150, "split": "valid"}
{"path": "language-base-class-library~harmonyos_samples~528/feature/capabilities/src/main/ets/components/utilcomponents/Base64Helper.ets", "project_name": "language-base-class-library~harmonyos_samples~528", "text": "import { util } from '@kit.ArkTS';\nimport { customTitle } from '@ohos/common';\n\n@Builder\nexport function Base64HelperBuilder() {\n  Base64Helper()\n}\n\n@Component\nexport struct Base64Helper {\n  @State resultEncode: string = '';\n  @State resultDecode: string = '';\n  @State input: string = 'harmony';\n  @StorageLink('selectedSecondLabel') selectedSecondLabel: string = '';\n  public pathStack: NavPathStack = new NavPathStack();\n\n  build() {\n    NavDestination() {\n      Scroll() {\n        Column({ space: 12 }) {\n          Row() {\n            Text($r('app.string.change_str'))\n              .fontSize(20)\n              .fontWeight(FontWeight.Bold)\n              .textAlign(TextAlign.End)\n\n            Text(this.input)\n              .fontSize(20)\n              .fontWeight(FontWeight.Bold)\n              .textAlign(TextAlign.Start)\n          }\n          .width('100%')\n          .height('10%')\n\n          Text(this.resultEncode)\n            .width('100%')\n            .height('10%')\n            .padding({ left: 10 })\n            .fontSize(20)\n            .fontWeight(FontWeight.Bold)\n            .border({ width: 2, radius: 10, color: Color.Black })\n\n          Button() {\n            Text($r(\"app.string.encode\"))\n              .fontSize(25)\n              .fontColor(Color.White)\n          }\n          .id('encodeBtn')\n          .width('100%')\n          .height(50)\n          .type(ButtonType.Capsule)\n          .onClick(() => {\n            this.encode();\n          })\n\n          Text(this.resultDecode)\n            .width('100%')\n            .height('10%')\n            .fontSize(20)\n            .padding({ left: 10 })\n            .fontWeight(FontWeight.Bold)\n            .border({ width: 2, radius: 10, color: Color.Black })\n            .margin({ top: 50 })\n\n          Button() {\n            Text($r(\"app.string.decode\"))\n              .fontSize(25)\n              .fontColor(Color.White)\n          }\n          .id('decodeBtn')\n          .width('100%')\n          .height(50)\n          .type(ButtonType.Capsule)\n          .onClick(() => {\n            this.decode();\n          })\n        }\n        .width('100%')\n        .padding(16)\n      }\n      .scrollBar(BarState.Off)\n      .align(Alignment.Start)\n    }\n    .title(customTitle(this.selectedSecondLabel))\n    .backgroundColor($r('sys.color.ohos_id_color_sub_background'))\n    .onReady((context: NavDestinationContext) => {\n      this.pathStack = context.pathStack;\n    })\n  }\n\n  encode() {\n    let strToAscii: number[] = [];\n    for (let i = 0;i < this.input.length; i++) {\n      strToAscii.push(this.input.charCodeAt(i));\n    }\n    let that = new util.Base64Helper();\n    let encodeNum = new Uint8Array(strToAscii);\n    this.resultEncode = that.encodeToStringSync(encodeNum);\n  }\n\n  decode() {\n    let that = new util.Base64Helper();\n    if (this.resultEncode === undefined || this.resultEncode === '') {\n      return;\n    }\n    let decodeNum = that.decodeSync(this.resultEncode);\n    this.resultDecode = '';\n    for (let i = 0; i < decodeNum.length; i++) {\n      this.resultDecode += String.fromCharCode(decodeNum[i]);\n    }\n  }\n}", "id": "3a527df316946307e56ad91a62eb6c616f34482996a60b3bb6486db83d7a4b89", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "ArkTS语法规范，生态耦合自然，逻辑完整，具学习价值", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2031, "completion_tokens": 65, "total_tokens": 2096, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"ArkTS语法规范，生态耦合自然，逻辑完整，具学习价值\"\n}", "llm_formatted": "import { util } from '@kit.ArkTS';\nimport { customTitle } from '@ohos/common';\n\n@Builder\nexport function Base64HelperBuilder() {\n  Base64Helper()\n}\n\n@Component\nexport struct Base64Helper {\n  @State resultEncode: string = '';\n  @State resultDecode: string = '';\n  @State input: string = 'harmony';\n  @StorageLink('selectedSecondLabel') selectedSecondLabel: string = '';\n  public pathStack: NavPathStack = new NavPathStack();\n\n  build() {\n    NavDestination() {\n      Scroll() {\n        Column({ space: 12 }) {\n          Row() {\n            Text($r('app.string.change_str'))\n              .fontSize(20)\n              .fontWeight(FontWeight.Bold)\n              .textAlign(TextAlign.End)\n\n            Text(this.input)\n              .fontSize(20)\n              .fontWeight(FontWeight.Bold)\n              .textAlign(TextAlign.Start)\n          }\n          .width('100%')\n          .height('10%')\n\n          Text(this.resultEncode)\n            .width('100%')\n            .height('10%')\n            .padding({ left: 10 })\n            .fontSize(20)\n            .fontWeight(FontWeight.Bold)\n            .border({ width: 2, radius: 10, color: Color.Black })\n\n          Button() {\n            Text($r(\"app.string.encode\"))\n              .fontSize(25)\n              .fontColor(Color.White)\n          }\n          .id('encodeBtn')\n          .width('100%')\n          .height(50)\n          .type(ButtonType.Capsule)\n          .onClick(() => {\n            this.encode();\n          })\n\n          Text(this.resultDecode)\n            .width('100%')\n            .height('10%')\n            .fontSize(20)\n            .padding({ left: 10 })\n            .fontWeight(FontWeight.Bold)\n            .border({ width: 2, radius: 10, color: Color.Black })\n            .margin({ top: 50 })\n\n          Button() {\n            Text($r(\"app.string.decode\"))\n              .fontSize(25)\n              .fontColor(Color.White)\n          }\n          .id('decodeBtn')\n          .width('100%')\n          .height(50)\n          .type(ButtonType.Capsule)\n          .onClick(() => {\n            this.decode();\n          })\n        }\n        .width('100%')\n        .padding(16)\n      }\n      .scrollBar(BarState.Off)\n      .align(Alignment.Start)\n    }\n    .title(customTitle(this.selectedSecondLabel))\n    .backgroundColor($r('sys.color.ohos_id_color_sub_background'))\n    .onReady((context: NavDestinationContext) => {\n      this.pathStack = context.pathStack;\n    })\n  }\n\n  encode() {\n    let strToAscii: number[] = [];\n    for (let i = 0;i < this.input.length; i++) {\n      strToAscii.push(this.input.charCodeAt(i));\n    }\n    let that = new util.Base64Helper();\n    let encodeNum = new Uint8Array(strToAscii);\n    this.resultEncode = that.encodeToStringSync(encodeNum);\n  }\n\n  decode() {\n    let that = new util.Base64Helper();\n    if (this.resultEncode === undefined || this.resultEncode === '') {\n      return;\n    }\n    let decodeNum = that.decodeSync(this.resultEncode);\n    this.resultDecode = '';\n    for (let i = 0; i < decodeNum.length; i++) {\n      this.resultDecode += String.fromCharCode(decodeNum[i]);\n    }\n  }\n}", "leaked": true, "text_tokens": 763, "split": "valid"}
{"path": "xts_acts~openharmony~1331/distributeddatamgr/preferencesjstest/entry/src/ohosTest/js/test/SendablePreferenceErr.test.ets", "project_name": "xts_acts~openharmony~1331", "text": "import { describe, beforeAll, beforeEach, afterEach, afterAll, it, expect, Level, Size, TestType } from \"@ohos/hypium\";\nimport { BusinessError } from '@ohos.base';\nimport sendablePreferences from '@ohos.data.sendablePreferences';\nimport lang from '@arkts.lang';\nimport collections from '@arkts.collections';\nimport AbilityDelegatorRegistry from '@ohos.app.ability.abilityDelegatorRegistry';\n\n\nconst options:sendablePreferences.Options= {name:'test_preferences'}\nconst KEY_NUMBER :string = 'key_test_int';\nconst KEY_LONG = 'key_test_long';\nconst value_long = 3.141592673;\nconst KEY_FLOAT = 'key_test_float';\nconst KEY_BOOLEAN = 'key_test_boolean';\nconst value_boolen = true\nconst KEY_STRING = 'key_test_string';\nconst value_string = '333';\nconst KEY_ARRAY_NUMBER= 'key_test_number_array';\nconst KEY_ARRAY_STRING = 'key_test_string_array';\nconst KEY_ARRAY_BOOL = 'key_test_bool_array';\nconst KEY_BIGINT = 'test_bigint';\nconst value_bigint = 4156329815655;\nlet mPreferences:sendablePreferences.Preferences;\nconst delegator = AbilityDelegatorRegistry.getAbilityDelegator();\nconst context = delegator.getAppContext().getApplicationContext();\nconst TAG = ['testlog']\n\nexport default function sendablePreferencesErrTest() {\n  describe('sendablePreferencesErrTest', () => {\n    beforeAll(async () => {\n      console.info('beforeAll');\n\n    });\n    afterAll(async () => {\n      console.info('afterAll');\n    });\n    beforeEach(async () => {\n      console.info('beforeEach');\n      mPreferences = await sendablePreferences.getPreferences(context, options);\n      await mPreferences.clear();\n    });\n    afterEach(async () => {\n      console.info('afterEach');\n      await sendablePreferences.removePreferencesFromCache(context, options)\n      await sendablePreferences.deletePreferences(context, options);\n    });\n\n\n    /**\n     * @tc.name testSendablePreferencesgetpreferenceErr0100\n     * @tc.number SUB_DistributedData_SendablePreference_SDK_PreferenceEtsApiPromiseErrTest_0100\n     * @tc.desc put PutNumber promise interface test\n     * @tc.size MediumTest\n     * @tc.type Function\n     * @tc.level Level 2\n     */\n\n      it('testSendablePreferencesgetpreferenceErr0100', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, async (done: Function) => {\n      try {\n        const options = {\n            name: 'test_preferences',\n            dataGroupId: \"123456\"\n        }\n        mPreferences = await sendablePreferences.getPreferences(context, options);\n        expect().assertFail();\n        done();\n      } catch(err) {\n        onsole.info('getPreferencesSync is fail' + err.code);\n        expect('15501001').assertEqual(err.code);\n        done();\n        }\n\n    })\n\n\n\n\n    /**\n     * @tc.name testSendablePreferencesgetpreferencesyncErr0100\n     * @tc.number SUB_DistributedData_SendablePreference_SDK_PreferenceEtsApiPromiseErrTest_0200\n     * @tc.desc put PutNumber promise interface test\n     * @tc.size MediumTest\n     * @tc.type Function\n     * @tc.level Level 2\n     */\n\n      it('testSendablePreferencesgetpreferencesyncErr0100', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, async (done: Function) => {\n      try {\n        const options = {\n            name: 'test_preferences',\n            dataGroupId: \"123456\"\n        }\n        mPreferences = await sendablePreferences.getPreferencesSync(context, options);\n        expect().assertFail();\n        done();\n      } catch(err) {\n        onsole.info('getPreferencesSync is fail' + err.code);\n        expect('15501001').assertEqual(err.code);\n        done();\n        }\n\n    })\n\n\n\n    /**\n     * @tc.name testSendablePreferencesdeletePreferencesErr0100\n     * @tc.number SUB_DistributedData_SendablePreference_SDK_PreferenceEtsApiPromiseErrTest_0300\n     * @tc.desc put PutNumber promise interface test\n     * @tc.size MediumTest\n     * @tc.type Function\n     * @tc.level Level 2\n     */\n\n      it('testSendablePreferencesdeletePreferencesErr0100', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, async (done: Function) => {\n      try {\n        const options = {\n            name: 'test_preferences',\n            dataGroupId: \"123456\"\n        }\n        mPreferences = await sendablePreferences.deletePreferences(context, options);\n        expect().assertFail();\n        done();\n      } catch(err) {\n        onsole.info('getPreferencesSync is fail' + err.code);\n        expect('15501001').assertEqual(err.code);\n        done();\n        }\n\n    })\n\n\n\n    /**\n     * @tc.name testSendablePreferencesremovePreferencesFromCacheErr0100\n     * @tc.number SUB_DistributedData_SendablePreference_SDK_PreferenceEtsApiPromiseErrTest_0400\n     * @tc.desc put PutNumber promise interface test\n     * @tc.size MediumTest\n     * @tc.type Function\n     * @tc.level Level 2\n     */\n\n      it('testSendablePreferencesremovePreferencesFromCacheErr0100', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, async (done: Function) => {\n      try {\n        const options = {\n            name: 'test_preferences',\n            dataGroupId: \"123456\"\n        }\n        mPreferences = await sendablePreferences.removePreferencesFromCache(context, options);\n        expect().assertFail();\n        done();\n      } catch(err) {\n        onsole.info('getPreferencesSync is fail' + err.code);\n        expect('15501001').assertEqual(err.code);\n        done();\n        }\n\n    })\n\n\n\n    /**\n     * @tc.name testSendablePreferencesremovePreferencesFromCacheSyncErr0100\n     * @tc.number SUB_DistributedData_SendablePreference_SDK_PreferenceEtsApiPromiseErrTest_0500\n     * @tc.desc put PutNumber promise interface test\n     * @tc.size MediumTest\n     * @tc.type Function\n     * @tc.level Level 2\n     */\n\n      it('testSendablePreferencesremovePreferencesFromCacheSyncErr0100', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, async (done: Function) => {\n      try {\n        const options = {\n            name: 'test_preferences',\n            dataGroupId: \"123456\"\n        }\n        mPreferences = await sendablePreferences.removePreferencesFromCacheSync(context, options);\n        expect().assertFail();\n        done();\n      } catch(err) {\n        onsole.info('getPreferencesSync is fail' + err.code);\n        expect('15501001').assertEqual(err.code);\n        done();\n        }\n\n    })\n\n\n\n    /**\n        * @tc.name testPreferencesRemovePreferencesFromCachePromiserr0100\n        * @tc.number SUB_DistributedData_SendablePreference_SDK_PreferenceEtsApiPromiseErrTest_0600\n        * @tc.desc put PutNumber promise interface test\n        * @tc.size MediumTest\n        * @tc.type Function\n        * @tc.level Level 2\n        */\n\n        it('testPreferencesRemovePreferencesFromCachePromiserr0100', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, async (done: Function) => {\n        try {\n            const options = {\n                name: 'test_preferences',\n                dataGroupId: \"123456\",\n                storageType:GSKV\n            }\n            const options1 = {\n                name: 'test_preferences',\n                dataGroupId: \"123456\",\n                storageType:XML\n            }\n            await mPreferences removePreferencesFromCache(context, options);\n            await mPreferences removePreferencesFromCache(context, options1);\n            expect().assertFail();\n            done();\n        } catch(err) {\n            onsole.info('removePreferencesFromCache is fail' + err.code);\n            expect(801).assertEqual(err.code);\n            done();\n            }\n\n        })\n\n\n\n\n        /**\n        * @tc.name testPreferencesRemovePreferencesFromCacheSyncErr0100\n        * @tc.number SUB_DistributedData_SendablePreference_SDK_PreferenceEtsApiPromiseErrTest_0700\n        * @tc.desc put PutNumber promise interface test\n        * @tc.size MediumTest\n        * @tc.type Function\n        * @tc.level Level 2\n        */\n\n        it('testPreferencesRemovePreferencesFromCacheSyncErr0100', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, async (done: Function) => {\n        try {\n            const options = {\n                name: 'test_preferences',\n                dataGroupId: \"123456\",\n                storageType:GSKV\n            }\n            const options1 = {\n                name: 'test_preferences',\n                dataGroupId: \"123456\",\n                storageType:XML\n            }\n            await mPreferences removePreferencesFromCacheSync(context, options);\n            await mPreferences removePreferencesFromCacheSync(context, options1);\n            expect().assertFail();\n            done();\n        } catch(err) {\n            onsole.info('getPreferencesSync is fail' + err.code);\n            expect(801).assertEqual(err.code);\n            done();\n            }\n        })\n\n\n\n\n\n        /**\n        * @tc.name testSendablePreferencesDeletePreferencesPromiseErr0100\n        * @tc.number SUB_DistributedData_SendablePreference_SDK_PreferenceEtsApiPromiseErrTest_0800\n        * @tc.desc put PutNumber promise interface test\n        * @tc.size MediumTest\n        * @tc.type Function\n        * @tc.level Level 2\n        */\n\n        it('testSendablePreferencesDeletePreferencesPromiseErr0100', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, async (done: Function) => {\n        try {\n            const options = {\n                name: 'test_preferences',\n                dataGroupId: \"123456\",\n                storageType:GSKV\n            }\n            const options1 = {\n                name: 'test_preferences',\n                dataGroupId: \"123456\",\n                storageType:XML\n            }\n            await mPreferences deletePreferences(context, options);\n            await mPreferences deletePreferences(context, options1);\n            expect().assertFail();\n            done();\n        } catch(err) {\n            onsole.info('getPreferencesSync is fail' + err.code);\n            expect(801).assertEqual(err.code);\n            done();\n            }\n        })\n\n\n\n\n\n        /**\n        * @tc.name testSendablePreferencesgetPreferencesSyncErr0100\n        * @tc.number SUB_DistributedData_SendablePreference_SDK_PreferenceEtsApiPromiseErrTest_0900\n        * @tc.desc put PutNumber promise interface test\n        * @tc.size MediumTest\n        * @tc.type Function\n        * @tc.level Level 2\n        */\n\n        it('testSendablePreferencesgetPreferencesSyncErr0100', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, async (done: Function) => {\n        try {\n            const options = {\n                name: 'test_preferences',\n                dataGroupId: \"123456\",\n                storageType:GSKV\n            }\n            const options1 = {\n                name: 'test_preferences',\n                dataGroupId: \"123456\",\n                storageType:XML\n            }\n            await mPreferences getPreferencesSync(context, options);\n            await mPreferences getPreferencesSync(context, options1);\n            expect().assertFail();\n            done();\n        } catch(err) {\n            onsole.info('getPreferencesSync is fail' + err.code);\n            expect(801).assertEqual(err.code);\n            done();\n            }\n        })\n\n\n\n\n\n        /**\n        * @tc.name testSendablePreferencesgetPreferencesPromiseErr0100\n        * @tc.number SUB_DistributedData_SendablePreference_SDK_PreferenceEtsApiPromiseErrTest_1000\n        * @tc.desc put PutNumber promise interface test\n        * @tc.size MediumTest\n        * @tc.type Function\n        * @tc.level Level 2\n        */\n\n        it('testSendablePreferencesgetPreferencesPromiseErr0100', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, async (done: Function) => {\n        try {\n            const options = {\n                name: 'test_preferences',\n                dataGroupId: \"123456\",\n                storageType:GSKV\n            }\n            const options1 = {\n                name: 'test_preferences',\n                dataGroupId: \"123456\",\n                storageType:XML\n            }\n            await mPreferences getPreferences(context, options);\n            await mPreferences getPreferences(context, options1);\n            expect().assertFail();\n            done();\n        } catch(err) {\n            onsole.info('getPreferencesSync is fail' + err.code);\n            expect(801).assertEqual(err.code);\n            done();\n            }\n\n        })\n\n\n  })\n}", "id": "5f6e645a4871cf7fb75cd1e9362901fc8a3479dbe2892d1471d9531b72be3dff", "replica": 1, "decision": "KEEP_WITH_TAG", "labels": ["TOY_OR_TUTORIAL_FRAGMENT"], "arkts_score": 4.0, "quality_score": 3.0, "confidence": 0.85, "rationale": "单测代码结构清晰，涉及OpenHarmony生态API调用，具备一定学习价值。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 4752, "completion_tokens": 79, "total_tokens": 4831, "raw_response": "{\n  \"decision\": \"KEEP_WITH_TAG\",\n  \"labels\": [\"TOY_OR_TUTORIAL_FRAGMENT\"],\n  \"arkts_score\": 4,\n  \"quality_score\": 3,\n  \"confidence\": 0.85,\n  \"rationale\": \"单测代码结构清晰，涉及OpenHarmony生态API调用，具备一定学习价值。\"\n}", "llm_formatted": "import { describe, beforeAll, beforeEach, afterEach, afterAll, it, expect, Level, Size, TestType } from \"@ohos/hypium\";\nimport { BusinessError } from '@ohos.base';\nimport sendablePreferences from '@ohos.data.sendablePreferences';\nimport lang from '@arkts.lang';\nimport collections from '@arkts.collections';\nimport AbilityDelegatorRegistry from '@ohos.app.ability.abilityDelegatorRegistry';\n\n\nconst options:sendablePreferences.Options= {name:'test_preferences'}\nconst KEY_NUMBER :string = 'key_test_int';\nconst KEY_LONG = 'key_test_long';\nconst value_long = 3.141592673;\nconst KEY_FLOAT = 'key_test_float';\nconst KEY_BOOLEAN = 'key_test_boolean';\nconst value_boolen = true\nconst KEY_STRING = 'key_test_string';\nconst value_string = '333';\nconst KEY_ARRAY_NUMBER= 'key_test_number_array';\nconst KEY_ARRAY_STRING = 'key_test_string_array';\nconst KEY_ARRAY_BOOL = 'key_test_bool_array';\nconst KEY_BIGINT = 'test_bigint';\nconst value_bigint = 4156329815655;\nlet mPreferences:sendablePreferences.Preferences;\nconst delegator = AbilityDelegatorRegistry.getAbilityDelegator();\nconst context = delegator.getAppContext().getApplicationContext();\nconst TAG = ['testlog']\n\nexport default function sendablePreferencesErrTest() {\n  describe('sendablePreferencesErrTest', () => {\n    beforeAll(async () => {\n      console.info('beforeAll');\n\n    });\n    afterAll(async () => {\n      console.info('afterAll');\n    });\n    beforeEach(async () => {\n      console.info('beforeEach');\n      mPreferences = await sendablePreferences.getPreferences(context, options);\n      await mPreferences.clear();\n    });\n    afterEach(async () => {\n      console.info('afterEach');\n      await sendablePreferences.removePreferencesFromCache(context, options)\n      await sendablePreferences.deletePreferences(context, options);\n    });\n\n\n    /**\n     * @tc.name testSendablePreferencesgetpreferenceErr0100\n     * @tc.number SUB_DistributedData_SendablePreference_SDK_PreferenceEtsApiPromiseErrTest_0100\n     * @tc.desc put PutNumber promise interface test\n     * @tc.size MediumTest\n     * @tc.type Function\n     * @tc.level Level 2\n     */\n\n      it('testSendablePreferencesgetpreferenceErr0100', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, async (done: Function) => {\n      try {\n        const options = {\n            name: 'test_preferences',\n            dataGroupId: \"123456\"\n        }\n        mPreferences = await sendablePreferences.getPreferences(context, options);\n        expect().assertFail();\n        done();\n      } catch(err) {\n        onsole.info('getPreferencesSync is fail' + err.code);\n        expect('15501001').assertEqual(err.code);\n        done();\n        }\n\n    })\n\n\n\n\n    /**\n     * @tc.name testSendablePreferencesgetpreferencesyncErr0100\n     * @tc.number SUB_DistributedData_SendablePreference_SDK_PreferenceEtsApiPromiseErrTest_0200\n     * @tc.desc put PutNumber promise interface test\n     * @tc.size MediumTest\n     * @tc.type Function\n     * @tc.level Level 2\n     */\n\n      it('testSendablePreferencesgetpreferencesyncErr0100', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, async (done: Function) => {\n      try {\n        const options = {\n            name: 'test_preferences',\n            dataGroupId: \"123456\"\n        }\n        mPreferences = await sendablePreferences.getPreferencesSync(context, options);\n        expect().assertFail();\n        done();\n      } catch(err) {\n        onsole.info('getPreferencesSync is fail' + err.code);\n        expect('15501001').assertEqual(err.code);\n        done();\n        }\n\n    })\n\n\n\n    /**\n     * @tc.name testSendablePreferencesdeletePreferencesErr0100\n     * @tc.number SUB_DistributedData_SendablePreference_SDK_PreferenceEtsApiPromiseErrTest_0300\n     * @tc.desc put PutNumber promise interface test\n     * @tc.size MediumTest\n     * @tc.type Function\n     * @tc.level Level 2\n     */\n\n      it('testSendablePreferencesdeletePreferencesErr0100', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, async (done: Function) => {\n      try {\n        const options = {\n            name: 'test_preferences',\n            dataGroupId: \"123456\"\n        }\n        mPreferences = await sendablePreferences.deletePreferences(context, options);\n        expect().assertFail();\n        done();\n      } catch(err) {\n        onsole.info('getPreferencesSync is fail' + err.code);\n        expect('15501001').assertEqual(err.code);\n        done();\n        }\n\n    })\n\n\n\n    /**\n     * @tc.name testSendablePreferencesremovePreferencesFromCacheErr0100\n     * @tc.number SUB_DistributedData_SendablePreference_SDK_PreferenceEtsApiPromiseErrTest_0400\n     * @tc.desc put PutNumber promise interface test\n     * @tc.size MediumTest\n     * @tc.type Function\n     * @tc.level Level 2\n     */\n\n      it('testSendablePreferencesremovePreferencesFromCacheErr0100', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, async (done: Function) => {\n      try {\n        const options = {\n            name: 'test_preferences',\n            dataGroupId: \"123456\"\n        }\n        mPreferences = await sendablePreferences.removePreferencesFromCache(context, options);\n        expect().assertFail();\n        done();\n      } catch(err) {\n        onsole.info('getPreferencesSync is fail' + err.code);\n        expect('15501001').assertEqual(err.code);\n        done();\n        }\n\n    })\n\n\n\n    /**\n     * @tc.name testSendablePreferencesremovePreferencesFromCacheSyncErr0100\n     * @tc.number SUB_DistributedData_SendablePreference_SDK_PreferenceEtsApiPromiseErrTest_0500\n     * @tc.desc put PutNumber promise interface test\n     * @tc.size MediumTest\n     * @tc.type Function\n     * @tc.level Level 2\n     */\n\n      it('testSendablePreferencesremovePreferencesFromCacheSyncErr0100', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, async (done: Function) => {\n      try {\n        const options = {\n            name: 'test_preferences',\n            dataGroupId: \"123456\"\n        }\n        mPreferences = await sendablePreferences.removePreferencesFromCacheSync(context, options);\n        expect().assertFail();\n        done();\n      } catch(err) {\n        onsole.info('getPreferencesSync is fail' + err.code);\n        expect('15501001').assertEqual(err.code);\n        done();\n        }\n\n    })\n\n\n\n    /**\n        * @tc.name testPreferencesRemovePreferencesFromCachePromiserr0100\n        * @tc.number SUB_DistributedData_SendablePreference_SDK_PreferenceEtsApiPromiseErrTest_0600\n        * @tc.desc put PutNumber promise interface test\n        * @tc.size MediumTest\n        * @tc.type Function\n        * @tc.level Level 2\n        */\n\n        it('testPreferencesRemovePreferencesFromCachePromiserr0100', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, async (done: Function) => {\n        try {\n            const options = {\n                name: 'test_preferences',\n                dataGroupId: \"123456\",\n                storageType:GSKV\n            }\n            const options1 = {\n                name: 'test_preferences',\n                dataGroupId: \"123456\",\n                storageType:XML\n            }\n            await mPreferences removePreferencesFromCache(context, options);\n            await mPreferences removePreferencesFromCache(context, options1);\n            expect().assertFail();\n            done();\n        } catch(err) {\n            onsole.info('removePreferencesFromCache is fail' + err.code);\n            expect(801).assertEqual(err.code);\n            done();\n            }\n\n        })\n\n\n\n\n        /**\n        * @tc.name testPreferencesRemovePreferencesFromCacheSyncErr0100\n        * @tc.number SUB_DistributedData_SendablePreference_SDK_PreferenceEtsApiPromiseErrTest_0700\n        * @tc.desc put PutNumber promise interface test\n        * @tc.size MediumTest\n        * @tc.type Function\n        * @tc.level Level 2\n        */\n\n        it('testPreferencesRemovePreferencesFromCacheSyncErr0100', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, async (done: Function) => {\n        try {\n            const options = {\n                name: 'test_preferences',\n                dataGroupId: \"123456\",\n                storageType:GSKV\n            }\n            const options1 = {\n                name: 'test_preferences',\n                dataGroupId: \"123456\",\n                storageType:XML\n            }\n            await mPreferences removePreferencesFromCacheSync(context, options);\n            await mPreferences removePreferencesFromCacheSync(context, options1);\n            expect().assertFail();\n            done();\n        } catch(err) {\n            onsole.info('getPreferencesSync is fail' + err.code);\n            expect(801).assertEqual(err.code);\n            done();\n            }\n        })\n\n\n\n\n\n        /**\n        * @tc.name testSendablePreferencesDeletePreferencesPromiseErr0100\n        * @tc.number SUB_DistributedData_SendablePreference_SDK_PreferenceEtsApiPromiseErrTest_0800\n        * @tc.desc put PutNumber promise interface test\n        * @tc.size MediumTest\n        * @tc.type Function\n        * @tc.level Level 2\n        */\n\n        it('testSendablePreferencesDeletePreferencesPromiseErr0100', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, async (done: Function) => {\n        try {\n            const options = {\n                name: 'test_preferences',\n                dataGroupId: \"123456\",\n                storageType:GSKV\n            }\n            const options1 = {\n                name: 'test_preferences',\n                dataGroupId: \"123456\",\n                storageType:XML\n            }\n            await mPreferences deletePreferences(context, options);\n            await mPreferences deletePreferences(context, options1);\n            expect().assertFail();\n            done();\n        } catch(err) {\n            onsole.info('getPreferencesSync is fail' + err.code);\n            expect(801).assertEqual(err.code);\n            done();\n            }\n        })\n\n\n\n\n\n        /**\n        * @tc.name testSendablePreferencesgetPreferencesSyncErr0100\n        * @tc.number SUB_DistributedData_SendablePreference_SDK_PreferenceEtsApiPromiseErrTest_0900\n        * @tc.desc put PutNumber promise interface test\n        * @tc.size MediumTest\n        * @tc.type Function\n        * @tc.level Level 2\n        */\n\n        it('testSendablePreferencesgetPreferencesSyncErr0100', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, async (done: Function) => {\n        try {\n            const options = {\n                name: 'test_preferences',\n                dataGroupId: \"123456\",\n                storageType:GSKV\n            }\n            const options1 = {\n                name: 'test_preferences',\n                dataGroupId: \"123456\",\n                storageType:XML\n            }\n            await mPreferences getPreferencesSync(context, options);\n            await mPreferences getPreferencesSync(context, options1);\n            expect().assertFail();\n            done();\n        } catch(err) {\n            onsole.info('getPreferencesSync is fail' + err.code);\n            expect(801).assertEqual(err.code);\n            done();\n            }\n        })\n\n\n\n\n\n        /**\n        * @tc.name testSendablePreferencesgetPreferencesPromiseErr0100\n        * @tc.number SUB_DistributedData_SendablePreference_SDK_PreferenceEtsApiPromiseErrTest_1000\n        * @tc.desc put PutNumber promise interface test\n        * @tc.size MediumTest\n        * @tc.type Function\n        * @tc.level Level 2\n        */\n\n        it('testSendablePreferencesgetPreferencesPromiseErr0100', TestType.FUNCTION | Size.MEDIUMTEST | Level.LEVEL2, async (done: Function) => {\n        try {\n            const options = {\n                name: 'test_preferences',\n                dataGroupId: \"123456\",\n                storageType:GSKV\n            }\n            const options1 = {\n                name: 'test_preferences',\n                dataGroupId: \"123456\",\n                storageType:XML\n            }\n            await mPreferences getPreferences(context, options);\n            await mPreferences getPreferences(context, options1);\n            expect().assertFail();\n            done();\n        } catch(err) {\n            onsole.info('getPreferencesSync is fail' + err.code);\n            expect(801).assertEqual(err.code);\n            done();\n            }\n\n        })\n\n\n  })\n}", "leaked": true, "text_tokens": 2883, "split": "valid"}
{"path": "upload-and-down-load~harmonyos_samples~460/features/uploadanddownload/src/main/ets/components/FileBrowse.ets", "project_name": "upload-and-down-load~harmonyos_samples~460", "text": "import { fileUtils } from '../utils/FileUtils';\n\n@Preview\n@Component\nexport struct FileBrowse {\n  @StorageLink('files') files: Array<string> = [];\n  @StorageLink('currentFolder') currentFolder: string = '';\n  @StorageLink('pathStack') pathStack: NavPathStack = new NavPathStack();\n  @State folders: Array<string> = ['folder'];\n\n  aboutToAppear() {\n    fileUtils.listFolders()\n      .then((folders: Array<string>) => {\n      this.folders = folders;\n    })\n  }\n\n  build() {\n    Navigation(this.pathStack) {\n      List({ space: 12 }) {\n        ForEach(this.folders, (item: string) => {\n          ListItem() {\n              Row() {\n                Image($r('app.media.ic_files_folder'))\n                  .size({ width: 32, height: 26 })\n                  .objectFit(ImageFit.Contain)\n                Text(item)\n                  .fontSize(16)\n                  .width('100%')\n                  .margin({ left: 12 })\n              }\n              .height(56)\n              .padding({ left: 16 })\n              .backgroundColor(Color.White)\n              .borderRadius(24)\n              .onClick(async () => {\n                this.currentFolder = item;\n                this.files = await fileUtils.listFiles(item);\n                this.pathStack.pushPathByName('FilesDetailView', null, null);\n              })\n          }\n        }, (item: string, index: number) => index + item)\n      }\n      .padding({ left: 12, right: 12 })\n    }\n    .hideBackButton(false)\n    .titleMode(NavigationTitleMode.Mini)\n    .title($r('app.string.download_files_title'))\n    .mode(NavigationMode.Stack)\n    .backgroundColor($r('app.color.light_gray'))\n  }\n\n  @Builder\n  CustomTitle(title: string) {\n    Row() {\n      Text(title)\n        .fontSize(20)\n        .fontColor($r('app.color.text_normal'))\n        .fontWeight(700)\n        .margin({ left: 8 })\n    }\n    .width('100%')\n  }\n\n  @Builder\n  FilesView() {\n    Column() {\n      List({ space: 12 }) {\n        if (this.files.length === 0) {\n          ListItem() {\n            Text($r('app.string.folder_empty'))\n              .fontSize(16)\n              .width('100%')\n              .margin({ top: 50 })\n              .textAlign(TextAlign.Center)\n          }\n        }\n        ForEach(this.files, (item: string) => {\n          ListItem() {\n            Text(decodeURIComponent(item))\n              .fontSize(16)\n              .width('100%')\n          }\n          .padding(12)\n          .height(48)\n          .backgroundColor(Color.White)\n          .borderRadius(24)\n        }, (item: string, index: number) => index + item)\n      }\n      .padding({ left: 12, right: 12 })\n      .layoutWeight(1)\n\n      Column() {\n        Button() {\n          Image($r('app.media.ic_public_delete'))\n            .objectFit(ImageFit.Cover)\n            .size({ width: 24, height: 24 })\n        }\n        .type(ButtonType.Circle)\n        .width(40)\n        .height(40)\n        .backgroundColor('#FF0000')\n        .margin({ left: 5 })\n\n        Text($r('app.string.clear_folder'))\n          .fontSize(14)\n          .fontColor($r('app.color.text_normal'))\n          .opacity(0.6)\n          .margin({ top: 8 })\n      }\n      .margin({ bottom: 24, top: 6 })\n      .onClick(() => {\n        fileUtils.clearFolder(this.currentFolder);\n        this.files = [];\n      })\n    }\n    .height('100%')\n    .backgroundColor($r('app.color.light_gray'))\n  }\n}", "id": "1d6c1a69519389542f2ada81ee2c1b58b00fe3cae0e16e8fd331a5f78c4057b1", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "ArkTS语法规范，生态耦合自然，结构清晰，具学习价值", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2116, "completion_tokens": 69, "total_tokens": 2185, "raw_response": "```json\n{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"ArkTS语法规范，生态耦合自然，结构清晰，具学习价值\"\n}\n```", "llm_formatted": "import { fileUtils } from '../utils/FileUtils';\n\n@Preview\n@Component\nexport struct FileBrowse {\n  @StorageLink('files') files: Array<string> = [];\n  @StorageLink('currentFolder') currentFolder: string = '';\n  @StorageLink('pathStack') pathStack: NavPathStack = new NavPathStack();\n  @State folders: Array<string> = ['folder'];\n\n  aboutToAppear() {\n    fileUtils.listFolders()\n      .then((folders: Array<string>) => {\n      this.folders = folders;\n    })\n  }\n\n  build() {\n    Navigation(this.pathStack) {\n      List({ space: 12 }) {\n        ForEach(this.folders, (item: string) => {\n          ListItem() {\n              Row() {\n                Image($r('app.media.ic_files_folder'))\n                  .size({ width: 32, height: 26 })\n                  .objectFit(ImageFit.Contain)\n                Text(item)\n                  .fontSize(16)\n                  .width('100%')\n                  .margin({ left: 12 })\n              }\n              .height(56)\n              .padding({ left: 16 })\n              .backgroundColor(Color.White)\n              .borderRadius(24)\n              .onClick(async () => {\n                this.currentFolder = item;\n                this.files = await fileUtils.listFiles(item);\n                this.pathStack.pushPathByName('FilesDetailView', null, null);\n              })\n          }\n        }, (item: string, index: number) => index + item)\n      }\n      .padding({ left: 12, right: 12 })\n    }\n    .hideBackButton(false)\n    .titleMode(NavigationTitleMode.Mini)\n    .title($r('app.string.download_files_title'))\n    .mode(NavigationMode.Stack)\n    .backgroundColor($r('app.color.light_gray'))\n  }\n\n  @Builder\n  CustomTitle(title: string) {\n    Row() {\n      Text(title)\n        .fontSize(20)\n        .fontColor($r('app.color.text_normal'))\n        .fontWeight(700)\n        .margin({ left: 8 })\n    }\n    .width('100%')\n  }\n\n  @Builder\n  FilesView() {\n    Column() {\n      List({ space: 12 }) {\n        if (this.files.length === 0) {\n          ListItem() {\n            Text($r('app.string.folder_empty'))\n              .fontSize(16)\n              .width('100%')\n              .margin({ top: 50 })\n              .textAlign(TextAlign.Center)\n          }\n        }\n        ForEach(this.files, (item: string) => {\n          ListItem() {\n            Text(decodeURIComponent(item))\n              .fontSize(16)\n              .width('100%')\n          }\n          .padding(12)\n          .height(48)\n          .backgroundColor(Color.White)\n          .borderRadius(24)\n        }, (item: string, index: number) => index + item)\n      }\n      .padding({ left: 12, right: 12 })\n      .layoutWeight(1)\n\n      Column() {\n        Button() {\n          Image($r('app.media.ic_public_delete'))\n            .objectFit(ImageFit.Cover)\n            .size({ width: 24, height: 24 })\n        }\n        .type(ButtonType.Circle)\n        .width(40)\n        .height(40)\n        .backgroundColor('#FF0000')\n        .margin({ left: 5 })\n\n        Text($r('app.string.clear_folder'))\n          .fontSize(14)\n          .fontColor($r('app.color.text_normal'))\n          .opacity(0.6)\n          .margin({ top: 8 })\n      }\n      .margin({ bottom: 24, top: 6 })\n      .onClick(() => {\n        fileUtils.clearFolder(this.currentFolder);\n        this.files = [];\n      })\n    }\n    .height('100%')\n    .backgroundColor($r('app.color.light_gray'))\n  }\n}", "leaked": true, "text_tokens": 848, "split": "valid"}
{"path": "flutter_packages~openharmony-sig~1444/packages/video_player/video_player_ohos/ohos/src/main/ets/components/videoplayer/VideoPlayerApiCodec.ets", "project_name": "flutter_packages~openharmony-sig~1444", "text": "// Copyright (c) 2023 Hunan OpenValley Digital Industry Development Co., Ltd.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE_ODID file.\n\nimport StandardMessageCodec from '@ohos/flutter_ohos/src/main/ets/plugin/common/StandardMessageCodec';\nimport { CreateMessage, LoopingMessage, MixWithOthersMessage, PlaybackSpeedMessage, PositionMessage,\n  TextureMessage,\n  VolumeMessage\n} from './Messages';\nimport { ByteBuffer } from '@ohos/flutter_ohos/src/main/ets/util/ByteBuffer';\nimport Log from '@ohos/flutter_ohos/src/main/ets/util/Log';\n\nconst TAG = \"VideoPlayerApiCodec\";\n\nexport class VideoPlayerApiCodec extends StandardMessageCodec {\n  public static INSTANCE = new VideoPlayerApiCodec();\n\n  readValueOfType(type: number, buffer: ByteBuffer): ESObject {\n    switch (type) {\n      case 128:\n        let res0 =  CreateMessage.fromList(super.readValue(buffer) as Array<ESObject>);\n        return res0;\n      case 129:\n        let res1 =  LoopingMessage.fromList(super.readValue(buffer) as Array<ESObject>);\n        return res1;\n      case 130:\n        let res2 =  MixWithOthersMessage.fromList(super.readValue(buffer) as Array<ESObject>);\n        return res2;\n      case 131:\n        let res3 =  PlaybackSpeedMessage.fromList(super.readValue(buffer) as Array<ESObject>);\n        return res3;\n      case 132:\n        let res4 =  PositionMessage.fromList(super.readValue(buffer) as Array<ESObject>);\n        return res4;\n      case 133:\n        let res5 =  TextureMessage.fromList(super.readValue(buffer) as Array<ESObject>);\n        return res5;\n      case 134:\n        let res6 =  VolumeMessage.fromList(super.readValue(buffer) as Array<ESObject>);\n        return res6;\n      default:\n        let res7: ESObject = super.readValueOfType(type, buffer);\n        return res7;\n    }\n  }\n\n  writeValue(stream: ByteBuffer, value: ESObject): ESObject {\n    if (value instanceof CreateMessage) {\n      stream.writeInt8(-128);\n      return this.writeValue(stream, (value as CreateMessage).toList());\n    } else if (value instanceof LoopingMessage) {\n      stream.writeInt8(-127);\n      return this.writeValue(stream, (value as LoopingMessage).toList());\n    } else if (value instanceof MixWithOthersMessage) {\n      stream.writeInt8(-126);\n      return this.writeValue(stream, (value as MixWithOthersMessage).toList());\n    } else if (value instanceof PlaybackSpeedMessage) {\n      stream.writeInt8(-125);\n      return this.writeValue(stream, (value as PlaybackSpeedMessage).toList());\n    } else if (value instanceof PositionMessage) {\n      stream.writeInt8(-124);\n      return this.writeValue(stream, (value as PositionMessage).toList());\n    } else if (value instanceof TextureMessage) {\n      stream.writeInt8(-123);\n      return this.writeValue(stream, (value as TextureMessage).toList());\n    } else if (value instanceof VolumeMessage) {\n      stream.writeInt8(-122);\n      return this.writeValue(stream, (value as VolumeMessage).toList());\n    } else {\n      return super.writeValue(stream, value);\n    }\n  }\n}", "id": "60a9fa9b460ee045db36c1711d1019e73a9f179fc645534c123728d5112b44f6", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "ArkTS语法规范，生态耦合自然，类型与逻辑清晰，具备较高学习价值", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 1994, "completion_tokens": 68, "total_tokens": 2062, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"ArkTS语法规范，生态耦合自然，类型与逻辑清晰，具备较高学习价值\"\n}", "llm_formatted": "// Copyright (c) 2023 Hunan OpenValley Digital Industry Development Co., Ltd.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE_ODID file.\n\nimport StandardMessageCodec from '@ohos/flutter_ohos/src/main/ets/plugin/common/StandardMessageCodec';\nimport { CreateMessage, LoopingMessage, MixWithOthersMessage, PlaybackSpeedMessage, PositionMessage,\n  TextureMessage,\n  VolumeMessage\n} from './Messages';\nimport { ByteBuffer } from '@ohos/flutter_ohos/src/main/ets/util/ByteBuffer';\nimport Log from '@ohos/flutter_ohos/src/main/ets/util/Log';\n\nconst TAG = \"VideoPlayerApiCodec\";\n\nexport class VideoPlayerApiCodec extends StandardMessageCodec {\n  public static INSTANCE = new VideoPlayerApiCodec();\n\n  readValueOfType(type: number, buffer: ByteBuffer): ESObject {\n    switch (type) {\n      case 128:\n        let res0 =  CreateMessage.fromList(super.readValue(buffer) as Array<ESObject>);\n        return res0;\n      case 129:\n        let res1 =  LoopingMessage.fromList(super.readValue(buffer) as Array<ESObject>);\n        return res1;\n      case 130:\n        let res2 =  MixWithOthersMessage.fromList(super.readValue(buffer) as Array<ESObject>);\n        return res2;\n      case 131:\n        let res3 =  PlaybackSpeedMessage.fromList(super.readValue(buffer) as Array<ESObject>);\n        return res3;\n      case 132:\n        let res4 =  PositionMessage.fromList(super.readValue(buffer) as Array<ESObject>);\n        return res4;\n      case 133:\n        let res5 =  TextureMessage.fromList(super.readValue(buffer) as Array<ESObject>);\n        return res5;\n      case 134:\n        let res6 =  VolumeMessage.fromList(super.readValue(buffer) as Array<ESObject>);\n        return res6;\n      default:\n        let res7: ESObject = super.readValueOfType(type, buffer);\n        return res7;\n    }\n  }\n\n  writeValue(stream: ByteBuffer, value: ESObject): ESObject {\n    if (value instanceof CreateMessage) {\n      stream.writeInt8(-128);\n      return this.writeValue(stream, (value as CreateMessage).toList());\n    } else if (value instanceof LoopingMessage) {\n      stream.writeInt8(-127);\n      return this.writeValue(stream, (value as LoopingMessage).toList());\n    } else if (value instanceof MixWithOthersMessage) {\n      stream.writeInt8(-126);\n      return this.writeValue(stream, (value as MixWithOthersMessage).toList());\n    } else if (value instanceof PlaybackSpeedMessage) {\n      stream.writeInt8(-125);\n      return this.writeValue(stream, (value as PlaybackSpeedMessage).toList());\n    } else if (value instanceof PositionMessage) {\n      stream.writeInt8(-124);\n      return this.writeValue(stream, (value as PositionMessage).toList());\n    } else if (value instanceof TextureMessage) {\n      stream.writeInt8(-123);\n      return this.writeValue(stream, (value as TextureMessage).toList());\n    } else if (value instanceof VolumeMessage) {\n      stream.writeInt8(-122);\n      return this.writeValue(stream, (value as VolumeMessage).toList());\n    } else {\n      return super.writeValue(stream, value);\n    }\n  }\n}", "leaked": true, "text_tokens": 726, "split": "valid"}
{"path": "transitions-collection~harmonyos_samples~1277/entry/src/main/ets/feature/MultiModalTransition/HalfModalWindow.ets", "project_name": "transitions-collection~harmonyos_samples~1277", "text": "import { display } from '@kit.ArkUI';\nimport { CaptchaLogin } from './CaptchaLogin';\nimport Constants from '../../common/Constants';\n\n@Builder\nexport function MultiModalPageBuilder() {\n  HalfModalWindow();\n}\n\n@Component\nexport struct HalfModalWindow {\n  @Consume('NavPathStack') pageInfos: NavPathStack;\n  // Whether to display the half-screen modal page.\n  @State isPresent: boolean = false;\n  // half-mode height\n  @State sheetHeight: number = Constants.FONT_WEIGHT;\n  // Whether to display the control bar\n  @State showDragBar: boolean = true;\n  // Determine whether to agree with the agreement\n  @State isConfirmed: boolean = false;\n  // Controlling Full-Modal Presentation\n  @State isPresentInLoginView: boolean = false;\n  // Transparency of the button for sending a verification code\n  @State op: number = Constants.HALF_OPACITY;\n  // Specifies the transition type\n  // The value is false when the component is redirected from the semi-modal component to the mobile verification code component\n  // and the value is true when the component is redirected from the account password component to the mobile verification code component\n  @State isShowTransition: boolean = false;\n  @State isCenter: boolean = true;\n  @State screenW: number = this.getUIContext().px2vp(display.getDefaultDisplaySync().width);\n  // According to the mode attribute description of Navigation\n  // if Auto is used and the window width is greater than or equal to 600 vp, the Split mode is used for display\n  curFoldStatus: display.FoldStatus | undefined = undefined;\n  // Folded state of the current screen (valid only for devices with folded screens)\n  // When the window width is less than 600 vp, the window is displayed in stack mode\n  private deviceSize: number = Constants.DEFAULT_DEVICE_SIZE;\n\n  aboutToAppear(): void {\n    if (canIUse('SystemCapability.Window.SessionManager')) {\n      this.isPresent =\n        true; // When isPresent is set to true, the semi-modal page is displayed. Otherwise, the semi-modal page is not displayed\n      if (display.isFoldable()) {\n        this.regDisplayListener();\n      } else {\n        if (this.screenW >= this.deviceSize) {\n          this.isCenter = true;\n        } else {\n          this.isCenter = false;\n        }\n      }\n    }\n  }\n\n  /**\n   * Register screen status listening\n   * @returns {void}\n   */\n  regDisplayListener(): void {\n    if (canIUse('SystemCapability.Window.SessionManager')) {\n      this.changePreferType(display.getFoldStatus());\n      display.on('foldStatusChange', async (curFoldStatus: display.FoldStatus) => {\n        // Repeated triggering of the same status is not processed\n        if (this.curFoldStatus === curFoldStatus) {\n          return;\n        }\n        // Cache Current Collapse State\n        this.curFoldStatus = curFoldStatus;\n        this.changePreferType(this.curFoldStatus);\n      })\n    }\n  }\n\n  changePreferType(status: number): void {\n    if (canIUse('SystemCapability.Window.SessionManager')) {\n      if (status === display.FoldStatus.FOLD_STATUS_FOLDED) {\n        this.isCenter = false;\n      } else {\n        this.isCenter = true;\n      }\n    }\n  }\n\n  // [Start full_modal]\n  @Builder\n  defaultLogin() {\n    Column() {\n      // CheckBox to control, semi-modal, full-modal, and semi-modal confirmations in the login page\n      CaptchaLogin({\n        isPresent: $isPresent,\n        isPresentInLoginView: $isPresentInLoginView,\n        isShowTransition: $isShowTransition\n      })\n    }\n  }\n\n  // [Start full_modal]\n\n  // [Start half_modal]\n  @Builder\n  halfModalLogin() {\n    // semi-modal window page\n    Column() {\n      Text($r('app.string.multimodaltransion_after_login_more_service'))\n        .fontColor(Color.Black)\n        .fontSize($r('app.integer.font_size_normal'))\n        .padding({ top: $r('app.integer.padding_top_large') })\n\n      Text($r('app.string.multimodaltransion_user_phone_number'))\n        .fontColor(Color.Black)\n        .fontSize($r('app.integer.font_size_large'))\n        .fontWeight(Constants.FONT_WEIGHT_SM)\n        .padding({\n          top: $r('app.integer.font_size_large'),\n          bottom: $r('app.integer.multimodaltransion_margin_default')\n        })\n\n      Text($r('app.string.multimodaltransion_get_service'))\n        .fontColor($r('app.color.multimodaltransion_grey_9'))\n        .fontSize($r('app.integer.multimodaltransion_row_text_font_size'))\n        .padding({ bottom: $r('app.integer.multimodaltransion_height_fifty') })\n\n      Button($r('app.string.multimodaltransion_phone_start_login'))\n        .fontColor(Color.White)\n        .type(ButtonType.Normal)\n        .backgroundColor($r('app.color.multimodaltransion_red'))\n        .onClick(() => {\n          if (this.isConfirmed) {\n            this.getUIContext()\n              .getPromptAction()\n              .showToast({ message: $r('app.string.multimodaltransion_login_success') });\n            AppStorage.set('login', true);\n            this.pageInfos.pop();\n          } else {\n            this.getUIContext()\n              .getPromptAction()\n              .showToast({ message: $r('app.string.multimodaltransion_please_read_and_agree') });\n          }\n        })\n        .width($r('app.string.multimodaltransion_size_ninety_percent'))\n        .height($r('app.integer.multimodaltransion_height_fifty'))\n        .margin({\n          left: $r('app.integer.main_page_padding2'),\n          right: $r('app.integer.main_page_padding2'),\n          bottom: $r('app.integer.multimodaltransion_row_padding_bottom')\n        })\n\n      Button($r('app.string.multimodaltransion_captcha_login_text'))\n        .fontColor(Color.Black)\n        .borderRadius($r('app.integer.multimodaltransion_border_radius'))\n        .type(ButtonType.Normal)\n        .backgroundColor($r('app.color.multimodaltransion_btn_bgc'))\n        .border({\n          color: $r('app.color.multimodaltransion_half_modal_btn_bgc'),\n          width: Constants.DEFAULT_ONE\n        })\n        .onClick(() => {\n          if (this.isConfirmed) {\n            this.isPresentInLoginView = true;\n            this.isConfirmed = false;\n            this.isShowTransition = false;\n          } else {\n            this.getUIContext()\n              .getPromptAction()\n              .showToast({ message: $r('app.string.multimodaltransion_please_read_and_agree') });\n          }\n        })\n        .width($r('app.string.multimodaltransion_size_ninety_percent'))\n        .height($r('app.integer.multimodaltransion_height_fifty'))\n        .margin({ bottom: $r('app.integer.font_size_large') })\n      Blank()\n\n      Row() {\n        Checkbox({ name: Constants.CHECK_BOX_NAME1 })\n          .select(this.isConfirmed)\n          .width($r('app.integer.font_size_sm'))\n          .onChange((value: boolean) => {\n            this.isConfirmed = value;\n          })\n        Text() {\n          Span($r('app.string.multimodaltransion_read_and_agree'))\n            .fontColor($r('app.color.multimodaltransion_grey_9'))\n          Span($r('app.string.multimodaltransion_server_proxy_rule_detail'))\n            .fontColor($r('app.color.multimodaltransion_note_color'))\n            .onClick(() => {\n              this.getUIContext()\n                .getPromptAction()\n                .showToast({ message: $r('app.string.multimodaltransion_only_show_ui') });\n            })\n        }.fontSize($r('app.integer.font_size_sm'))\n      }\n      .margin({ left: $r('app.integer.multimodaltransion_other_ways_icon_height') })\n      .width($r('app.string.multimodaltransion_size_full'))\n    }\n  }\n\n  build() {\n    NavDestination() {\n      Column() {\n        //The Text component is bound for semi-modal display\n        Text()\n          .bindSheet($$this.isPresent, this.halfModalLogin(), {\n            height: this.sheetHeight,\n            dragBar: this.showDragBar,\n            preferType: this.isCenter ? SheetType.CENTER : SheetType.POPUP,\n            backgroundColor: $r('app.color.multimodaltransion_btn_bgc'),\n            showClose: true,\n            shouldDismiss: ((sheetDismiss: SheetDismiss) => {\n              sheetDismiss.dismiss();\n              this.pageInfos.pop();\n            })\n          })\n        // [StartExclude half_modal]\n        //The Text component is bound as the full-screen modal display of the mobile phone verification code component and the account and password component\n        // [StartExclude full_modal]\n        // [EndExclude full_modal]\n        // [Start full_modal]\n        Text()\n          .bindContentCover($$this.isPresentInLoginView, this.defaultLogin())\n        // [Start full_modal]\n        // [StartExclude full_modal]\n        // [EndExclude full_modal]\n        // [StartExclude half_modal]\n      }\n      .expandSafeArea([SafeAreaType.SYSTEM], [SafeAreaEdge.TOP, SafeAreaEdge.BOTTOM])\n      .justifyContent(FlexAlign.Center)\n      .size({\n        width: $r('app.string.multimodaltransion_size_full'),\n        height: $r('app.string.multimodaltransion_size_full')\n      })\n      .padding($r('app.integer.multimodaltransion_padding_default'))\n    }\n  }\n\n  // [End half_modal]\n}", "id": "3724cd8179f43c823e05584012b90b916bc8ed83853d1f02d727bd438ddf6090", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "ArkTS生态耦合良好，结构清晰，逻辑完整，具备较高学习价值。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 3945, "completion_tokens": 67, "total_tokens": 4012, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"ArkTS生态耦合良好，结构清晰，逻辑完整，具备较高学习价值。\"\n}", "llm_formatted": "import { display } from '@kit.ArkUI';\nimport { CaptchaLogin } from './CaptchaLogin';\nimport Constants from '../../common/Constants';\n\n@Builder\nexport function MultiModalPageBuilder() {\n  HalfModalWindow();\n}\n\n@Component\nexport struct HalfModalWindow {\n  @Consume('NavPathStack') pageInfos: NavPathStack;\n  // Whether to display the half-screen modal page.\n  @State isPresent: boolean = false;\n  // half-mode height\n  @State sheetHeight: number = Constants.FONT_WEIGHT;\n  // Whether to display the control bar\n  @State showDragBar: boolean = true;\n  // Determine whether to agree with the agreement\n  @State isConfirmed: boolean = false;\n  // Controlling Full-Modal Presentation\n  @State isPresentInLoginView: boolean = false;\n  // Transparency of the button for sending a verification code\n  @State op: number = Constants.HALF_OPACITY;\n  // Specifies the transition type\n  // The value is false when the component is redirected from the semi-modal component to the mobile verification code component\n  // and the value is true when the component is redirected from the account password component to the mobile verification code component\n  @State isShowTransition: boolean = false;\n  @State isCenter: boolean = true;\n  @State screenW: number = this.getUIContext().px2vp(display.getDefaultDisplaySync().width);\n  // According to the mode attribute description of Navigation\n  // if Auto is used and the window width is greater than or equal to 600 vp, the Split mode is used for display\n  curFoldStatus: display.FoldStatus | undefined = undefined;\n  // Folded state of the current screen (valid only for devices with folded screens)\n  // When the window width is less than 600 vp, the window is displayed in stack mode\n  private deviceSize: number = Constants.DEFAULT_DEVICE_SIZE;\n\n  aboutToAppear(): void {\n    if (canIUse('SystemCapability.Window.SessionManager')) {\n      this.isPresent =\n        true; // When isPresent is set to true, the semi-modal page is displayed. Otherwise, the semi-modal page is not displayed\n      if (display.isFoldable()) {\n        this.regDisplayListener();\n      } else {\n        if (this.screenW >= this.deviceSize) {\n          this.isCenter = true;\n        } else {\n          this.isCenter = false;\n        }\n      }\n    }\n  }\n\n  /**\n   * Register screen status listening\n   * @returns {void}\n   */\n  regDisplayListener(): void {\n    if (canIUse('SystemCapability.Window.SessionManager')) {\n      this.changePreferType(display.getFoldStatus());\n      display.on('foldStatusChange', async (curFoldStatus: display.FoldStatus) => {\n        // Repeated triggering of the same status is not processed\n        if (this.curFoldStatus === curFoldStatus) {\n          return;\n        }\n        // Cache Current Collapse State\n        this.curFoldStatus = curFoldStatus;\n        this.changePreferType(this.curFoldStatus);\n      })\n    }\n  }\n\n  changePreferType(status: number): void {\n    if (canIUse('SystemCapability.Window.SessionManager')) {\n      if (status === display.FoldStatus.FOLD_STATUS_FOLDED) {\n        this.isCenter = false;\n      } else {\n        this.isCenter = true;\n      }\n    }\n  }\n\n  // [Start full_modal]\n  @Builder\n  defaultLogin() {\n    Column() {\n      // CheckBox to control, semi-modal, full-modal, and semi-modal confirmations in the login page\n      CaptchaLogin({\n        isPresent: $isPresent,\n        isPresentInLoginView: $isPresentInLoginView,\n        isShowTransition: $isShowTransition\n      })\n    }\n  }\n\n  // [Start full_modal]\n\n  // [Start half_modal]\n  @Builder\n  halfModalLogin() {\n    // semi-modal window page\n    Column() {\n      Text($r('app.string.multimodaltransion_after_login_more_service'))\n        .fontColor(Color.Black)\n        .fontSize($r('app.integer.font_size_normal'))\n        .padding({ top: $r('app.integer.padding_top_large') })\n\n      Text($r('app.string.multimodaltransion_user_phone_number'))\n        .fontColor(Color.Black)\n        .fontSize($r('app.integer.font_size_large'))\n        .fontWeight(Constants.FONT_WEIGHT_SM)\n        .padding({\n          top: $r('app.integer.font_size_large'),\n          bottom: $r('app.integer.multimodaltransion_margin_default')\n        })\n\n      Text($r('app.string.multimodaltransion_get_service'))\n        .fontColor($r('app.color.multimodaltransion_grey_9'))\n        .fontSize($r('app.integer.multimodaltransion_row_text_font_size'))\n        .padding({ bottom: $r('app.integer.multimodaltransion_height_fifty') })\n\n      Button($r('app.string.multimodaltransion_phone_start_login'))\n        .fontColor(Color.White)\n        .type(ButtonType.Normal)\n        .backgroundColor($r('app.color.multimodaltransion_red'))\n        .onClick(() => {\n          if (this.isConfirmed) {\n            this.getUIContext()\n              .getPromptAction()\n              .showToast({ message: $r('app.string.multimodaltransion_login_success') });\n            AppStorage.set('login', true);\n            this.pageInfos.pop();\n          } else {\n            this.getUIContext()\n              .getPromptAction()\n              .showToast({ message: $r('app.string.multimodaltransion_please_read_and_agree') });\n          }\n        })\n        .width($r('app.string.multimodaltransion_size_ninety_percent'))\n        .height($r('app.integer.multimodaltransion_height_fifty'))\n        .margin({\n          left: $r('app.integer.main_page_padding2'),\n          right: $r('app.integer.main_page_padding2'),\n          bottom: $r('app.integer.multimodaltransion_row_padding_bottom')\n        })\n\n      Button($r('app.string.multimodaltransion_captcha_login_text'))\n        .fontColor(Color.Black)\n        .borderRadius($r('app.integer.multimodaltransion_border_radius'))\n        .type(ButtonType.Normal)\n        .backgroundColor($r('app.color.multimodaltransion_btn_bgc'))\n        .border({\n          color: $r('app.color.multimodaltransion_half_modal_btn_bgc'),\n          width: Constants.DEFAULT_ONE\n        })\n        .onClick(() => {\n          if (this.isConfirmed) {\n            this.isPresentInLoginView = true;\n            this.isConfirmed = false;\n            this.isShowTransition = false;\n          } else {\n            this.getUIContext()\n              .getPromptAction()\n              .showToast({ message: $r('app.string.multimodaltransion_please_read_and_agree') });\n          }\n        })\n        .width($r('app.string.multimodaltransion_size_ninety_percent'))\n        .height($r('app.integer.multimodaltransion_height_fifty'))\n        .margin({ bottom: $r('app.integer.font_size_large') })\n      Blank()\n\n      Row() {\n        Checkbox({ name: Constants.CHECK_BOX_NAME1 })\n          .select(this.isConfirmed)\n          .width($r('app.integer.font_size_sm'))\n          .onChange((value: boolean) => {\n            this.isConfirmed = value;\n          })\n        Text() {\n          Span($r('app.string.multimodaltransion_read_and_agree'))\n            .fontColor($r('app.color.multimodaltransion_grey_9'))\n          Span($r('app.string.multimodaltransion_server_proxy_rule_detail'))\n            .fontColor($r('app.color.multimodaltransion_note_color'))\n            .onClick(() => {\n              this.getUIContext()\n                .getPromptAction()\n                .showToast({ message: $r('app.string.multimodaltransion_only_show_ui') });\n            })\n        }.fontSize($r('app.integer.font_size_sm'))\n      }\n      .margin({ left: $r('app.integer.multimodaltransion_other_ways_icon_height') })\n      .width($r('app.string.multimodaltransion_size_full'))\n    }\n  }\n\n  build() {\n    NavDestination() {\n      Column() {\n        //The Text component is bound for semi-modal display\n        Text()\n          .bindSheet($$this.isPresent, this.halfModalLogin(), {\n            height: this.sheetHeight,\n            dragBar: this.showDragBar,\n            preferType: this.isCenter ? SheetType.CENTER : SheetType.POPUP,\n            backgroundColor: $r('app.color.multimodaltransion_btn_bgc'),\n            showClose: true,\n            shouldDismiss: ((sheetDismiss: SheetDismiss) => {\n              sheetDismiss.dismiss();\n              this.pageInfos.pop();\n            })\n          })\n        // [StartExclude half_modal]\n        //The Text component is bound as the full-screen modal display of the mobile phone verification code component and the account and password component\n        // [StartExclude full_modal]\n        // [EndExclude full_modal]\n        // [Start full_modal]\n        Text()\n          .bindContentCover($$this.isPresentInLoginView, this.defaultLogin())\n        // [Start full_modal]\n        // [StartExclude full_modal]\n        // [EndExclude full_modal]\n        // [StartExclude half_modal]\n      }\n      .expandSafeArea([SafeAreaType.SYSTEM], [SafeAreaEdge.TOP, SafeAreaEdge.BOTTOM])\n      .justifyContent(FlexAlign.Center)\n      .size({\n        width: $r('app.string.multimodaltransion_size_full'),\n        height: $r('app.string.multimodaltransion_size_full')\n      })\n      .padding($r('app.integer.multimodaltransion_padding_default'))\n    }\n  }\n\n  // [End half_modal]\n}", "leaked": true, "text_tokens": 2076, "split": "valid"}
{"path": "OHOS_Demo~Mazur_Denis~2079/PickersDynApiDemo/entry/src/main/ets/sub_components/TimePickerSettingsPane.ets", "project_name": "OHOS_Demo~Mazur_Denis~2079", "text": "import { CommonPickerSettings } from '../models/SettingsModel'\n\n@Component\nstruct TimePickerSettingsPane {\n  @ObjectLink private commonPickerSettings: CommonPickerSettings;\n\n  build() {\n    Column() {\n      Row() {\n        Text(\"UseMilitaryTime\")\n        Checkbox({ name: \"useMilitaryTime\", group: \"textPickerCheckbox\" })\n          .select(this.commonPickerSettings.useMilitaryTime)\n          .onChange((value: boolean) => {\n            this.commonPickerSettings.setUseMilitaryTime(value);\n          })\n      }\n\n      Row() {\n        Text(\"CanLoop\")\n        Checkbox({ name: \"canLoopCheck\", group: \"textPickerCheckbox\" })\n          .select(this.commonPickerSettings.canLoop)\n          .onChange((value: boolean) => {\n            this.commonPickerSettings.setCanLoop(value);\n          })\n      }\n    }\n  }\n}\n\nexport default TimePickerSettingsPane;", "id": "6de3f6fd62cf560fd9f0d842422817a9d8222c41cf550099211a0858e5cf3dbe", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 3.0, "confidence": 0.95, "rationale": "结构清晰，符合ArkTS组件规范，具备实际应用价值。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2050, "completion_tokens": 63, "total_tokens": 2113, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 3,\n  \"confidence\": 0.95,\n  \"rationale\": \"结构清晰，符合ArkTS组件规范，具备实际应用价值。\"\n}", "llm_formatted": "import { CommonPickerSettings } from '../models/SettingsModel'\n\n@Component\nstruct TimePickerSettingsPane {\n  @ObjectLink private commonPickerSettings: CommonPickerSettings;\n\n  build() {\n    Column() {\n      Row() {\n        Text(\"UseMilitaryTime\")\n        Checkbox({ name: \"useMilitaryTime\", group: \"textPickerCheckbox\" })\n          .select(this.commonPickerSettings.useMilitaryTime)\n          .onChange((value: boolean) => {\n            this.commonPickerSettings.setUseMilitaryTime(value);\n          })\n      }\n\n      Row() {\n        Text(\"CanLoop\")\n        Checkbox({ name: \"canLoopCheck\", group: \"textPickerCheckbox\" })\n          .select(this.commonPickerSettings.canLoop)\n          .onChange((value: boolean) => {\n            this.commonPickerSettings.setCanLoop(value);\n          })\n      }\n    }\n  }\n}\n\nexport default TimePickerSettingsPane;", "leaked": true, "text_tokens": 181, "split": "valid"}
{"path": "multi-news-read~harmonyos_samples~325/entry/src/main/ets/view/HotList.ets", "project_name": "multi-news-read~harmonyos_samples~325", "text": "import Constants from '../common/Constants';\n\n@Component\nexport default struct HotList {\n  @Prop hotList: Resource[];\n\n  build() {\n    Column() {\n      Row() {\n        Text($r(\"app.string.hot_rank\"))\n          .fontFamily($r(\"app.string.font_family_bold\"))\n          .fontSize($r(\"app.float.hot_rank_font_size\"))\n          .fontColor($r(\"app.color.hot_rank_font_color\"))\n          .textAlign(TextAlign.Start)\n          .lineHeight($r(\"app.float.bigger_line_height\"))\n          .fontWeight(Constants.FONT_WEIGHT[2])\n        Image($r(\"app.media.ic_big_more\"))\n          .height($r(\"app.float.bigger_more_icon_size\"))\n          .width($r(\"app.float.bigger_more_icon_size\"))\n      }\n      .justifyContent(FlexAlign.SpaceBetween)\n      .width(Constants.FULL_WIDTH)\n      .margin({ bottom: Constants.LIST_GUTTER })\n\n      List() {\n        ForEach(this.hotList, (item: string, index: number) => {\n          ListItem() {\n            Row() {\n              Row() {\n                Text(index + 1 + '')\n                  .fontColor(Color.White)\n                  .fontFamily(\"HarmonyHeiTi\")\n                  .fontSize($r(\"app.float.small_font_size\"))\n                  .textAlign(TextAlign.Center)\n                  .lineHeight($r(\"app.float.line_height\"))\n                  .fontWeight(Constants.FONT_WEIGHT[0])\n              }\n              .justifyContent(FlexAlign.Center)\n              .alignItems(VerticalAlign.Center)\n              .width($r(\"app.float.rank_card_size\"))\n              .height($r(\"app.float.rank_card_size\"))\n              .borderRadius($r(\"app.float.rank_card_border_radius\"))\n              .backgroundColor(Constants.HOT_LIST_BACKGROUND_COLORS[index])\n              .margin({ right: $r(\"app.float.rank_span_text\") })\n\n              Text(item)\n                .fontFamily($r(\"app.string.font_family_normal\"))\n                .fontSize($r(\"app.float.normal_font_size\"))\n                .fontColor(Color.Black)\n                .textAlign(TextAlign.Start)\n                .lineHeight($r(\"app.float.rank_list_line_height\"))\n                .fontWeight(Constants.FONT_WEIGHT[0])\n                .maxLines(1)\n                .textOverflow({ overflow: TextOverflow.Ellipsis })\n            }\n\n          }\n\n        }, (item: string) => item)\n      }\n      .width(Constants.FULL_WIDTH)\n      .height(Constants.FULL_HEIGHT)\n    }\n    .width(Constants.FULL_WIDTH)\n    .height($r(\"app.float.cards_height\"))\n    .padding($r(\"app.float.rank_list_padding\"))\n    .backgroundColor($r(\"app.color.news_background\"))\n    .borderRadius($r(\"app.float.normal_border_radius\"))\n  }\n}", "id": "8698ed5f5d93d38f20ee56a034313c090cea9ddc5cb4110870adceb4a84b8157", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "结构清晰，符合ArkTS生态规范，具备良好的组件化与样式渲染实践。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2420, "completion_tokens": 67, "total_tokens": 2487, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"结构清晰，符合ArkTS生态规范，具备良好的组件化与样式渲染实践。\"\n}", "llm_formatted": "import Constants from '../common/Constants';\n\n@Component\nexport default struct HotList {\n  @Prop hotList: Resource[];\n\n  build() {\n    Column() {\n      Row() {\n        Text($r(\"app.string.hot_rank\"))\n          .fontFamily($r(\"app.string.font_family_bold\"))\n          .fontSize($r(\"app.float.hot_rank_font_size\"))\n          .fontColor($r(\"app.color.hot_rank_font_color\"))\n          .textAlign(TextAlign.Start)\n          .lineHeight($r(\"app.float.bigger_line_height\"))\n          .fontWeight(Constants.FONT_WEIGHT[2])\n        Image($r(\"app.media.ic_big_more\"))\n          .height($r(\"app.float.bigger_more_icon_size\"))\n          .width($r(\"app.float.bigger_more_icon_size\"))\n      }\n      .justifyContent(FlexAlign.SpaceBetween)\n      .width(Constants.FULL_WIDTH)\n      .margin({ bottom: Constants.LIST_GUTTER })\n\n      List() {\n        ForEach(this.hotList, (item: string, index: number) => {\n          ListItem() {\n            Row() {\n              Row() {\n                Text(index + 1 + '')\n                  .fontColor(Color.White)\n                  .fontFamily(\"HarmonyHeiTi\")\n                  .fontSize($r(\"app.float.small_font_size\"))\n                  .textAlign(TextAlign.Center)\n                  .lineHeight($r(\"app.float.line_height\"))\n                  .fontWeight(Constants.FONT_WEIGHT[0])\n              }\n              .justifyContent(FlexAlign.Center)\n              .alignItems(VerticalAlign.Center)\n              .width($r(\"app.float.rank_card_size\"))\n              .height($r(\"app.float.rank_card_size\"))\n              .borderRadius($r(\"app.float.rank_card_border_radius\"))\n              .backgroundColor(Constants.HOT_LIST_BACKGROUND_COLORS[index])\n              .margin({ right: $r(\"app.float.rank_span_text\") })\n\n              Text(item)\n                .fontFamily($r(\"app.string.font_family_normal\"))\n                .fontSize($r(\"app.float.normal_font_size\"))\n                .fontColor(Color.Black)\n                .textAlign(TextAlign.Start)\n                .lineHeight($r(\"app.float.rank_list_line_height\"))\n                .fontWeight(Constants.FONT_WEIGHT[0])\n                .maxLines(1)\n                .textOverflow({ overflow: TextOverflow.Ellipsis })\n            }\n          }\n        }, (item: string) => item)\n      }\n      .width(Constants.FULL_WIDTH)\n      .height(Constants.FULL_HEIGHT)\n    }\n    .width(Constants.FULL_WIDTH)\n    .height($r(\"app.float.cards_height\"))\n    .padding($r(\"app.float.rank_list_padding\"))\n    .backgroundColor($r(\"app.color.news_background\"))\n    .borderRadius($r(\"app.float.normal_border_radius\"))\n  }\n}", "leaked": true, "text_tokens": 551, "split": "valid"}
{"path": "Imitated~KingOfJadeFacedWyvern~5213/JumpBetweenApps/entry/src/main/ets/view/FooterBar.ets", "project_name": "Imitated~KingOfJadeFacedWyvern~5213", "text": "@Component\nstruct FooterBar {\n  build () {\n    Row () {\n      Image ($r ('app.media.emoji'))\n        .width (24)\n        .aspectRatio (1)\n      TextInput ()\n        .layoutWeight (1)\n        .margin ({ left: 10 , right: 10 })\n      Image ($r ('app.media.ic_plus'))\n        .width (24)\n        .aspectRatio (1)\n    }\n    .width ('100%')\n    .height (60)\n    .padding ({ left: 16 , right: 16 })\n    .backgroundColor (Color.White)\n\n  }\n}\n\n// @Preview\n// struct PreviewCode {\n//   build () {\n//     Column () {\n//       FooterBar ()\n//     }\n//   }\n// }", "id": "a3d907eb2ed55a10fff33be9905970ce3e7bc6773e90e0b5f3425254bccec7f1", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 3.0, "confidence": 0.95, "rationale": "符合ArkTS语法与生态，结构清晰，具有可迁移的组件构建模式。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2033, "completion_tokens": 67, "total_tokens": 2100, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 3,\n  \"confidence\": 0.95,\n  \"rationale\": \"符合ArkTS语法与生态，结构清晰，具有可迁移的组件构建模式。\"\n}", "llm_formatted": "@Component\nstruct FooterBar {\n  build() {\n    Row() {\n      Image($r('app.media.emoji'))\n        .width(24)\n        .aspectRatio(1)\n      TextInput()\n        .layoutWeight(1)\n        .margin({ left: 10, right: 10 })\n      Image($r('app.media.ic_plus'))\n        .width(24)\n        .aspectRatio(1)\n    }\n    .width('100%')\n    .height(60)\n    .padding({ left: 16, right: 16 })\n    .backgroundColor(Color.White)\n  }\n}", "leaked": true, "text_tokens": 164, "split": "valid"}
{"path": "xts_acts~openharmony~1331/arkui/ace_c_arkui_test/entry/src/ohosTest/ets/test/customcomponent/CustomComponentMeasureNodeTest.test.ets", "project_name": "xts_acts~openharmony~1331", "text": "import { beforeAll, describe, expect, it, Level } from '@ohos/hypium';\nimport Utils from '../common/Utils';\nimport nativeRender from 'libnativerender.so'\n\nexport default function customComponentMeasureNodeTest() {\n\n  describe('CustomComponentMeasureNodeTest', () => {\n\n    let PAGE_TAG = 'CustomComponentMeasureNodeTest';\n\n    beforeAll(async (done: Function) => {\n      await Utils.pushPage(`customcomponent/${PAGE_TAG}`, done);\n    });\n\n    /*\n    * @tc.number     : SUB_ARKUI_CAPI_CUSTOMCOMPONENT_MEASURE_NODE_001\n    * @tc.name       : testCustomComponentMeasureNode001\n    * @tc.desc       : test custom event callback\n    * @tc.size       : MediumTest\n    \n    * @tc.type       : Function\n    * @tc.level      : Level 1\n    */\n    it('testCustomComponentMeasureNode001', Level.LEVEL1, async (done: Function) => {\n      let dataArray: number[][] = nativeRender.getMeasureNodeData();\n      let measureNodeData: number[] = dataArray[0];\n      console.log('testCustomComponentMeasureNode001', JSON.stringify(dataArray))\n      expect(measureNodeData[0] == 40 && measureNodeData[1] == 140).assertEqual(true)\n      expect(measureNodeData[2] == 110 && measureNodeData[3] == 30).assertEqual(true)\n      expect(measureNodeData[4] == 110 && measureNodeData[5] == 140).assertEqual(true)\n      done()\n    })\n  })\n}\n", "id": "5c506ae1d9d2cf1cf9e805d033aa138af3645db33f40c33c011d569343116a50", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 3.0, "confidence": 0.9, "rationale": "符合ArkTS生态，结构清晰，含测试用例与实际调用逻辑，具备一定学习价值。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2225, "completion_tokens": 71, "total_tokens": 2296, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 3,\n  \"confidence\": 0.9,\n  \"rationale\": \"符合ArkTS生态，结构清晰，含测试用例与实际调用逻辑，具备一定学习价值。\"\n}", "llm_formatted": "import { beforeAll, describe, expect, it, Level } from '@ohos/hypium';\nimport Utils from '../common/Utils';\nimport nativeRender from 'libnativerender.so';\n\nexport default function customComponentMeasureNodeTest() {\n  describe('CustomComponentMeasureNodeTest', () => {\n    let PAGE_TAG = 'CustomComponentMeasureNodeTest';\n\n    beforeAll(async (done: Function) => {\n      await Utils.pushPage(`customcomponent/${PAGE_TAG}`, done);\n    });\n\n    it('testCustomComponentMeasureNode001', Level.LEVEL1, async (done: Function) => {\n      let dataArray: number[][] = nativeRender.getMeasureNodeData();\n      let measureNodeData: number[] = dataArray[0];\n      console.log('testCustomComponentMeasureNode001', JSON.stringify(dataArray));\n      expect(measureNodeData[0] == 40 && measureNodeData[1] == 140).assertEqual(true);\n      expect(measureNodeData[2] == 110 && measureNodeData[3] == 30).assertEqual(true);\n      expect(measureNodeData[4] == 110 && measureNodeData[5] == 140).assertEqual(true);\n      done();\n    });\n  });\n}", "leaked": true, "text_tokens": 356, "split": "valid"}
{"path": "xts_acts~openharmony~1331/arkui/ace_c_arkui_testwearcrop/entry/src/ohosTest/ets/test/calendarpicker/CalendarPickerSelectedDateTest.test.ets", "project_name": "xts_acts~openharmony~1331", "text": "import { beforeEach, describe, expect, it, Level } from '@ohos/hypium';\nimport Utils from '../common/Utils';\nimport nativeFunc from 'libnativefunc.so'\n\nexport default function calendarPickerSelectedDateTest() {\n\n  describe('CalendarPickerSelectedDateTest', () => {\n\n    beforeEach(async (done: Function) => {\n      await Utils.sleep(100);\n      done();\n    });\n\n    /*\n     * @tc.number: SUB_ARKUI_CAPI_CALENDARPICKER_SELECTED_DATE_0100\n     * @tc.name: testCalendarPickerSelectedDate001\n     * @tc.desc: testing SelectedDate for calendarPicker with normal value\n     * @tc.size: MediumTest\n     * @tc.type: Function\n     * @tc.level: Level 1\n     */\n    it('testCalendarPickerSelectedDate001', Level.LEVEL1, async  (done: Function) => {\n      expect(nativeFunc.testCalendarPickerSelectedDate001()).assertEqual(0)\n      done()\n    })\n\n    /*\n     * @tc.number: SUB_ARKUI_CAPI_CALENDARPICKER_SELECTED_DATE_0200\n     * @tc.name: testCalendarPickerSelectedDate002\n     * @tc.desc: testing SelectedDate for calendarPicker with normal value\n     * @tc.size: MediumTest\n     * @tc.type: Function\n     * @tc.level: Level 2\n     */\n    it('testCalendarPickerSelectedDate002', Level.LEVEL1, async  (done: Function) => {\n      expect(nativeFunc.testCalendarPickerSelectedDate002()).assertEqual(0)\n      done()\n    })\n\n    /*\n     * @tc.number: SUB_ARKUI_CAPI_CALENDARPICKER_SELECTED_DATE_0300\n     * @tc.name: testCalendarPickerSelectedDate003\n     * @tc.desc: testing SelectedDate for calendarPicker with abnormal value\n     * @tc.size: MediumTest\n     * @tc.type: Function\n     * @tc.level: Level 1\n     */\n    it('testCalendarPickerSelectedDate003', Level.LEVEL1, async  (done: Function) => {\n      expect(nativeFunc.testCalendarPickerSelectedDate003()).assertEqual(0)\n      done()\n    })\n\n    /*\n     * @tc.number: SUB_ARKUI_CAPI_CALENDARPICKER_SELECTED_DATE_0400\n     * @tc.name: testCalendarPickerSelectedDate004\n     * @tc.desc: testing SelectedDate for calendarPicker with abnormal value\n     * @tc.size: MediumTest\n     * @tc.type: Function\n     * @tc.level: Level 1\n     */\n    it('testCalendarPickerSelectedDate004', Level.LEVEL1, async  (done: Function) => {\n      expect(nativeFunc.testCalendarPickerSelectedDate004()).assertEqual(0)\n      done()\n    })\n\n    /*\n     * @tc.number: SUB_ARKUI_CAPI_CALENDARPICKER_SELECTED_DATE_0500\n     * @tc.name: testCalendarPickerSelectedDate005\n     * @tc.desc: testing SelectedDate for calendarPicker with Default\n     * @tc.size: MediumTest\n     * @tc.type: Function\n     * @tc.level: Level 1\n     */\n    it('testCalendarPickerSelectedDate005', Level.LEVEL1, async  (done: Function) => {\n      expect(nativeFunc.testCalendarPickerSelectedDate005()).assertEqual(0)\n      done()\n    })\n\n  })\n}\n", "id": "b5c044f36971bbbdbbf918907ed76789e25fa668a3bb34db22a77f7649d856ae", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 3.0, "confidence": 0.9, "rationale": "ArkTS单测代码，结构清晰，生态耦合自然，具一定学习价值", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2044, "completion_tokens": 70, "total_tokens": 2114, "raw_response": "```json\n{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 3,\n  \"confidence\": 0.9,\n  \"rationale\": \"ArkTS单测代码，结构清晰，生态耦合自然，具一定学习价值\"\n}\n```", "llm_formatted": "import { beforeEach, describe, expect, it, Level } from '@ohos/hypium';\nimport Utils from '../common/Utils';\nimport nativeFunc from 'libnativefunc.so'\n\nexport default function calendarPickerSelectedDateTest() {\n\n  describe('CalendarPickerSelectedDateTest', () => {\n\n    beforeEach(async (done: Function) => {\n      await Utils.sleep(100);\n      done();\n    });\n\n    /*\n     * @tc.number: SUB_ARKUI_CAPI_CALENDARPICKER_SELECTED_DATE_0100\n     * @tc.name: testCalendarPickerSelectedDate001\n     * @tc.desc: testing SelectedDate for calendarPicker with normal value\n     * @tc.size: MediumTest\n     * @tc.type: Function\n     * @tc.level: Level 1\n     */\n    it('testCalendarPickerSelectedDate001', Level.LEVEL1, async  (done: Function) => {\n      expect(nativeFunc.testCalendarPickerSelectedDate001()).assertEqual(0)\n      done()\n    })\n\n    /*\n     * @tc.number: SUB_ARKUI_CAPI_CALENDARPICKER_SELECTED_DATE_0200\n     * @tc.name: testCalendarPickerSelectedDate002\n     * @tc.desc: testing SelectedDate for calendarPicker with normal value\n     * @tc.size: MediumTest\n     * @tc.type: Function\n     * @tc.level: Level 2\n     */\n    it('testCalendarPickerSelectedDate002', Level.LEVEL1, async  (done: Function) => {\n      expect(nativeFunc.testCalendarPickerSelectedDate002()).assertEqual(0)\n      done()\n    })\n\n    /*\n     * @tc.number: SUB_ARKUI_CAPI_CALENDARPICKER_SELECTED_DATE_0300\n     * @tc.name: testCalendarPickerSelectedDate003\n     * @tc.desc: testing SelectedDate for calendarPicker with abnormal value\n     * @tc.size: MediumTest\n     * @tc.type: Function\n     * @tc.level: Level 1\n     */\n    it('testCalendarPickerSelectedDate003', Level.LEVEL1, async  (done: Function) => {\n      expect(nativeFunc.testCalendarPickerSelectedDate003()).assertEqual(0)\n      done()\n    })\n\n    /*\n     * @tc.number: SUB_ARKUI_CAPI_CALENDARPICKER_SELECTED_DATE_0400\n     * @tc.name: testCalendarPickerSelectedDate004\n     * @tc.desc: testing SelectedDate for calendarPicker with abnormal value\n     * @tc.size: MediumTest\n     * @tc.type: Function\n     * @tc.level: Level 1\n     */\n    it('testCalendarPickerSelectedDate004', Level.LEVEL1, async  (done: Function) => {\n      expect(nativeFunc.testCalendarPickerSelectedDate004()).assertEqual(0)\n      done()\n    })\n\n    /*\n     * @tc.number: SUB_ARKUI_CAPI_CALENDARPICKER_SELECTED_DATE_0500\n     * @tc.name: testCalendarPickerSelectedDate005\n     * @tc.desc: testing SelectedDate for calendarPicker with Default\n     * @tc.size: MediumTest\n     * @tc.type: Function\n     * @tc.level: Level 1\n     */\n    it('testCalendarPickerSelectedDate005', Level.LEVEL1, async  (done: Function) => {\n      expect(nativeFunc.testCalendarPickerSelectedDate005()).assertEqual(0)\n      done()\n    })\n\n  })\n}\n", "leaked": true, "text_tokens": 776, "split": "valid"}
{"path": "applications_mms~openharmony~1285/entry/src/main/ets/utils/WantUtil.ets", "project_name": "applications_mms~openharmony~1285", "text": "import router from '@system.router';\n\nimport ContactService from '../service/ContactsService';\nimport ConversationListService from '../service/ConversationListService';\nimport common from '../data/commonData';\nimport HiLog from './HiLog';\nimport LooseObject from '../data/LooseObject';\n\nconst TAG = 'WantUtil';\n\nexport default {\n  getWant() {\n    HiLog.i(TAG, 'getWant start');\n    if (globalThis.abilityWant == null) {\n      return;\n    }\n    let abilityWant = globalThis.abilityWant;\n    globalThis.abilityWant = null;\n\n    if (abilityWant.hasOwnProperty('parameters')) {\n      let parameters = abilityWant.parameters;\n      let pageFlag = '';\n      if (parameters.hasOwnProperty('pageFlag')) {\n        pageFlag = parameters.pageFlag;\n        HiLog.i(TAG, 'pageFlag = ' + pageFlag);\n      }\n      let contactParams = {}\n      if (parameters.hasOwnProperty('contactObjects')) {\n        contactParams = ContactService.getInstance().dealContactParams(parameters.contactObjects);\n      }\n      this.jump(pageFlag, contactParams);\n    }\n  },\n\n  jump(pageFlag, contactParams) {\n    let result = {\n      uri: '',\n      params: {}\n    };\n    HiLog.i(TAG, 'want.pageFlag: ' + pageFlag);\n    switch (pageFlag) {\n      case 'conversation':\n        result.uri = 'pages/conversation/conversation';\n        if (contactParams) {\n          result.params = contactParams;\n          this.jumpIsNewPage(result, contactParams);\n        } else {\n          router.push(result);\n        }\n        break;\n      default:\n        break;\n    }\n  },\n\n  async jumpIsNewPage(result, contactParams) {\n    // Check whether a session has been created for the current phone number in the SMS message.\n    ConversationListService.getInstance().querySessionByTelephone(contactParams.strContactsNumber, res => {\n      if (res.code == common.int.SUCCESS && res.response.id > 0) {\n        result.params.threadId = res.response.id;\n        let actionData: LooseObject = {};\n        actionData.threadId = result.params.threadId;\n        ConversationListService.getInstance().markAllToRead(actionData);\n        if (res.response.hasDraft && res.response.messageCount == 0) {\n          result.params.isNewMsg = true;\n        } else {\n          result.params.isNewMsg = false;\n        }\n      } else {\n        result.params.isNewMsg = true;\n      }\n      router.push(result);\n    }, null);\n  },\n}", "id": "9ab9dd86ee0c769a3597492397ddc8d1848c9f9b89b506de6c901afd02105c04", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 3.0, "confidence": 0.9, "rationale": "符合ArkTS规范，结构清晰，有生态耦合与类型使用，具备学习价值。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2384, "completion_tokens": 68, "total_tokens": 2452, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 3,\n  \"confidence\": 0.9,\n  \"rationale\": \"符合ArkTS规范，结构清晰，有生态耦合与类型使用，具备学习价值。\"\n}", "llm_formatted": "import router from '@system.router';\n\nimport ContactService from '../service/ContactsService';\nimport ConversationListService from '../service/ConversationListService';\nimport common from '../data/commonData';\nimport HiLog from './HiLog';\nimport LooseObject from '../data/LooseObject';\n\nconst TAG = 'WantUtil';\n\nexport default {\n  getWant() {\n    HiLog.i(TAG, 'getWant start');\n    if (globalThis.abilityWant == null) {\n      return;\n    }\n    let abilityWant = globalThis.abilityWant;\n    globalThis.abilityWant = null;\n\n    if (abilityWant.hasOwnProperty('parameters')) {\n      let parameters = abilityWant.parameters;\n      let pageFlag = '';\n      if (parameters.hasOwnProperty('pageFlag')) {\n        pageFlag = parameters.pageFlag;\n        HiLog.i(TAG, 'pageFlag = ' + pageFlag);\n      }\n      let contactParams = {}\n      if (parameters.hasOwnProperty('contactObjects')) {\n        contactParams = ContactService.getInstance().dealContactParams(parameters.contactObjects);\n      }\n      this.jump(pageFlag, contactParams);\n    }\n  },\n\n  jump(pageFlag, contactParams) {\n    let result = {\n      uri: '',\n      params: {}\n    };\n    HiLog.i(TAG, 'want.pageFlag: ' + pageFlag);\n    switch (pageFlag) {\n      case 'conversation':\n        result.uri = 'pages/conversation/conversation';\n        if (contactParams) {\n          result.params = contactParams;\n          this.jumpIsNewPage(result, contactParams);\n        } else {\n          router.push(result);\n        }\n        break;\n      default:\n        break;\n    }\n  },\n\n  async jumpIsNewPage(result, contactParams) {\n    // Check whether a session has been created for the current phone number in the SMS message.\n    ConversationListService.getInstance().querySessionByTelephone(contactParams.strContactsNumber, res => {\n      if (res.code == common.int.SUCCESS && res.response.id > 0) {\n        result.params.threadId = res.response.id;\n        let actionData: LooseObject = {};\n        actionData.threadId = result.params.threadId;\n        ConversationListService.getInstance().markAllToRead(actionData);\n        if (res.response.hasDraft && res.response.messageCount == 0) {\n          result.params.isNewMsg = true;\n        } else {\n          result.params.isNewMsg = false;\n        }\n      } else {\n        result.params.isNewMsg = true;\n      }\n      router.push(result);\n    }, null);\n  },\n}", "leaked": true, "text_tokens": 515, "split": "valid"}
{"path": "applications_call~OpenHarmony~771/entry/src/main/ets/common/components/CallList.ets", "project_name": "applications_call~OpenHarmony~771", "text": "/**\n * @file: User list component\n */\n\nimport CallStateConst from '../constant/CallStateConst';\nimport CallServiceProxy from '../../model/CallServiceProxy';\nimport LogUtils from '../utils/LogUtils';\nimport DefaultCallData from '../struct/TypeUtils';\nimport CallListStruct from '../struct/CallListStruct'\nimport CallTimeListStruct from '../struct/CallTimeListStruct'\n\nconst TAG = 'CallList';\n\n@Component\nexport default struct CallList {\n  @Link callList: Array<CallListStruct>;\n  @Link callData: DefaultCallData;\n  @StorageLink('CallTimeList') callTimeList: Array<CallTimeListStruct> = [];\n  private mCallStateConst: CallStateConst;\n  private mCallServiceProxy: CallServiceProxy;\n\n  public aboutToAppear(): void {\n    LogUtils.i(TAG, 'aboutToAppear');\n    this.mCallStateConst = new CallStateConst();\n    this.mCallServiceProxy = CallServiceProxy.getInstance();\n  }\n\n  /**\n   * Three-way call list\n   *\n   * @return {boolean} - Three-way call list\n   */\n  getCallList() {\n    let arr = this.callList.map((item) => {\n      const obj = {};\n      return Object.assign({}, {\n        ...obj,\n        ...item\n      });\n    });\n    return arr.filter((v) => v.callState !== CallStateConst.CALL_STATUS_WAITING);\n  }\n\n  /**\n   * Phone number display\n   *\n   * @return {string} Phone number\n   */\n  public getContactName(item) {\n    return (item.contactName ? item.contactName : item.accountNumber) || $r('app.string.unknownNumber');\n  }\n\n  /**\n   * Phone number display\n   *\n   * @return {string} Phone number\n   */\n  public getCallTime(item) {\n    let callTimeObj = this.callTimeList.find((o) => o.callId === item.callId);\n    return callTimeObj ? callTimeObj.callTime : null;\n  }\n\n  /**\n   * Call status\n   *\n   * @return {number} -  callState\n   */\n  private callState() {\n    return this.callData.callState;\n  }\n\n  /**\n   * Hang up call\n   *\n   * @param {number} callId - callId\n   */\n  public onHangUp(callId) {\n    LogUtils.i(TAG, 'onHangUp : ' + callId);\n    this.mCallServiceProxy.hangUpCall(callId);\n    if (this.callList.length === 1) {\n      globalThis.calluiAbilityContext?.terminateSelf().then((data) => {\n        LogUtils.i(TAG, 'onHangUp terminateSelfCallBack');\n      });\n    }\n  }\n\n  /**\n   * UnHold call\n   *\n   * @param {number} callId - callId\n   */\n  public onUnHold(callId) {\n    LogUtils.i(TAG, 'onUnHold : ' + callId);\n\n    this.getCallList().forEach((item) => {\n      if (item.callState === CallStateConst.CALL_STATUS_HOLDING) {\n        this.mCallServiceProxy.unHoldCall(item.callId);\n        return;\n      }\n    });\n  }\n\n  getInComingCallState() {\n    let incomingState = false;\n    this.callList.forEach((v) => {\n      if (v.callState === CallStateConst.callStateObj.CALL_STATUS_WAITING ||\n        v.callState === CallStateConst.callStateObj.CALL_STATUS_INCOMING) {\n        incomingState = true;\n      }\n    });\n    LogUtils.i(TAG, 'getInComingCallState incomingState:' + JSON.stringify(incomingState));\n    return incomingState;\n  }\n\n  build() {\n    Flex({ direction: FlexDirection.Column, alignItems: ItemAlign.Center }) {\n      List() {\n        ForEach(this.getCallList(), (item) => {\n          ListItem() {\n            Column() {\n              Row() {\n                Flex({ justifyContent: FlexAlign.SpaceBetween, alignItems: ItemAlign.Center }) {\n                  Text(this.getContactName(item))\n                    .fontColor('#FFFFFF')\n                    .fontSize(16)\n                    .height(21)\n                    .lineHeight(19)\n\n                  Row() {\n                    if (item.callState === CallStateConst.callStateObj.CALL_STATUS_ACTIVE) {\n                      Text(this.getCallTime(item))\n                        .fontSize(14)\n                        .fontColor('#FFFFFF')\n                        .height(19)\n                        .lineHeight(19)\n                        .opacity(0.60)\n                    } else {\n                      Text(CallStateConst.callStateTextMap[item.callState])\n                        .fontSize(14)\n                        .fontColor('#FFFFFF')\n                        .height(19)\n                        .lineHeight(19)\n                        .opacity(0.60)\n                    }\n\n                    if (this.getInComingCallState()) {\n                      Image($r('app.media.ic_hangup_list'))\n                        .width(30)\n                        .height(30)\n                        .onClick(() => {\n                          this.onHangUp(item.callId);\n                        })\n                        .margin({ left: 16 })\n                    }\n                  }\n                }\n              }\n              .onClick(() => {\n                this.onUnHold(item.callId);\n              })\n              .height(64)\n            }\n          }\n        })\n      }\n      .divider({ strokeWidth: 1, color: $r('app.color.divider_calllist') })\n      .margin({ left: 24, right: 24 })\n      .width('100%')\n      .listDirection(Axis.Vertical)\n\n      Divider()\n        .color($r('app.color.divider_calllist'))\n        .strokeWidth(1)\n    }\n    .height(128)\n  }\n}", "id": "ecce93a7fd35a85177e0de460d3607d46e581cd1dbb7b5607d2afb48e8227fce", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "ArkTS组件结构完整，生态耦合自然，逻辑清晰，具备较高学习价值。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 3070, "completion_tokens": 68, "total_tokens": 3138, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"ArkTS组件结构完整，生态耦合自然，逻辑清晰，具备较高学习价值。\"\n}", "llm_formatted": "/**\n * @file: User list component\n */\n\nimport CallStateConst from '../constant/CallStateConst';\nimport CallServiceProxy from '../../model/CallServiceProxy';\nimport LogUtils from '../utils/LogUtils';\nimport DefaultCallData from '../struct/TypeUtils';\nimport CallListStruct from '../struct/CallListStruct'\nimport CallTimeListStruct from '../struct/CallTimeListStruct'\n\nconst TAG = 'CallList';\n\n@Component\nexport default struct CallList {\n  @Link callList: Array<CallListStruct>;\n  @Link callData: DefaultCallData;\n  @StorageLink('CallTimeList') callTimeList: Array<CallTimeListStruct> = [];\n  private mCallStateConst: CallStateConst;\n  private mCallServiceProxy: CallServiceProxy;\n\n  public aboutToAppear(): void {\n    LogUtils.i(TAG, 'aboutToAppear');\n    this.mCallStateConst = new CallStateConst();\n    this.mCallServiceProxy = CallServiceProxy.getInstance();\n  }\n\n  /**\n   * Three-way call list\n   *\n   * @return {boolean} - Three-way call list\n   */\n  getCallList() {\n    let arr = this.callList.map((item) => {\n      const obj = {};\n      return Object.assign({}, {\n        ...obj,\n        ...item\n      });\n    });\n    return arr.filter((v) => v.callState !== CallStateConst.CALL_STATUS_WAITING);\n  }\n\n  /**\n   * Phone number display\n   *\n   * @return {string} Phone number\n   */\n  public getContactName(item) {\n    return (item.contactName ? item.contactName : item.accountNumber) || $r('app.string.unknownNumber');\n  }\n\n  /**\n   * Phone number display\n   *\n   * @return {string} Phone number\n   */\n  public getCallTime(item) {\n    let callTimeObj = this.callTimeList.find((o) => o.callId === item.callId);\n    return callTimeObj ? callTimeObj.callTime : null;\n  }\n\n  /**\n   * Call status\n   *\n   * @return {number} -  callState\n   */\n  private callState() {\n    return this.callData.callState;\n  }\n\n  /**\n   * Hang up call\n   *\n   * @param {number} callId - callId\n   */\n  public onHangUp(callId) {\n    LogUtils.i(TAG, 'onHangUp : ' + callId);\n    this.mCallServiceProxy.hangUpCall(callId);\n    if (this.callList.length === 1) {\n      globalThis.calluiAbilityContext?.terminateSelf().then((data) => {\n        LogUtils.i(TAG, 'onHangUp terminateSelfCallBack');\n      });\n    }\n  }\n\n  /**\n   * UnHold call\n   *\n   * @param {number} callId - callId\n   */\n  public onUnHold(callId) {\n    LogUtils.i(TAG, 'onUnHold : ' + callId);\n\n    this.getCallList().forEach((item) => {\n      if (item.callState === CallStateConst.CALL_STATUS_HOLDING) {\n        this.mCallServiceProxy.unHoldCall(item.callId);\n        return;\n      }\n    });\n  }\n\n  getInComingCallState() {\n    let incomingState = false;\n    this.callList.forEach((v) => {\n      if (v.callState === CallStateConst.callStateObj.CALL_STATUS_WAITING ||\n        v.callState === CallStateConst.callStateObj.CALL_STATUS_INCOMING) {\n        incomingState = true;\n      }\n    });\n    LogUtils.i(TAG, 'getInComingCallState incomingState:' + JSON.stringify(incomingState));\n    return incomingState;\n  }\n\n  build() {\n    Flex({ direction: FlexDirection.Column, alignItems: ItemAlign.Center }) {\n      List() {\n        ForEach(this.getCallList(), (item) => {\n          ListItem() {\n            Column() {\n              Row() {\n                Flex({ justifyContent: FlexAlign.SpaceBetween, alignItems: ItemAlign.Center }) {\n                  Text(this.getContactName(item))\n                    .fontColor('#FFFFFF')\n                    .fontSize(16)\n                    .height(21)\n                    .lineHeight(19)\n\n                  Row() {\n                    if (item.callState === CallStateConst.callStateObj.CALL_STATUS_ACTIVE) {\n                      Text(this.getCallTime(item))\n                        .fontSize(14)\n                        .fontColor('#FFFFFF')\n                        .height(19)\n                        .lineHeight(19)\n                        .opacity(0.60)\n                    } else {\n                      Text(CallStateConst.callStateTextMap[item.callState])\n                        .fontSize(14)\n                        .fontColor('#FFFFFF')\n                        .height(19)\n                        .lineHeight(19)\n                        .opacity(0.60)\n                    }\n\n                    if (this.getInComingCallState()) {\n                      Image($r('app.media.ic_hangup_list'))\n                        .width(30)\n                        .height(30)\n                        .onClick(() => {\n                          this.onHangUp(item.callId);\n                        })\n                        .margin({ left: 16 })\n                    }\n                  }\n                }\n              }\n              .onClick(() => {\n                this.onUnHold(item.callId);\n              })\n              .height(64)\n            }\n          }\n        })\n      }\n      .divider({ strokeWidth: 1, color: $r('app.color.divider_calllist') })\n      .margin({ left: 24, right: 24 })\n      .width('100%')\n      .listDirection(Axis.Vertical)\n\n      Divider()\n        .color($r('app.color.divider_calllist'))\n        .strokeWidth(1)\n    }\n    .height(128)\n  }\n}", "leaked": true, "text_tokens": 1201, "split": "valid"}
{"path": "DxinDemo~帝心~2657/AppDataPersistence/kvStore/src/main/ets/pages/Index.ets", "project_name": "DxinDemo~帝心~2657", "text": "import DxConstants from '../common/DxConstants';\nimport DxKvStoreUtil from '../common/DxKvStoreUtil';\n\n// 用户模型\nclass Userinfo {\n  username: string\n  password: string\n\n  constructor(username: string, password: string) {\n    this.username = username\n    this.password = password\n  }\n}\n\n@Entry\n@Component\nstruct Index {\n  @State userinfo: Userinfo = new Userinfo(\"dxin\", \"123\")\n\n  async aboutToAppear(): Promise<void> {\n    // KV数据库获取\n    let userinfoStr: string = await DxKvStoreUtil.getData(DxConstants.userInfoKey) as string\n    if (userinfoStr === undefined) {\n      this.userinfo = new Userinfo(\"dd\", \"666\")\n    } else {\n      let currentUserinfo = JSON.parse(userinfoStr) as Userinfo\n      this.userinfo = currentUserinfo\n    }\n  }\n\n  build() {\n    Column({ space: 30 }) {\n      Text(`欢迎${this.userinfo.username},你的密码是${this.userinfo.password}`)\n      TextInput({ placeholder: \"用户名\", text: $$this.userinfo.username })\n        .onFocus(() => {\n          this.userinfo.username = \"\"\n        })\n      TextInput({ placeholder: \"密码\", text: $$this.userinfo.password })\n        .onFocus(() => {\n          this.userinfo.password = \"\"\n        })\n\n      Button(\"KV数据库应用\")\n        .onClick(() => {\n          //   KV数据库存储 注意存储的数据类型不能是对象，只能是 Uint8Array | string | number | boolean\n          let userinfoStr = JSON.stringify(this.userinfo)\n          try {\n            DxKvStoreUtil.putData(DxConstants.userInfoKey, userinfoStr)\n          } catch (e) {\n            // TODO Index.ets 待完成: 错误提示信息\n          }\n        })\n    }\n    .width('100%')\n    .height('100%')\n\n  }\n}", "id": "8a83641c92670eaf3c66afc4a8e4078aa7710ca1f0fa9f227a4a273c18f1d2ef", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 3.0, "confidence": 0.9, "rationale": "符合ArkTS生态，结构清晰，包含典型组件与状态管理，具备学习价值。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2279, "completion_tokens": 67, "total_tokens": 2346, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 3,\n  \"confidence\": 0.9,\n  \"rationale\": \"符合ArkTS生态，结构清晰，包含典型组件与状态管理，具备学习价值。\"\n}", "llm_formatted": "import DxConstants from '../common/DxConstants';\nimport DxKvStoreUtil from '../common/DxKvStoreUtil';\n\n// 用户模型\nclass Userinfo {\n  username: string\n  password: string\n\n  constructor(username: string, password: string) {\n    this.username = username\n    this.password = password\n  }\n}\n\n@Entry\n@Component\nstruct Index {\n  @State userinfo: Userinfo = new Userinfo(\"dxin\", \"123\")\n\n  async aboutToAppear(): Promise<void> {\n    // KV数据库获取\n    let userinfoStr: string = await DxKvStoreUtil.getData(DxConstants.userInfoKey) as string\n    if (userinfoStr === undefined) {\n      this.userinfo = new Userinfo(\"dd\", \"666\")\n    } else {\n      let currentUserinfo = JSON.parse(userinfoStr) as Userinfo\n      this.userinfo = currentUserinfo\n    }\n  }\n\n  build() {\n    Column({ space: 30 }) {\n      Text(`欢迎${this.userinfo.username},你的密码是${this.userinfo.password}`)\n      TextInput({ placeholder: \"用户名\", text: $$this.userinfo.username })\n        .onFocus(() => {\n          this.userinfo.username = \"\"\n        })\n      TextInput({ placeholder: \"密码\", text: $$this.userinfo.password })\n        .onFocus(() => {\n          this.userinfo.password = \"\"\n        })\n\n      Button(\"KV数据库应用\")\n        .onClick(() => {\n          //   KV数据库存储 注意存储的数据类型不能是对象，只能是 Uint8Array | string | number | boolean\n          let userinfoStr = JSON.stringify(this.userinfo)\n          try {\n            DxKvStoreUtil.putData(DxConstants.userInfoKey, userinfoStr)\n          } catch (e) {\n            // TODO Index.ets 待完成: 错误提示信息\n          }\n        })\n    }\n    .width('100%')\n    .height('100%')\n\n  }\n}", "leaked": true, "text_tokens": 410, "split": "valid"}
{"path": "VideoPlayer~gzl003~876/entry/src/main/ets/viewmodel/HomeVideoListModel.ets", "project_name": "VideoPlayer~gzl003~876", "text": "import image from '@ohos.multimedia.image';\nimport { VideoItem } from './VideoItem';\nimport { VIDEO_DATA } from '../common/constants/CommonConstants';\nimport { GlobalContext } from '../common/util/GlobalContext';\nimport resourceManager from '@ohos.resourceManager';\n\nexport class HomeVideoListModel {\n  private videoLocalList: Array<VideoItem> = [];\n  private videoInternetList: Array<VideoItem> = [];\n\n  /**\n   * Scan the local video.\n   *\n   * @return Local video list data\n   */\n  async getLocalVideo() {\n    this.videoLocalList = [];\n    await this.assemblingVideoBean();\n    GlobalContext.getContext().setObject('videoLocalList', this.videoLocalList);\n    return this.videoLocalList;\n  }\n\n  /**\n   * Assembling the video object\n   */\n  async assemblingVideoBean() {\n    VIDEO_DATA.forEach(async (item: VideoItem) => {\n      let videoBean = await getContext().resourceManager.getRawFd(item.iSrc);\n      let uri = videoBean;\n      this.videoLocalList.push(new VideoItem(item.name, uri, ''));\n    });\n  }\n\n  /**\n   * Scan the internet video.\n   *\n   * @param name Video Name.\n   * @param pixelMap pixelMap object.\n   * @param src Playback Path.\n   * @param duration Video duration.\n   * @return Network video list data.\n   */\n  async setInternetVideo(name: string, src: string, pixelMap?: image.PixelMap) {\n    this.videoInternetList.push(new VideoItem(name, {} as resourceManager.RawFileDescriptor, src, pixelMap));\n    let videoInternetList = this.videoInternetList;\n    GlobalContext.getContext().setObject('videoInternetList', videoInternetList);\n    return videoInternetList;\n  }\n}\n\nlet homeVideoListModel = new HomeVideoListModel();\n\nexport default homeVideoListModel as HomeVideoListModel;", "id": "070e8729a696c6b8c857c5b6d91b3d7efbc8bac17042c457f94903d46c6f20ac", "replica": 1, "decision": "KEEP_WITH_TAG", "labels": [], "arkts_score": 4.0, "quality_score": 3.0, "confidence": 0.9, "rationale": "结构清晰，生态耦合自然，含类型与异步逻辑，但存在潜在空值风险", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 1657, "completion_tokens": 71, "total_tokens": 1728, "raw_response": "{\n  \"decision\": \"KEEP_WITH_TAG\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 3,\n  \"confidence\": 0.9,\n  \"rationale\": \"结构清晰，生态耦合自然，含类型与异步逻辑，但存在潜在空值风险\"\n}", "llm_formatted": "import image from '@ohos.multimedia.image';\nimport { VideoItem } from './VideoItem';\nimport { VIDEO_DATA } from '../common/constants/CommonConstants';\nimport { GlobalContext } from '../common/util/GlobalContext';\nimport resourceManager from '@ohos.resourceManager';\n\nexport class HomeVideoListModel {\n  private videoLocalList: Array<VideoItem> = [];\n  private videoInternetList: Array<VideoItem> = [];\n\n  /**\n   * Scan the local video.\n   *\n   * @return Local video list data\n   */\n  async getLocalVideo() {\n    this.videoLocalList = [];\n    await this.assemblingVideoBean();\n    GlobalContext.getContext().setObject('videoLocalList', this.videoLocalList);\n    return this.videoLocalList;\n  }\n\n  /**\n   * Assembling the video object\n   */\n  async assemblingVideoBean() {\n    VIDEO_DATA.forEach(async (item: VideoItem) => {\n      let videoBean = await getContext().resourceManager.getRawFd(item.iSrc);\n      let uri = videoBean;\n      this.videoLocalList.push(new VideoItem(item.name, uri, ''));\n    });\n  }\n\n  /**\n   * Scan the internet video.\n   *\n   * @param name Video Name.\n   * @param pixelMap pixelMap object.\n   * @param src Playback Path.\n   * @param duration Video duration.\n   * @return Network video list data.\n   */\n  async setInternetVideo(name: string, src: string, pixelMap?: image.PixelMap) {\n    this.videoInternetList.push(new VideoItem(name, {} as resourceManager.RawFileDescriptor, src, pixelMap));\n    let videoInternetList = this.videoInternetList;\n    GlobalContext.getContext().setObject('videoInternetList', videoInternetList);\n    return videoInternetList;\n  }\n}\n\nlet homeVideoListModel = new HomeVideoListModel();\n\nexport default homeVideoListModel as HomeVideoListModel;", "leaked": true, "text_tokens": 389, "split": "valid"}
{"path": "multi-ticket-class~harmonyos_samples~439/entry/src/main/ets/pages/OptionPage.ets", "project_name": "multi-ticket-class~harmonyos_samples~439", "text": "import { ShareIndex, SHARE_INDEX } from '../models/DataModel';\nimport { BreakpointType } from '../utils/BreakpointType';\nimport { StockTable } from '../views/StockTable';\n\n@Component\nexport struct OptionPage {\n  @StorageLink('currentWidthBreakpoint') currentWidthBreakpoint: number = 1;\n  @StorageLink('currentHeightBreakpoint') currentHeightBreakpoint: number = 1;\n  @Consume('pageInfos') pageInfos: NavPathStack;\n\n  @Builder\n  ShareIndexBuilder(info: ShareIndex, index: number) {\n    Column() {\n      Text(info.title)\n        .lineHeight(16)\n        .fontSize(12)\n        .fontWeight(FontWeight.Regular)\n      Column() {\n        Text(info.index)\n          .lineHeight(21)\n          .fontSize(16)\n          .fontColor(index % 2 === 0 ? '#FA4337' : '#1DB775')\n          .fontWeight(FontWeight.Bold)\n        Text(info.priceLimit)\n          .lineHeight(10)\n          .fontSize(10)\n          .fontColor(index % 2 === 0 ? '#FA4337' : '#1DB775')\n          .fontWeight(FontWeight.Medium)\n      }\n      .height(32)\n    }\n    .width(new BreakpointType(78, 101, 96).getValue(this.currentWidthBreakpoint))\n    .height(73)\n    .borderRadius(8)\n    .justifyContent(FlexAlign.SpaceBetween)\n    .padding({\n      top: 10,\n      bottom: 12\n    })\n  }\n\n  build() {\n    Column() {\n      // Self-Selected Stock Top Headline\n      Row() {\n        Text($r('app.string.self_select_stock'))\n          .fontSize(24)\n          .height(32)\n          .fontWeight(700)\n      }\n      .width('100%')\n      .height(56)\n      .padding({\n        right: new BreakpointType(16, 24, 32).getValue(this.currentWidthBreakpoint),\n        left: new BreakpointType(16, 24, 32).getValue(this.currentWidthBreakpoint)\n      })\n\n      // [Start stock_list_area]\n      // List of stock indices\n      Row() {\n        List({\n          space: new BreakpointType(13, 14, 16).getValue(this.currentWidthBreakpoint),\n          initialIndex: 0\n        }) {\n          ForEach(SHARE_INDEX, (item: ShareIndex, index: number) => {\n            ListItem() {\n              this.ShareIndexBuilder(item, index)\n            }\n            .margin({\n              left: index === 0 ? new BreakpointType(16, 24, 32).getValue(this.currentWidthBreakpoint) : 0\n            })\n          }, (item: ShareIndex, index: number) => (item.priceLimit + index).toString())\n        }\n        // [StartExclude stock_list_area]\n        .height(73)\n        .scrollBar(BarState.Off)\n        .listDirection(Axis.Horizontal)\n        .layoutWeight(1)\n        // [EndExclude stock_list_area]\n\n        // Fixed Area.\n        Row() {\n          // [StartExclude stock_list_area]\n          Column() {\n            Text($r('app.string.stock_company'))\n              .lineHeight(16)\n              .fontSize(12)\n              .fontColor('#FA4337')\n              .fontWeight(FontWeight.Medium)\n              .padding({\n                bottom: 8\n              })\n            Column() {\n              Text($r('app.string.stock_text_start'))\n                .maxLines(1)\n                .fontSize(10)\n                .fontColor('#FA4337')\n                .margin({\n                  bottom: 2\n                })\n              Text($r('app.string.stock_text_end'))\n                .fontSize(10)\n                .fontColor('#FA4337')\n                .maxLines(1)\n            }\n            .height(32)\n          }\n          .justifyContent(FlexAlign.SpaceBetween)\n\n          SymbolGlyph($r('sys.symbol.chevron_right'))\n            .fontColor(['#FA4337'])\n            .fontSize(20)\n            .margin({\n              bottom: 40,\n              left: new BreakpointType(4, 12, 18).getValue(this.currentWidthBreakpoint)\n            })\n          // [EndExclude stock_list_area]\n        }\n        .width(new BreakpointType(78, 101, 96).getValue(this.currentWidthBreakpoint))\n        // [StartExclude stock_list_area]\n        .height(73)\n        .justifyContent(FlexAlign.Center)\n        .borderRadius(8)\n        .linearGradient({\n          direction: GradientDirection.Bottom, // Gradient Direction\n          repeating: true, // Does the gradient color repeat\n          colors: [['#FFF9F9', 0], ['#FFFAFA', 0.5], ['#FFFEFE', 0.7], ['#FFFFFF', 1]]\n        })\n        // [EndExclude stock_list_area]\n        .margin({\n          right: new BreakpointType(16, 24, 32).getValue(this.currentWidthBreakpoint)\n        })\n      }\n      // [End stock_list_area]\n      .width('100%')\n      .height(71)\n      .justifyContent(FlexAlign.Center)\n      .alignItems(VerticalAlign.Center)\n\n      Blank()\n        .width('100%')\n        .height(1)\n        .backgroundColor($r('sys.color.gray_01'))\n\n      Column() {\n        // [Start stock_toolbar_area]\n        Row() {\n          Column() {\n            Text($r('app.string.all'))\n            // [StartExclude stock_toolbar_area]\n              .fontSize(16)\n              .fontWeight(700)\n              .fontColor('#FA4337')\n              .height(21)\n              .focusable(true)\n            // [EndExclude stock_toolbar_area]\n          }\n          .border({\n            width: { bottom: 2 },\n            color: { bottom: '#FA4337' },\n            style: { bottom: BorderStyle.Solid }\n          })\n\n          Blank()\n          Row() {\n            SymbolGlyph($r('sys.symbol.rectangle_on_rectangle'))\n            // [StartExclude stock_toolbar_area]\n              .fontColor([$r('sys.color.icon_primary')])\n              .fontSize(24)\n              .margin({\n                right: 24\n              })\n            // [EndExclude stock_toolbar_area]\n            SymbolGlyph($r('sys.symbol.line_3_horizontal'))\n            // [StartExclude stock_toolbar_area]\n              .fontColor([$r('sys.color.icon_primary')])\n              .fontSize(24)\n            // [EndExclude stock_toolbar_area]\n          }\n        }\n        .width('100%')\n        .height(48)\n        .alignItems(VerticalAlign.Center)\n        .padding({\n          right: new BreakpointType(16, 24, 32).getValue(this.currentWidthBreakpoint),\n          left: new BreakpointType(16, 24, 32).getValue(this.currentWidthBreakpoint)\n        })\n        // [End stock_toolbar_area]\n\n        // Stock table list\n        StockTable()\n      }\n\n      // Add custom buttons\n      Row() {\n        Row() {\n          Text($r('app.string.add_custom_options'))\n            .fontSize(16)\n            .fontColor('#999999')\n        }\n        .justifyContent(FlexAlign.Center)\n        .alignItems(VerticalAlign.Center)\n        .borderColor('#E5E5E5')\n        .borderWidth(1)\n        .borderRadius(20)\n        .width(240)\n        .height(40)\n      }\n      .width('100%')\n      .justifyContent(FlexAlign.Center)\n      .margin({\n        top: 24\n      })\n    }\n    .width('100%')\n    .height('100%')\n    .padding({\n      top: AppStorage.get<number>('statusBarHeight')\n    })\n  }\n}", "id": "0fe6d59e35ce549efe2de74892b9539a662dcfbb69081cac97ec5a0876ebb436", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "ArkTS语法规范，生态耦合自然，结构清晰，具有学习价值", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 3002, "completion_tokens": 69, "total_tokens": 3071, "raw_response": "```json\n{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"ArkTS语法规范，生态耦合自然，结构清晰，具有学习价值\"\n}\n```", "llm_formatted": "import { ShareIndex, SHARE_INDEX } from '../models/DataModel';\nimport { BreakpointType } from '../utils/BreakpointType';\nimport { StockTable } from '../views/StockTable';\n\n@Component\nexport struct OptionPage {\n  @StorageLink('currentWidthBreakpoint') currentWidthBreakpoint: number = 1;\n  @StorageLink('currentHeightBreakpoint') currentHeightBreakpoint: number = 1;\n  @Consume('pageInfos') pageInfos: NavPathStack;\n\n  @Builder\n  ShareIndexBuilder(info: ShareIndex, index: number) {\n    Column() {\n      Text(info.title)\n        .lineHeight(16)\n        .fontSize(12)\n        .fontWeight(FontWeight.Regular)\n      Column() {\n        Text(info.index)\n          .lineHeight(21)\n          .fontSize(16)\n          .fontColor(index % 2 === 0 ? '#FA4337' : '#1DB775')\n          .fontWeight(FontWeight.Bold)\n        Text(info.priceLimit)\n          .lineHeight(10)\n          .fontSize(10)\n          .fontColor(index % 2 === 0 ? '#FA4337' : '#1DB775')\n          .fontWeight(FontWeight.Medium)\n      }\n      .height(32)\n    }\n    .width(new BreakpointType(78, 101, 96).getValue(this.currentWidthBreakpoint))\n    .height(73)\n    .borderRadius(8)\n    .justifyContent(FlexAlign.SpaceBetween)\n    .padding({\n      top: 10,\n      bottom: 12\n    })\n  }\n\n  build() {\n    Column() {\n      // Self-Selected Stock Top Headline\n      Row() {\n        Text($r('app.string.self_select_stock'))\n          .fontSize(24)\n          .height(32)\n          .fontWeight(700)\n      }\n      .width('100%')\n      .height(56)\n      .padding({\n        right: new BreakpointType(16, 24, 32).getValue(this.currentWidthBreakpoint),\n        left: new BreakpointType(16, 24, 32).getValue(this.currentWidthBreakpoint)\n      })\n\n      // [Start stock_list_area]\n      // List of stock indices\n      Row() {\n        List({\n          space: new BreakpointType(13, 14, 16).getValue(this.currentWidthBreakpoint),\n          initialIndex: 0\n        }) {\n          ForEach(SHARE_INDEX, (item: ShareIndex, index: number) => {\n            ListItem() {\n              this.ShareIndexBuilder(item, index)\n            }\n            .margin({\n              left: index === 0 ? new BreakpointType(16, 24, 32).getValue(this.currentWidthBreakpoint) : 0\n            })\n          }, (item: ShareIndex, index: number) => (item.priceLimit + index).toString())\n        }\n        // [StartExclude stock_list_area]\n        .height(73)\n        .scrollBar(BarState.Off)\n        .listDirection(Axis.Horizontal)\n        .layoutWeight(1)\n        // [EndExclude stock_list_area]\n\n        // Fixed Area.\n        Row() {\n          // [StartExclude stock_list_area]\n          Column() {\n            Text($r('app.string.stock_company'))\n              .lineHeight(16)\n              .fontSize(12)\n              .fontColor('#FA4337')\n              .fontWeight(FontWeight.Medium)\n              .padding({\n                bottom: 8\n              })\n            Column() {\n              Text($r('app.string.stock_text_start'))\n                .maxLines(1)\n                .fontSize(10)\n                .fontColor('#FA4337')\n                .margin({\n                  bottom: 2\n                })\n              Text($r('app.string.stock_text_end'))\n                .fontSize(10)\n                .fontColor('#FA4337')\n                .maxLines(1)\n            }\n            .height(32)\n          }\n          .justifyContent(FlexAlign.SpaceBetween)\n\n          SymbolGlyph($r('sys.symbol.chevron_right'))\n            .fontColor(['#FA4337'])\n            .fontSize(20)\n            .margin({\n              bottom: 40,\n              left: new BreakpointType(4, 12, 18).getValue(this.currentWidthBreakpoint)\n            })\n          // [EndExclude stock_list_area]\n        }\n        .width(new BreakpointType(78, 101, 96).getValue(this.currentWidthBreakpoint))\n        // [StartExclude stock_list_area]\n        .height(73)\n        .justifyContent(FlexAlign.Center)\n        .borderRadius(8)\n        .linearGradient({\n          direction: GradientDirection.Bottom, // Gradient Direction\n          repeating: true, // Does the gradient color repeat\n          colors: [['#FFF9F9', 0], ['#FFFAFA', 0.5], ['#FFFEFE', 0.7], ['#FFFFFF', 1]]\n        })\n        // [EndExclude stock_list_area]\n        .margin({\n          right: new BreakpointType(16, 24, 32).getValue(this.currentWidthBreakpoint)\n        })\n      }\n      // [End stock_list_area]\n      .width('100%')\n      .height(71)\n      .justifyContent(FlexAlign.Center)\n      .alignItems(VerticalAlign.Center)\n\n      Blank()\n        .width('100%')\n        .height(1)\n        .backgroundColor($r('sys.color.gray_01'))\n\n      Column() {\n        // [Start stock_toolbar_area]\n        Row() {\n          Column() {\n            Text($r('app.string.all'))\n            // [StartExclude stock_toolbar_area]\n              .fontSize(16)\n              .fontWeight(700)\n              .fontColor('#FA4337')\n              .height(21)\n              .focusable(true)\n            // [EndExclude stock_toolbar_area]\n          }\n          .border({\n            width: { bottom: 2 },\n            color: { bottom: '#FA4337' },\n            style: { bottom: BorderStyle.Solid }\n          })\n\n          Blank()\n          Row() {\n            SymbolGlyph($r('sys.symbol.rectangle_on_rectangle'))\n            // [StartExclude stock_toolbar_area]\n              .fontColor([$r('sys.color.icon_primary')])\n              .fontSize(24)\n              .margin({\n                right: 24\n              })\n            // [EndExclude stock_toolbar_area]\n            SymbolGlyph($r('sys.symbol.line_3_horizontal'))\n            // [StartExclude stock_toolbar_area]\n              .fontColor([$r('sys.color.icon_primary')])\n              .fontSize(24)\n            // [EndExclude stock_toolbar_area]\n          }\n        }\n        .width('100%')\n        .height(48)\n        .alignItems(VerticalAlign.Center)\n        .padding({\n          right: new BreakpointType(16, 24, 32).getValue(this.currentWidthBreakpoint),\n          left: new BreakpointType(16, 24, 32).getValue(this.currentWidthBreakpoint)\n        })\n        // [End stock_toolbar_area]\n\n        // Stock table list\n        StockTable()\n      }\n\n      // Add custom buttons\n      Row() {\n        Row() {\n          Text($r('app.string.add_custom_options'))\n            .fontSize(16)\n            .fontColor('#999999')\n        }\n        .justifyContent(FlexAlign.Center)\n        .alignItems(VerticalAlign.Center)\n        .borderColor('#E5E5E5')\n        .borderWidth(1)\n        .borderRadius(20)\n        .width(240)\n        .height(40)\n      }\n      .width('100%')\n      .justifyContent(FlexAlign.Center)\n      .margin({\n        top: 24\n      })\n    }\n    .width('100%')\n    .height('100%')\n    .padding({\n      top: AppStorage.get<number>('statusBarHeight')\n    })\n  }\n}", "leaked": true, "text_tokens": 1734, "split": "valid"}
{"path": "xts_acts~openharmony~1331/arkui/ace_c_arkui_test/entry/src/ohosTest/ets/test/image/ImageBrightnessTest.test.ets", "project_name": "xts_acts~openharmony~1331", "text": "import { beforeEach, describe, expect, it, Level } from '@ohos/hypium';\nimport Utils from '../common/Utils';\nimport nativeFunc from 'libnativefunc.so'\n\nexport default function imageBrightnessTest() {\n\n  describe('ImageBrightnessTest', () => {\n\n    beforeEach(async (done: Function) => {\n      await Utils.sleep(100);\n      done();\n    });\n\n    /*\n     * @tc.number     : SUB_ARKUI_CAPI_IMAGE_BRIGHTNESS_0100\n     * @tc.name       : testImageBrightness001\n     * @tc.desc       : testing brightness for image with normal value\n     * @tc.size       : MediumTest\n     * @tc.type       : Function\n     * @tc.level      : Level 1\n     */\n    it('testImageBrightness001', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testImageBrightness001()).assertEqual(0)\n      done()\n    })\n\n    /*\n     * @tc.number     : SUB_ARKUI_CAPI_IMAGE_BRIGHTNESS_0200\n     * @tc.name       : testImageBrightness002\n     * @tc.desc       : testing brightness for image with normal value\n     * @tc.size       : MediumTest\n     * @tc.type       : Function\n     * @tc.level      : Level 1\n     */\n    it('testImageBrightness002', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testImageBrightness002()).assertEqual(0)\n      done()\n    })\n\n    /*\n     * @tc.number     : SUB_ARKUI_CAPI_IMAGE_BRIGHTNESS_0300\n     * @tc.name       : testImageBrightness003\n     * @tc.desc       : testing brightness for image with large value\n     * @tc.size       : MediumTest\n     * @tc.type       : Function\n     * @tc.level      : Level 1\n     */\n    it('testImageBrightness003', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testImageBrightness003()).assertEqual(0)\n      done()\n    })\n\n    /*\n     * @tc.number     : SUB_ARKUI_CAPI_IMAGE_BRIGHTNESS_0400\n     * @tc.name       : testImageBrightness004\n     * @tc.desc       : testing brightness for image with large value\n     * @tc.size       : MediumTest\n     * @tc.type       : Function\n     * @tc.level      : Level 1\n     */\n    it('testImageBrightness004', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testImageBrightness004()).assertEqual(0)\n      done()\n    })\n\n    /*\n     * @tc.number     : SUB_ARKUI_CAPI_IMAGE_BRIGHTNESS_0500\n     * @tc.name       : testImageBrightness005\n     * @tc.desc       : testing brightness for image with large value\n     * @tc.size       : MediumTest\n     * @tc.type       : Function\n     * @tc.level      : Level 1\n     */\n    it('testImageBrightness005', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testImageBrightness005()).assertEqual(0)\n      done()\n    })\n\n  })\n}\n", "id": "fbc5f788d163b9af4ac7898e6bf3865bb017b0b33af68c701f7652360761e33b", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 3.0, "confidence": 0.9, "rationale": "符合ArkTS生态，结构清晰，具备测试用例典型模式与类型使用。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2607, "completion_tokens": 66, "total_tokens": 2673, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 3,\n  \"confidence\": 0.9,\n  \"rationale\": \"符合ArkTS生态，结构清晰，具备测试用例典型模式与类型使用。\"\n}", "llm_formatted": "import { beforeEach, describe, expect, it, Level } from '@ohos/hypium';\nimport Utils from '../common/Utils';\nimport nativeFunc from 'libnativefunc.so'\n\nexport default function imageBrightnessTest() {\n\n  describe('ImageBrightnessTest', () => {\n\n    beforeEach(async (done: Function) => {\n      await Utils.sleep(100);\n      done();\n    });\n\n    /*\n     * @tc.number     : SUB_ARKUI_CAPI_IMAGE_BRIGHTNESS_0100\n     * @tc.name       : testImageBrightness001\n     * @tc.desc       : testing brightness for image with normal value\n     * @tc.size       : MediumTest\n     * @tc.type       : Function\n     * @tc.level      : Level 1\n     */\n    it('testImageBrightness001', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testImageBrightness001()).assertEqual(0)\n      done()\n    })\n\n    /*\n     * @tc.number     : SUB_ARKUI_CAPI_IMAGE_BRIGHTNESS_0200\n     * @tc.name       : testImageBrightness002\n     * @tc.desc       : testing brightness for image with normal value\n     * @tc.size       : MediumTest\n     * @tc.type       : Function\n     * @tc.level      : Level 1\n     */\n    it('testImageBrightness002', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testImageBrightness002()).assertEqual(0)\n      done()\n    })\n\n    /*\n     * @tc.number     : SUB_ARKUI_CAPI_IMAGE_BRIGHTNESS_0300\n     * @tc.name       : testImageBrightness003\n     * @tc.desc       : testing brightness for image with large value\n     * @tc.size       : MediumTest\n     * @tc.type       : Function\n     * @tc.level      : Level 1\n     */\n    it('testImageBrightness003', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testImageBrightness003()).assertEqual(0)\n      done()\n    })\n\n    /*\n     * @tc.number     : SUB_ARKUI_CAPI_IMAGE_BRIGHTNESS_0400\n     * @tc.name       : testImageBrightness004\n     * @tc.desc       : testing brightness for image with large value\n     * @tc.size       : MediumTest\n     * @tc.type       : Function\n     * @tc.level      : Level 1\n     */\n    it('testImageBrightness004', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testImageBrightness004()).assertEqual(0)\n      done()\n    })\n\n    /*\n     * @tc.number     : SUB_ARKUI_CAPI_IMAGE_BRIGHTNESS_0500\n     * @tc.name       : testImageBrightness005\n     * @tc.desc       : testing brightness for image with large value\n     * @tc.size       : MediumTest\n     * @tc.type       : Function\n     * @tc.level      : Level 1\n     */\n    it('testImageBrightness005', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testImageBrightness005()).assertEqual(0)\n      done()\n    })\n\n  })\n}\n", "leaked": true, "text_tokens": 738, "split": "valid"}
{"path": "openharmony_tpc_samples~openharmony-tpc~1660/GSYVideoPlayer-filters/entry/src/main/ets/pages/EffectFilterDemo.ets", "project_name": "openharmony_tpc_samples~openharmony-tpc~1660", "text": "import {\n  BaseVideoPlayer,\n  GlobalContext,\n  OrientationUtil,\n  StandardGSYVideoModel,\n  StandardGSYVideoPlayer\n} from '@ohos/gsyvideoplayer';\nimport router from '@ohos.router';\nimport Window from '@ohos.window';\nimport display from '@ohos.display';\nimport promptAction from '@ohos.promptAction';\n\nlet mDirection = 0;\nlet screenWidth = 0;\n\n@Entry\n@Component\nstruct EffectFilterDemo {\n  @State screenHeight: string = '30%';\n  videoModel: StandardGSYVideoModel = new StandardGSYVideoModel();\n  private type = 0;\n  backClickListener: () => void = () => {\n    if (screenWidth < 1000 && mDirection == 1) {\n      this.changeOrientation();\n    }\n    router.back();\n  }\n  fullClickListener: () => void = () => {\n    this.changeOrientation();\n  }\n  private videoUrl = \"http://1251017968.vod2.myqcloud.com/3eb04eefvodtransgzp1251017968/8782b1285285890810009576163/v.f30.mp4\"\n\n  build() {\n    Row() {\n      Column() {\n        StandardGSYVideoPlayer({\n          videoModel: this.videoModel\n        }).height(this.screenHeight)\n\n        Button('切换滤镜效果').onClick(() => {\n          let player = GlobalContext.getContext().getObject(\"currentPlayer\") as BaseVideoPlayer;\n          this.type++;\n          if (this.type > 2) {\n            this.type = 0;\n          }\n          let text = '';\n          if (player) {\n            player.setEffectFilter(this.type);\n            switch (this.type) {\n              case 0:\n                text = '无效果';\n                break;\n              case 1:\n                text = '黑白';\n                break;\n              case 2:\n                text = '网格';\n                break;\n            }\n            promptAction.showToast({\n              message: text\n            })\n          }\n        })\n\n      }.width('100%')\n    }\n  }\n\n  async aboutToAppear() {\n    this.videoModel.setUrl(this.videoUrl);\n    this.videoModel.setTitle(\"这是测试视频的标题\");\n    this.videoModel.setBackClickListener(this.backClickListener);\n    this.videoModel.setFullClickListener(this.fullClickListener);\n    this.videoModel.setCoverImage($r('app.media.app_icon'));\n    mDirection = this.getDirection();\n    screenWidth = px2vp(display.getDefaultDisplaySync().width);\n  }\n\n  aboutToDisappear() {\n    let player = GlobalContext.getContext().getObject(\"currentPlayer\") as BaseVideoPlayer;\n    if (player) {\n      player.stop();\n    }\n  }\n\n  onPageShow() {\n    let player = GlobalContext.getContext().getObject(\"currentPlayer\") as BaseVideoPlayer;\n    if (player) {\n      player.resumePlay();\n    }\n  }\n\n  onPageHide() {\n    let player = GlobalContext.getContext().getObject(\"currentPlayer\") as BaseVideoPlayer;\n    if (player) {\n      player.pause();\n    }\n  }\n\n  onBackPress() {\n    if (screenWidth < 1000 && mDirection == 1) {\n      this.changeOrientation();\n    }\n    let player = GlobalContext.getContext().getObject(\"currentPlayer\") as BaseVideoPlayer;\n    if (player) {\n      player.stop();\n    }\n  }\n\n  private getDirection(): number {\n    return getContext().getApplicationContext().resourceManager.getConfigurationSync().direction;\n  }\n\n  private changeOrientation() {\n    if (screenWidth > 1000) {\n      if (mDirection == 0) {\n        this.screenHeight = '100%';\n        mDirection = 1;\n      } else {\n        this.screenHeight = '30%';\n        mDirection = 0;\n      }\n    } else {\n      if (mDirection == 0) {\n        OrientationUtil.changeOrientation(getContext(), Window.Orientation.LANDSCAPE_INVERTED);\n        this.screenHeight = '100%';\n        mDirection = 1;\n      } else {\n        OrientationUtil.changeOrientation(getContext(), Window.Orientation.PORTRAIT);\n        this.screenHeight = '30%';\n        mDirection = 0;\n      }\n    }\n  }\n}\n", "id": "b573327f419d9692b07ba0a018a3bff14492c28e40256296b537a90ac45b2ec8", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "ArkTS生态耦合良好，结构清晰，具备实际应用价值与学习参考性。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2781, "completion_tokens": 68, "total_tokens": 2849, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"ArkTS生态耦合良好，结构清晰，具备实际应用价值与学习参考性。\"\n}", "llm_formatted": "import {\n  BaseVideoPlayer,\n  GlobalContext,\n  OrientationUtil,\n  StandardGSYVideoModel,\n  StandardGSYVideoPlayer\n} from '@ohos/gsyvideoplayer';\nimport router from '@ohos.router';\nimport Window from '@ohos.window';\nimport display from '@ohos.display';\nimport promptAction from '@ohos.promptAction';\n\nlet mDirection = 0;\nlet screenWidth = 0;\n\n@Entry\n@Component\nstruct EffectFilterDemo {\n  @State screenHeight: string = '30%';\n  videoModel: StandardGSYVideoModel = new StandardGSYVideoModel();\n  private type = 0;\n  backClickListener: () => void = () => {\n    if (screenWidth < 1000 && mDirection == 1) {\n      this.changeOrientation();\n    }\n    router.back();\n  }\n  fullClickListener: () => void = () => {\n    this.changeOrientation();\n  }\n  private videoUrl = \"http://1251017968.vod2.myqcloud.com/3eb04eefvodtransgzp1251017968/8782b1285285890810009576163/v.f30.mp4\"\n\n  build() {\n    Row() {\n      Column() {\n        StandardGSYVideoPlayer({\n          videoModel: this.videoModel\n        }).height(this.screenHeight)\n\n        Button('切换滤镜效果').onClick(() => {\n          let player = GlobalContext.getContext().getObject(\"currentPlayer\") as BaseVideoPlayer;\n          this.type++;\n          if (this.type > 2) {\n            this.type = 0;\n          }\n          let text = '';\n          if (player) {\n            player.setEffectFilter(this.type);\n            switch (this.type) {\n              case 0:\n                text = '无效果';\n                break;\n              case 1:\n                text = '黑白';\n                break;\n              case 2:\n                text = '网格';\n                break;\n            }\n            promptAction.showToast({\n              message: text\n            })\n          }\n        })\n\n      }.width('100%')\n    }\n  }\n\n  async aboutToAppear() {\n    this.videoModel.setUrl(this.videoUrl);\n    this.videoModel.setTitle(\"这是测试视频的标题\");\n    this.videoModel.setBackClickListener(this.backClickListener);\n    this.videoModel.setFullClickListener(this.fullClickListener);\n    this.videoModel.setCoverImage($r('app.media.app_icon'));\n    mDirection = this.getDirection();\n    screenWidth = px2vp(display.getDefaultDisplaySync().width);\n  }\n\n  aboutToDisappear() {\n    let player = GlobalContext.getContext().getObject(\"currentPlayer\") as BaseVideoPlayer;\n    if (player) {\n      player.stop();\n    }\n  }\n\n  onPageShow() {\n    let player = GlobalContext.getContext().getObject(\"currentPlayer\") as BaseVideoPlayer;\n    if (player) {\n      player.resumePlay();\n    }\n  }\n\n  onPageHide() {\n    let player = GlobalContext.getContext().getObject(\"currentPlayer\") as BaseVideoPlayer;\n    if (player) {\n      player.pause();\n    }\n  }\n\n  onBackPress() {\n    if (screenWidth < 1000 && mDirection == 1) {\n      this.changeOrientation();\n    }\n    let player = GlobalContext.getContext().getObject(\"currentPlayer\") as BaseVideoPlayer;\n    if (player) {\n      player.stop();\n    }\n  }\n\n  private getDirection(): number {\n    return getContext().getApplicationContext().resourceManager.getConfigurationSync().direction;\n  }\n\n  private changeOrientation() {\n    if (screenWidth > 1000) {\n      if (mDirection == 0) {\n        this.screenHeight = '100%';\n        mDirection = 1;\n      } else {\n        this.screenHeight = '30%';\n        mDirection = 0;\n      }\n    } else {\n      if (mDirection == 0) {\n        OrientationUtil.changeOrientation(getContext(), Window.Orientation.LANDSCAPE_INVERTED);\n        this.screenHeight = '100%';\n        mDirection = 1;\n      } else {\n        OrientationUtil.changeOrientation(getContext(), Window.Orientation.PORTRAIT);\n        this.screenHeight = '30%';\n        mDirection = 0;\n      }\n    }\n  }\n}\n", "leaked": true, "text_tokens": 912, "split": "valid"}
{"path": "HMOS_World_Demo~王鹏~2422/OneShotTwoPageDemo/entry/src/main/ets/pages/Index.ets", "project_name": "HMOS_World_Demo~王鹏~2422", "text": "// Index.ets\nimport { AnimateCallback, CustomTransition } from '../CustomTransition/CustomNavigationUtils';\nimport { MyNodeController, createMyNode, getMyNode } from '../NodeContainer/CustomComponent';\nimport { ComponentAttrUtils } from '../utils/ComponentAttrUtils';\nimport { RectInfoInPx } from '../utils/ComponentAttrUtils';\nimport { WindowUtils } from '../utils/WindowUtils';\n\n\nconst TAG: string = 'Index';\n\n@Builder\nexport function PageIndexBuilder() {\n  Index();\n}\n\n@Entry\n@Component\nstruct Index {\n  @Provide('pageInfo') pageInfos: NavPathStack = new NavPathStack();\n  private pageId: number = -1;\n  @State myNodeController: MyNodeController | undefined = new MyNodeController(false);\n\n  aboutToAppear(): void {\n    this.pageId = this.pageInfos.getAllPathName().length - 1;\n    this.registerCustomTransition();\n    //this.pageInfos.pushPath({ name: 'PageOne' });\n    let node = getMyNode();\n    if (node == undefined) {\n      // 新建自定义节点\n      createMyNode(this.getUIContext());\n    }\n    this.myNodeController = getMyNode();\n  }\n\n  private doFinishTransition(): void {\n    // PageTwo结束转场时将节点从PageTwo迁移回PageOne\n    this.myNodeController = getMyNode();\n  }\n\n  private registerCustomTransition(): void {\n    // 注册自定义动画协议\n    CustomTransition.getInstance().registerNavParam(this.pageId,\n      (isPush: boolean, isExit: boolean, transitionProxy: NavigationTransitionProxy) => {\n      }, 500);\n  }\n\n  private onCardClicked(): void {\n    let cardItemInfo: RectInfoInPx =\n      ComponentAttrUtils.getRectInfoById(WindowUtils.window.getUIContext(), 'card');\n    let param: Record<string, Object> = {};\n    param['cardItemInfo'] = cardItemInfo;\n    param['doDefaultTransition'] = (myController: MyNodeController) => {\n      this.doFinishTransition()\n    };\n    this.pageInfos.pushPath({ name: 'PageTwo', param: param });\n    // 自定义节点从PageOne下树\n    if (this.myNodeController != undefined) {\n      (this.myNodeController as MyNodeController).onRemove();\n    }\n  }\n\n  build() {\n    Navigation(this.pageInfos) {\n\n      Stack() {\n        Column({ space: 20 }) {\n          Row({ space: 10 }) {\n            // Image($r(\"app.media.avatar\"))\n            //   .size({ width: 50, height: 50 })\n            //   .borderRadius(25)\n            //   .clip(true)\n            Column()\n              .backgroundColor(Color.Green)\n              .size({ width: 50, height: 50 })\n              .borderRadius(25)\n              .clip(true)\n            Text('Alice')\n          }\n          .justifyContent(FlexAlign.Start)\n\n          Text('你好世界')\n\n          NodeContainer(this.myNodeController)\n            .size({ width: 320, height: 250 })\n            .onClick(() => {\n              this.onCardClicked()\n            })\n        }\n        .alignItems(HorizontalAlign.Start)\n        .margin(30)\n      }\n      .width(\"100%\")\n\n    }\n    .onDisAppear(() => {\n      CustomTransition.getInstance().unRegisterNavParam(this.pageId);\n      // 自定义节点从PageOne下树\n      if (this.myNodeController != undefined) {\n        (this.myNodeController as MyNodeController).onRemove();\n      }\n    })\n    //.hideNavBar(true)\n    .customNavContentTransition((from: NavContentInfo, to: NavContentInfo, operation: NavigationOperation) => {\n      console.log(`tagtestswap from:${from.name} to ${to.name}，fromindex:${from.index} ,toindex: ${to.index}， mode: ${to.mode} operation: ${operation}`);\n\n      // 需要对转场页面是否注册了animation进行判断，来决定是否进行自定义转场\n      let fromParam: AnimateCallback = CustomTransition.getInstance().getAnimateParam(from.index);\n      let toParam: AnimateCallback = CustomTransition.getInstance().getAnimateParam(to.index);\n      if (!fromParam.animation || !toParam.animation) {\n        return undefined;\n      }\n      console.log(`tagtestswap fromParam ${fromParam.timeout} toParam ${toParam.timeout}`);\n\n      // 一切判断完成后，构造customAnimation给系统侧调用，执行自定义转场动画\n      let customAnimation: NavigationAnimatedTransition = {\n        onTransitionEnd: (isSuccess: boolean) => {\n          console.log(TAG, `current transition result is ${isSuccess}`);\n        },\n        timeout: 2000,\n        transition: (transitionProxy: NavigationTransitionProxy) => {\n          console.log(TAG, 'trigger transition callback');\n          if (fromParam.animation) {\n            console.log(`operation == NavigationOperation.PUSH, true, transitionProxy :`+ JSON.stringify(transitionProxy.from));\n            fromParam.animation(operation == NavigationOperation.PUSH, true, transitionProxy);\n          }\n          if (toParam.animation) {\n            console.log(`operation == NavigationOperation.PUSH, true, transitionProxy :`+ JSON.stringify(transitionProxy.to));\n            toParam.animation(operation == NavigationOperation.PUSH, false, transitionProxy);\n          }\n        }\n      };\n      return customAnimation;\n    })\n  }\n}", "id": "15298050d615f457a6ed4e30bbf8d3e0d24fa7b16e3148c8e8eca2d9dd2e0d6a", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "ArkTS代码结构完整，生态耦合自然，具备良好的类型与逻辑表达。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 3027, "completion_tokens": 67, "total_tokens": 3094, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"ArkTS代码结构完整，生态耦合自然，具备良好的类型与逻辑表达。\"\n}", "llm_formatted": "// Index.ets\nimport { AnimateCallback, CustomTransition } from '../CustomTransition/CustomNavigationUtils';\nimport { MyNodeController, createMyNode, getMyNode } from '../NodeContainer/CustomComponent';\nimport { ComponentAttrUtils } from '../utils/ComponentAttrUtils';\nimport { RectInfoInPx } from '../utils/ComponentAttrUtils';\nimport { WindowUtils } from '../utils/WindowUtils';\n\n\nconst TAG: string = 'Index';\n\n@Builder\nexport function PageIndexBuilder() {\n  Index();\n}\n\n@Entry\n@Component\nstruct Index {\n  @Provide('pageInfo') pageInfos: NavPathStack = new NavPathStack();\n  private pageId: number = -1;\n  @State myNodeController: MyNodeController | undefined = new MyNodeController(false);\n\n  aboutToAppear(): void {\n    this.pageId = this.pageInfos.getAllPathName().length - 1;\n    this.registerCustomTransition();\n    //this.pageInfos.pushPath({ name: 'PageOne' });\n    let node = getMyNode();\n    if (node == undefined) {\n      // 新建自定义节点\n      createMyNode(this.getUIContext());\n    }\n    this.myNodeController = getMyNode();\n  }\n\n  private doFinishTransition(): void {\n    // PageTwo结束转场时将节点从PageTwo迁移回PageOne\n    this.myNodeController = getMyNode();\n  }\n\n  private registerCustomTransition(): void {\n    // 注册自定义动画协议\n    CustomTransition.getInstance().registerNavParam(this.pageId,\n      (isPush: boolean, isExit: boolean, transitionProxy: NavigationTransitionProxy) => {\n      }, 500);\n  }\n\n  private onCardClicked(): void {\n    let cardItemInfo: RectInfoInPx =\n      ComponentAttrUtils.getRectInfoById(WindowUtils.window.getUIContext(), 'card');\n    let param: Record<string, Object> = {};\n    param['cardItemInfo'] = cardItemInfo;\n    param['doDefaultTransition'] = (myController: MyNodeController) => {\n      this.doFinishTransition()\n    };\n    this.pageInfos.pushPath({ name: 'PageTwo', param: param });\n    // 自定义节点从PageOne下树\n    if (this.myNodeController != undefined) {\n      (this.myNodeController as MyNodeController).onRemove();\n    }\n  }\n\n  build() {\n    Navigation(this.pageInfos) {\n\n      Stack() {\n        Column({ space: 20 }) {\n          Row({ space: 10 }) {\n            // Image($r(\"app.media.avatar\"))\n            //   .size({ width: 50, height: 50 })\n            //   .borderRadius(25)\n            //   .clip(true)\n            Column()\n              .backgroundColor(Color.Green)\n              .size({ width: 50, height: 50 })\n              .borderRadius(25)\n              .clip(true)\n            Text('Alice')\n          }\n          .justifyContent(FlexAlign.Start)\n\n          Text('你好世界')\n\n          NodeContainer(this.myNodeController)\n            .size({ width: 320, height: 250 })\n            .onClick(() => {\n              this.onCardClicked()\n            })\n        }\n        .alignItems(HorizontalAlign.Start)\n        .margin(30)\n      }\n      .width(\"100%\")\n\n    }\n    .onDisAppear(() => {\n      CustomTransition.getInstance().unRegisterNavParam(this.pageId);\n      // 自定义节点从PageOne下树\n      if (this.myNodeController != undefined) {\n        (this.myNodeController as MyNodeController).onRemove();\n      }\n    })\n    //.hideNavBar(true)\n    .customNavContentTransition((from: NavContentInfo, to: NavContentInfo, operation: NavigationOperation) => {\n      console.log(`tagtestswap from:${from.name} to ${to.name}，fromindex:${from.index} ,toindex: ${to.index}， mode: ${to.mode} operation: ${operation}`);\n\n      // 需要对转场页面是否注册了animation进行判断，来决定是否进行自定义转场\n      let fromParam: AnimateCallback = CustomTransition.getInstance().getAnimateParam(from.index);\n      let toParam: AnimateCallback = CustomTransition.getInstance().getAnimateParam(to.index);\n      if (!fromParam.animation || !toParam.animation) {\n        return undefined;\n      }\n      console.log(`tagtestswap fromParam ${fromParam.timeout} toParam ${toParam.timeout}`);\n\n      // 一切判断完成后，构造customAnimation给系统侧调用，执行自定义转场动画\n      let customAnimation: NavigationAnimatedTransition = {\n        onTransitionEnd: (isSuccess: boolean) => {\n          console.log(TAG, `current transition result is ${isSuccess}`);\n        },\n        timeout: 2000,\n        transition: (transitionProxy: NavigationTransitionProxy) => {\n          console.log(TAG, 'trigger transition callback');\n          if (fromParam.animation) {\n            console.log(`operation == NavigationOperation.PUSH, true, transitionProxy :`+ JSON.stringify(transitionProxy.from));\n            fromParam.animation(operation == NavigationOperation.PUSH, true, transitionProxy);\n          }\n          if (toParam.animation) {\n            console.log(`operation == NavigationOperation.PUSH, true, transitionProxy :`+ JSON.stringify(transitionProxy.to));\n            toParam.animation(operation == NavigationOperation.PUSH, false, transitionProxy);\n          }\n        }\n      };\n      return customAnimation;\n    })\n  }\n}", "leaked": true, "text_tokens": 1158, "split": "valid"}
{"path": "component-collection~harmonyos_samples~391/entry/src/main/ets/pages/animations/TransitionAnimations/sideBarTransitionSample/SideBarTransitionSample.ets", "project_name": "component-collection~harmonyos_samples~391", "text": "import { ChangePanel } from './ChangePanel';\nimport { TitleBar } from '../../../../common/TitleBar';\n\n@Extend(Column)\nfunction columnStyle() {\n  .padding(16)\n  .borderRadius(24)\n  .backgroundColor(Color.White)\n  .margin({ top: 20, left: 20, right: 20, bottom: 20 })\n}\n\n@Entry\n@Component\nstruct SideBarTransitionSample {\n  @State arr: number[] = [1, 2, 3];\n  @State current: number = 1;\n  @State mShowSideBar: boolean = false;\n  @State mSideBarContainerType: SideBarContainerType = SideBarContainerType.Embed;\n\n  build() {\n    Column() {\n      TitleBar({ title: $r('app.string.side_bar_effects_title') })\n      SideBarContainer(this.mSideBarContainerType) {\n        Column() {\n          ForEach(this.arr, (item: number, index) => {\n            Column({ space: 5 }) {\n              Image($r('app.media.icon')).width(64).height(64)\n              Text(item + '')\n                .fontSize(25)\n                .fontColor(this.current === item ? $r('app.color.tab_bar_select') : $r('app.color.tab_bar_unselect'))\n            }\n            .onClick(() => {\n              this.current = item;\n            })\n          }, (item: number) => JSON.stringify(item))\n        }\n        .visibility(this.mShowSideBar ? Visibility.Visible : Visibility.Hidden)\n        .width('100%')\n        .transition(TransitionEffect.opacity(0))\n        .justifyContent(FlexAlign.SpaceEvenly)\n        .backgroundColor($r('app.color.contentArea_background_color'))\n\n        Column() {\n          Column() {\n            Button(this.mShowSideBar ? $r('app.string.hide_side_bar') : $r('app.string.show_side_bar'))\n              .onClick(() => {\n                this.getUIContext().animateTo({ duration: 2000 }, () => {\n                  this.mShowSideBar = !this.mShowSideBar;\n                })\n              })\n              .id('hide_or_show_sideBar')\n              .margin({ bottom: 5 })\n            ChangePanel({\n              mSideBarContainerType: $mSideBarContainerType\n            })\n          }\n          .columnStyle()\n        }\n      }\n      .showControlButton(false)\n      .showSideBar(this.mShowSideBar)\n      .sideBarWidth(150)\n      .minSideBarWidth(50)\n      .maxSideBarWidth(300)\n    }\n    .size({ width: '100%', height: '100%' })\n    .justifyContent(FlexAlign.Center)\n    .backgroundColor($r('app.color.background_shallow_grey'))\n  }\n}\n", "id": "22f6665d7da6d6bae0ba1b8c5206dca4f6adc99a8802046a4d9f22bff513590b", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "结构完整，生态耦合自然，具备良好的ArkTS实践与可迁移性。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2458, "completion_tokens": 67, "total_tokens": 2525, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"结构完整，生态耦合自然，具备良好的ArkTS实践与可迁移性。\"\n}", "llm_formatted": "import { ChangePanel } from './ChangePanel';\nimport { TitleBar } from '../../../../common/TitleBar';\n\n@Extend(Column)\nfunction columnStyle() {\n  .padding(16)\n  .borderRadius(24)\n  .backgroundColor(Color.White)\n  .margin({ top: 20, left: 20, right: 20, bottom: 20 })\n}\n\n@Entry\n@Component\nstruct SideBarTransitionSample {\n  @State arr: number[] = [1, 2, 3];\n  @State current: number = 1;\n  @State mShowSideBar: boolean = false;\n  @State mSideBarContainerType: SideBarContainerType = SideBarContainerType.Embed;\n\n  build() {\n    Column() {\n      TitleBar({ title: $r('app.string.side_bar_effects_title') })\n      SideBarContainer(this.mSideBarContainerType) {\n        Column() {\n          ForEach(this.arr, (item: number, index) => {\n            Column({ space: 5 }) {\n              Image($r('app.media.icon')).width(64).height(64)\n              Text(item + '')\n                .fontSize(25)\n                .fontColor(this.current === item ? $r('app.color.tab_bar_select') : $r('app.color.tab_bar_unselect'))\n            }\n            .onClick(() => {\n              this.current = item;\n            })\n          }, (item: number) => JSON.stringify(item))\n        }\n        .visibility(this.mShowSideBar ? Visibility.Visible : Visibility.Hidden)\n        .width('100%')\n        .transition(TransitionEffect.opacity(0))\n        .justifyContent(FlexAlign.SpaceEvenly)\n        .backgroundColor($r('app.color.contentArea_background_color'))\n\n        Column() {\n          Column() {\n            Button(this.mShowSideBar ? $r('app.string.hide_side_bar') : $r('app.string.show_side_bar'))\n              .onClick(() => {\n                this.getUIContext().animateTo({ duration: 2000 }, () => {\n                  this.mShowSideBar = !this.mShowSideBar;\n                })\n              })\n              .id('hide_or_show_sideBar')\n              .margin({ bottom: 5 })\n            ChangePanel({\n              mSideBarContainerType: $mSideBarContainerType\n            })\n          }\n          .columnStyle()\n        }\n      }\n      .showControlButton(false)\n      .showSideBar(this.mShowSideBar)\n      .sideBarWidth(150)\n      .minSideBarWidth(50)\n      .maxSideBarWidth(300)\n    }\n    .size({ width: '100%', height: '100%' })\n    .justifyContent(FlexAlign.Center)\n    .backgroundColor($r('app.color.background_shallow_grey'))\n  }\n}", "leaked": true, "text_tokens": 589, "split": "valid"}
{"path": "xts_acts~openharmony~1331/arkui/ace_c_arkui_test/entry/src/ohosTest/ets/test/textarea/TextAreaTypeTest.test.ets", "project_name": "xts_acts~openharmony~1331", "text": "import { expect, describe, it, afterEach, Level } from '@ohos/hypium';\nimport Utils from '../common/Utils';\nimport nativeFunc from 'libnativefunc.so'\n\nexport default function textAreaTypeTest() {\n\n  describe('TextAreaTypeTest', () => {\n\n    afterEach(async (done: Function) => {\n      await Utils.sleep(100);\n      done();\n    })\n\n    /*\n     * @tc.number: SUB_ARKUI_CAPI_TEXTAREA_TYPE_0100\n     * @tc.name: testTextAreaType001\n     * @tc.desc: testing Type for textArea with normal value\n     * @tc.size: MediumTest\n     * @tc.type: Function\n     * @tc.level: Level 1\n     */\n    it('testTextAreaType001', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testTextAreaType001()).assertEqual(0)\n      done();\n    });\n\n    /*\n     * @tc.number: SUB_ARKUI_CAPI_TEXTAREA_TYPE_0200\n     * @tc.name: testTextAreaType002\n     * @tc.desc: testing Type for textArea with normal value\n     * @tc.size: MediumTest\n     * @tc.type: Function\n     * @tc.level: Level 1\n     */\n    it('testTextAreaType002', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testTextAreaType002()).assertEqual(0)\n      done();\n    });\n\n    /*\n     * @tc.number: SUB_ARKUI_CAPI_TEXTAREA_TYPE_0300\n     * @tc.name: testTextAreaType003\n     * @tc.desc: testing Type for textArea with normal value\n     * @tc.size: MediumTest\n     * @tc.type: Function\n     * @tc.level: Level 1\n     */\n    it('testTextAreaType003', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testTextAreaType003()).assertEqual(0)\n      done();\n    });\n\n    /*\n     * @tc.number: SUB_ARKUI_CAPI_TEXTAREA_TYPE_0400\n     * @tc.name: testTextAreaType004\n     * @tc.desc: testing Type for textArea with normal value\n     * @tc.size: MediumTest\n     * @tc.type: Function\n     * @tc.level: Level 1\n     */\n    it('testTextAreaType004', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testTextAreaType004()).assertEqual(0)\n      done();\n    });\n\n    /*\n     * @tc.number: SUB_ARKUI_CAPI_TEXTAREA_TYPE_0500\n     * @tc.name: testTextAreaType005\n     * @tc.desc: testing Type for textArea with abnormal value\n     * @tc.size: MediumTest\n     * @tc.type: Function\n     * @tc.level: Level 1\n     */\n    it('testTextAreaType005', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testTextAreaType005()).assertEqual(0)\n      done();\n    });\n  })\n}\n", "id": "872d2f3e55d234377128b28d42e2754f00d7c8aaee56546b4973c774ecc25230", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 3.0, "confidence": 0.9, "rationale": "符合ArkTS生态，结构清晰，具备测试用例典型特征，有学习价值。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2578, "completion_tokens": 67, "total_tokens": 2645, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 3,\n  \"confidence\": 0.9,\n  \"rationale\": \"符合ArkTS生态，结构清晰，具备测试用例典型特征，有学习价值。\"\n}", "llm_formatted": "import { expect, describe, it, afterEach, Level } from '@ohos/hypium';\nimport Utils from '../common/Utils';\nimport nativeFunc from 'libnativefunc.so';\n\nexport default function textAreaTypeTest() {\n  describe('TextAreaTypeTest', () => {\n    afterEach(async (done: Function) => {\n      await Utils.sleep(100);\n      done();\n    });\n\n    it('testTextAreaType001', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testTextAreaType001()).assertEqual(0);\n      done();\n    });\n\n    it('testTextAreaType002', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testTextAreaType002()).assertEqual(0);\n      done();\n    });\n\n    it('testTextAreaType003', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testTextAreaType003()).assertEqual(0);\n      done();\n    });\n\n    it('testTextAreaType004', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testTextAreaType004()).assertEqual(0);\n      done();\n    });\n\n    it('testTextAreaType005', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testTextAreaType005()).assertEqual(0);\n      done();\n    });\n  });\n}", "leaked": true, "text_tokens": 709, "split": "valid"}
{"path": "xts_acts~openharmony~1331/arkui/ace_c_arkui_test/entry/src/ohosTest/ets/test/refresh/RefreshContentTest.test.ets", "project_name": "xts_acts~openharmony~1331", "text": "import { expect, describe, it, afterEach, Level } from '@ohos/hypium';\nimport Utils from '../common/Utils';\nimport nativeFunc from 'libnativefunc.so'\n\nexport default function refreshContentTest() {\n\n  describe('RefreshContentTest', () => {\n\n    afterEach(async (done: Function) => {\n      await Utils.sleep(100);\n      done();\n    })\n\n    /*\n     * @tc.number     : SUB_ARKUI_CAPI_REFRESH_CONTENT_0100\n     * @tc.name       : testRefreshContent001\n     * @tc.desc       : testing Content for refresh with normal value\n     * @tc.size       : MediumTest\n     * @tc.type       : Function\n     * @tc.level      : Level 1\n     */\n    it('testRefreshContent001', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testRefreshContent001()).assertEqual(0)\n      done();\n    })\n\n    /*\n     * @tc.number     : SUB_ARKUI_CAPI_REFRESH_CONTENT_0200\n     * @tc.name       : testRefreshContent002\n     * @tc.desc       : testing Content for refresh with abnormal value\n     * @tc.size       : MediumTest\n     * @tc.type       : Function\n     * @tc.level      : Level 1\n     */\n    it('testRefreshContent002', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testRefreshContent002()).assertEqual(0)\n      done();\n    })\n\n  })\n}\n", "id": "00fc8a1f4637d8ee021d4398f6a4eae6dad0816175e37f3caab09f2f9e9c2203", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 3.0, "confidence": 0.95, "rationale": "符合ArkTS生态，结构清晰，具备测试用例典型特征，有学习价值。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2210, "completion_tokens": 68, "total_tokens": 2278, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 3,\n  \"confidence\": 0.95,\n  \"rationale\": \"符合ArkTS生态，结构清晰，具备测试用例典型特征，有学习价值。\"\n}", "llm_formatted": "import { expect, describe, it, afterEach, Level } from '@ohos/hypium';\nimport Utils from '../common/Utils';\nimport nativeFunc from 'libnativefunc.so'\n\nexport default function refreshContentTest() {\n\n  describe('RefreshContentTest', () => {\n\n    afterEach(async (done: Function) => {\n      await Utils.sleep(100);\n      done();\n    })\n\n    /*\n     * @tc.number     : SUB_ARKUI_CAPI_REFRESH_CONTENT_0100\n     * @tc.name       : testRefreshContent001\n     * @tc.desc       : testing Content for refresh with normal value\n     * @tc.size       : MediumTest\n     * @tc.type       : Function\n     * @tc.level      : Level 1\n     */\n    it('testRefreshContent001', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testRefreshContent001()).assertEqual(0)\n      done();\n    })\n\n    /*\n     * @tc.number     : SUB_ARKUI_CAPI_REFRESH_CONTENT_0200\n     * @tc.name       : testRefreshContent002\n     * @tc.desc       : testing Content for refresh with abnormal value\n     * @tc.size       : MediumTest\n     * @tc.type       : Function\n     * @tc.level      : Level 1\n     */\n    it('testRefreshContent002', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testRefreshContent002()).assertEqual(0)\n      done();\n    })\n\n  })\n}\n", "leaked": true, "text_tokens": 341, "split": "valid"}
{"path": "xts_acts~openharmony~1331/distributeddatamgr/preferencesSendabletest/entry/src/main/ets/workers/worker.ets", "project_name": "xts_acts~openharmony~1331", "text": "import hilog from '@ohos.hilog';\nimport utils from '@arkts.utils';\nimport worker, { ThreadWorkerGlobalScope, MessageEvents } from '@ohos.worker';\n\nconst workerPort: ThreadWorkerGlobalScope = worker.workerPort;\n\nasync function exclusiveMultiWorkerJob(lockName: string, timeout: number, \n                                        tidBuf: Uint32Array, tid: number): Promise<void> {\n    let lock = utils.locks.AsyncLock.request(lockName);\n    return lock.lockAsync<void>(async () => {\n        let old = Atomics.compareExchange(tidBuf, 0, 0, tid);\n        if (old != 0) {\n            throw new Error('Expected 0, but was: ' + old);\n        }\n        await new Promise<void>(resolve => setTimeout(resolve, timeout));\n        old = Atomics.compareExchange(tidBuf, 0, tid, 0);\n        if (old != tid) {\n            throw new Error('Expected old=' + tid + ', but was: ' + old);\n        }\n    }, utils.locks.AsyncLockMode.EXCLUSIVE);\n}\n\nasync function sharedMultiWorkerJob(lockName: string, timeout: number, idBuf: Uint32Array, id: number) {\n    let lock = utils.locks.AsyncLock.request(lockName);\n    return lock.lockAsync<void>(async () => {\n        let old = Atomics.compareExchange(idBuf, 0, 0, id);\n        if (old != 0) {\n            throw new Error('Expected 0, but was: ' + old);\n        }\n        await new Promise<void>(resolve => setTimeout(resolve, timeout));\n        old = Atomics.compareExchange(idBuf, 0, id, 0);\n        if (old != id) {\n            throw new Error('Expected old=' + id + ', but was: ' + old);\n        }\n    }, utils.locks.AsyncLockMode.SHARED);\n}\n\nasync function twoThreadedDeadlockT2(lockNameL1: string, lockNameL2: string, flagBuf: Uint32Array) {\n    let L2 = utils.locks.AsyncLock.request(lockNameL2);\n    L2.lockAsync<void>(async () => { // F2\n        hilog.info(0x00000, 'Worker:twoThreadedDeadlockT2', '>T2 F2');\n        hilog.info(0x00000, 'Worker:twoThreadedDeadlockT2', '0->1');\n        Atomics.compareExchange(flagBuf, 0, 0, 1);\n        // now lock the second lock\n        let L1 = utils.locks.AsyncLock.request(lockNameL1);\n        await L1.lockAsync<void>(() => {\n            // deadlock should happen, then T1 timeout exceeds and locks will unlock\n        }, utils.locks.AsyncLockMode.EXCLUSIVE);\n    }, utils.locks.AsyncLockMode.EXCLUSIVE);\n}\n\nasync function lockHolderWorkerJob(lockName: string, timeout: number, flagBuf: Uint32Array): Promise<void> {\n    let lock = utils.locks.AsyncLock.request(lockName);\n    lock.lockAsync<void>(async () => {\n        hilog.info(0x00000, 'Worker:lockHolderWorkerJob', '0->1');\n        Atomics.compareExchange(flagBuf, 0, 0, 1);\n        hilog.info(0x00000, 'Worker:lockHolderWorkerJob', '>timeout');\n        await new Promise<void>(resolve => setTimeout(resolve, timeout));\n        hilog.info(0x00000, 'Worker:lockHolderWorkerJob', '<timeout');\n        }, utils.locks.AsyncLockMode.EXCLUSIVE);\n}\n\nworkerPort.onmessage = (e: MessageEvents) => {\n    let result: Promise<void> | null = null;\n    if (e.data['test'] == 'exclusiveMultiWorkerTest') {\n        result = exclusiveMultiWorkerJob(e.data['lockName'], e.data['timeout'], e.data['tidBuf'], e.data['tid']);\n    } else if (e.data['test'] == 'sharedMultiWorkerTest') {\n        result = sharedMultiWorkerJob(e.data['lockName'], e.data['timeout'], e.data['tidBuf'], e.data['tid']);\n    } else if (e.data['test'] == 'twoThreadedDeadlockT2') {\n        result = twoThreadedDeadlockT2(e.data['lockNameL1'], e.data['lockNameL2'], e.data['flagBuf']);\n    } else if (e.data['test'] == 'sequentialLockWorkerTest') {\n        result = lockHolderWorkerJob(e.data['lockName'], e.data['timeout'], e.data['flagBuf']);\n    } else {\n        workerPort.postMessage('FAILED: unknown test ' + e.data['test']);\n        return;\n    }\n    result.then(() => {\n        workerPort.postMessage('PASSED')\n    }, (e: Error) => {\n        workerPort.postMessage('FAILED: ' + e.message);\n    });\n}\n", "id": "dad6893b7d96ef4f0676e539a28646b4b32949ca11e1f7ae0a258de8e4eff2d4", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "ArkTS生态耦合良好，逻辑清晰，涉及多线程与锁机制，具备较高学习价值。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2917, "completion_tokens": 72, "total_tokens": 2989, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"ArkTS生态耦合良好，逻辑清晰，涉及多线程与锁机制，具备较高学习价值。\"\n}", "llm_formatted": "import hilog from '@ohos.hilog';\nimport utils from '@arkts.utils';\nimport worker, { ThreadWorkerGlobalScope, MessageEvents } from '@ohos.worker';\n\nconst workerPort: ThreadWorkerGlobalScope = worker.workerPort;\n\nasync function exclusiveMultiWorkerJob(lockName: string, timeout: number, \n                                        tidBuf: Uint32Array, tid: number): Promise<void> {\n    let lock = utils.locks.AsyncLock.request(lockName);\n    return lock.lockAsync<void>(async () => {\n        let old = Atomics.compareExchange(tidBuf, 0, 0, tid);\n        if (old != 0) {\n            throw new Error('Expected 0, but was: ' + old);\n        }\n        await new Promise<void>(resolve => setTimeout(resolve, timeout));\n        old = Atomics.compareExchange(tidBuf, 0, tid, 0);\n        if (old != tid) {\n            throw new Error('Expected old=' + tid + ', but was: ' + old);\n        }\n    }, utils.locks.AsyncLockMode.EXCLUSIVE);\n}\n\nasync function sharedMultiWorkerJob(lockName: string, timeout: number, idBuf: Uint32Array, id: number) {\n    let lock = utils.locks.AsyncLock.request(lockName);\n    return lock.lockAsync<void>(async () => {\n        let old = Atomics.compareExchange(idBuf, 0, 0, id);\n        if (old != 0) {\n            throw new Error('Expected 0, but was: ' + old);\n        }\n        await new Promise<void>(resolve => setTimeout(resolve, timeout));\n        old = Atomics.compareExchange(idBuf, 0, id, 0);\n        if (old != id) {\n            throw new Error('Expected old=' + id + ', but was: ' + old);\n        }\n    }, utils.locks.AsyncLockMode.SHARED);\n}\n\nasync function twoThreadedDeadlockT2(lockNameL1: string, lockNameL2: string, flagBuf: Uint32Array) {\n    let L2 = utils.locks.AsyncLock.request(lockNameL2);\n    L2.lockAsync<void>(async () => { // F2\n        hilog.info(0x00000, 'Worker:twoThreadedDeadlockT2', '>T2 F2');\n        hilog.info(0x00000, 'Worker:twoThreadedDeadlockT2', '0->1');\n        Atomics.compareExchange(flagBuf, 0, 0, 1);\n        // now lock the second lock\n        let L1 = utils.locks.AsyncLock.request(lockNameL1);\n        await L1.lockAsync<void>(() => {\n            // deadlock should happen, then T1 timeout exceeds and locks will unlock\n        }, utils.locks.AsyncLockMode.EXCLUSIVE);\n    }, utils.locks.AsyncLockMode.EXCLUSIVE);\n}\n\nasync function lockHolderWorkerJob(lockName: string, timeout: number, flagBuf: Uint32Array): Promise<void> {\n    let lock = utils.locks.AsyncLock.request(lockName);\n    lock.lockAsync<void>(async () => {\n        hilog.info(0x00000, 'Worker:lockHolderWorkerJob', '0->1');\n        Atomics.compareExchange(flagBuf, 0, 0, 1);\n        hilog.info(0x00000, 'Worker:lockHolderWorkerJob', '>timeout');\n        await new Promise<void>(resolve => setTimeout(resolve, timeout));\n        hilog.info(0x00000, 'Worker:lockHolderWorkerJob', '<timeout');\n        }, utils.locks.AsyncLockMode.EXCLUSIVE);\n}\n\nworkerPort.onmessage = (e: MessageEvents) => {\n    let result: Promise<void> | null = null;\n    if (e.data['test'] == 'exclusiveMultiWorkerTest') {\n        result = exclusiveMultiWorkerJob(e.data['lockName'], e.data['timeout'], e.data['tidBuf'], e.data['tid']);\n    } else if (e.data['test'] == 'sharedMultiWorkerTest') {\n        result = sharedMultiWorkerJob(e.data['lockName'], e.data['timeout'], e.data['tidBuf'], e.data['tid']);\n    } else if (e.data['test'] == 'twoThreadedDeadlockT2') {\n        result = twoThreadedDeadlockT2(e.data['lockNameL1'], e.data['lockNameL2'], e.data['flagBuf']);\n    } else if (e.data['test'] == 'sequentialLockWorkerTest') {\n        result = lockHolderWorkerJob(e.data['lockName'], e.data['timeout'], e.data['flagBuf']);\n    } else {\n        workerPort.postMessage('FAILED: unknown test ' + e.data['test']);\n        return;\n    }\n    result.then(() => {\n        workerPort.postMessage('PASSED')\n    }, (e: Error) => {\n        workerPort.postMessage('FAILED: ' + e.message);\n    });\n}\n", "leaked": true, "text_tokens": 1048, "split": "valid"}
{"path": "arkui-linux~openEuler~2446/samples/arkui-test/CommonMethod/02_Event/entry/src/main/ets/pages/AppearTest.ets", "project_name": "arkui-linux~openEuler~2446", "text": "import prompt from '@ohos.prompt';\nimport router from '@ohos.router';\n\n@Entry\n@Component\nstruct AppearTest {\n  @State isShow: boolean = true\n  @State changeAppear: string = 'Hide Text'\n  private myText: string = 'Text for onAppear'\n  build() {\n    Column(){\n      Row() {\n        Button('返回', { type: ButtonType.Normal })\n          .height(30)\n          .width(50)\n          .fontColor('#696969')\n          .backgroundColor('#DCDCDC')\n          .onClick(() => {\n            router.replaceUrl({ url: 'pages/MainPage' });\n          })\n          .margin({ top: 80 })\n          .align(Alignment.Start)\n\n        Text('挂载卸载事件')\n          .fontSize(22)\n          .margin({ top: 80, left: 20 })\n      }\n      .width('80%')\n      .margin({ bottom: 30 })\n\n      Column() {\n        Button(this.changeAppear)\n          .onClick(() => {\n            this.isShow = !this.isShow\n          }).margin(15)\n        if (this.isShow) {\n          Text(this.myText).fontSize(26).fontWeight(FontWeight.Bold)\n            .onAppear(() => {\n              this.changeAppear = 'Hide Text'\n              prompt.showToast({\n                message: 'The text is shown',\n                duration: 2000\n              })\n            })\n            .onDisAppear(() => {\n              this.changeAppear = 'Show Text'\n              prompt.showToast({\n                message: 'The text is hidden',\n                duration: 2000\n              })\n            })\n        }\n      }.padding(30).width('100%')\n\n\n    }\n    .backgroundColor($r('app.color.background'))\n    .size({width: '100%', height: '100%'})\n  }\n}", "id": "11ebf293d5ec4cd1f4c9bbdaec9cbeb04ec24ce2177982b6c0471c478b7e2243", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 3.0, "confidence": 0.95, "rationale": "结构完整，生态耦合自然，具备实际业务逻辑与ArkTS特性。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2269, "completion_tokens": 66, "total_tokens": 2335, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 3,\n  \"confidence\": 0.95,\n  \"rationale\": \"结构完整，生态耦合自然，具备实际业务逻辑与ArkTS特性。\"\n}", "llm_formatted": "import prompt from '@ohos.prompt';\nimport router from '@ohos.router';\n\n@Entry\n@Component\nstruct AppearTest {\n  @State isShow: boolean = true\n  @State changeAppear: string = 'Hide Text'\n  private myText: string = 'Text for onAppear'\n  build() {\n    Column(){\n      Row() {\n        Button('返回', { type: ButtonType.Normal })\n          .height(30)\n          .width(50)\n          .fontColor('#696969')\n          .backgroundColor('#DCDCDC')\n          .onClick(() => {\n            router.replaceUrl({ url: 'pages/MainPage' });\n          })\n          .margin({ top: 80 })\n          .align(Alignment.Start)\n\n        Text('挂载卸载事件')\n          .fontSize(22)\n          .margin({ top: 80, left: 20 })\n      }\n      .width('80%')\n      .margin({ bottom: 30 })\n\n      Column() {\n        Button(this.changeAppear)\n          .onClick(() => {\n            this.isShow = !this.isShow\n          }).margin(15)\n        if (this.isShow) {\n          Text(this.myText).fontSize(26).fontWeight(FontWeight.Bold)\n            .onAppear(() => {\n              this.changeAppear = 'Hide Text'\n              prompt.showToast({\n                message: 'The text is shown',\n                duration: 2000\n              })\n            })\n            .onDisAppear(() => {\n              this.changeAppear = 'Show Text'\n              prompt.showToast({\n                message: 'The text is hidden',\n                duration: 2000\n              })\n            })\n        }\n      }.padding(30).width('100%')\n\n\n    }\n    .backgroundColor($r('app.color.background'))\n    .size({width: '100%', height: '100%'})\n  }\n}", "leaked": true, "text_tokens": 400, "split": "valid"}
{"path": "UploadAndDownLoad~dench~760/entry/src/main/ets/pages/Upload.ets", "project_name": "UploadAndDownLoad~dench~760", "text": "import { common } from '@kit.AbilityKit';\nimport { promptAction } from '@kit.ArkUI';\nimport { AddPictures } from '../components/AddPictures';\nimport { BackgroundTaskState, requestUpload, TOAST_BOTTOM } from '@ohos/uploaddownload';\n\nconst TIME_MAX: number = 5;\n\n@Entry\n@Component\nstruct Upload {\n  @StorageLink('isBackground') isBackground: boolean = false;\n  @StorageLink('backTaskState') @Watch('stateChange') backTaskState: BackgroundTaskState = BackgroundTaskState.NONE;\n  @State isBegin: boolean = false;\n  @Provide imageList: Array<string> = [];\n  @State progress: number = 0;\n  @State countdown: number = 0;\n\n  build() {\n    Navigation() {\n      Scroll() {\n        AddPictures()\n      }\n      .padding({ left: 24, right: 24 })\n      .width('100%')\n      .layoutWeight(1)\n      .align(Alignment.Top)\n\n      Column() {\n        Button() {\n          if (this.isBackground && this.backTaskState !== BackgroundTaskState.NONE) {\n            if (this.backTaskState === BackgroundTaskState.RUNNING) {\n              Text($r('app.string.pause'))\n                .fontSize(16)\n                .fontWeight(500)\n                .fontColor($r('app.color.white'))\n            } else {\n              Text($r('app.string.continue'))\n                .fontSize(16)\n                .fontWeight(500)\n                .fontColor($r('app.color.white'))\n            }\n          } else if (this.isBegin && !this.isBackground) {\n            Row() {\n              Progress({ value: this.progress, type: ProgressType.Ring })\n                .width(20)\n                .height(20)\n                .backgroundColor('#FFFFFF')\n                .color('#558DFF')\n                .style({ strokeWidth: 2, scaleCount: 100, scaleWidth: 2 })\n              Text(`${this.getResourceString($r('app.string.uploading'))}${this.progress}%`)\n                .fontSize(16)\n                .fontColor('#FFFFFF')\n                .fontWeight(500)\n                .margin({ left: 12 })\n            }.alignItems(VerticalAlign.Center)\n          } else {\n            if (this.countdown > 0) {\n              Text(`${this.countdown}s`)\n                .fontSize(16)\n                .fontWeight(500)\n                .fontColor($r('app.color.white'))\n            } else {\n              Text($r('app.string.upload'))\n                .fontSize(16)\n                .fontWeight(500)\n                .fontColor($r('app.color.white'))\n            }\n          }\n        }\n        .id('publish')\n        .width('100%')\n        .height(40)\n        .margin({ bottom: this.isBegin ? 16 : 24 })\n        .enabled(this.countdown > 0 ? false : true)\n        .backgroundColor($r('app.color.button_blue'))\n        .onClick(() => {\n          if (this.isBackground && this.backTaskState !== BackgroundTaskState.NONE) {\n            requestUpload.pauseOrResume();\n          } else {\n            this.uploadFiles();\n          }\n        })\n\n        if (this.isBegin) {\n          Button() {\n            Text($r('app.string.cancel'))\n              .fontSize(16)\n              .fontWeight(500)\n              .fontColor($r('app.color.btn_text_blue'))\n          }\n          .id('cancel')\n          .width('100%')\n          .height(40)\n          .margin({ bottom: 24 })\n          .backgroundColor($r('app.color.button_light_gray'))\n          .onClick(() => {\n            // cancel task\n            requestUpload.cancelTask();\n            this.progress = 0;\n            this.isBegin = false;\n          })\n        }\n      }\n      .width('100%')\n      .padding({ left: 24, right: 24 })\n    }\n    .width('100%')\n    .height('100%')\n    .backgroundColor($r('app.color.light_gray'))\n    .title($r('app.string.upload'))\n    .hideBackButton(false)\n    .titleMode(NavigationTitleMode.Mini)\n    .mode(NavigationMode.Stack)\n  }\n\n  aboutToAppear() {\n    this.isBegin = false;\n    this.backTaskState = BackgroundTaskState.NONE;\n  }\n\n  stateChange() {\n    if (this.backTaskState === BackgroundTaskState.NONE) {\n      this.imageList = [];\n    }\n  }\n\n  uploadFiles() {\n    if (this.imageList.length === 0) {\n      return;\n    }\n    if (this.isBackground) {\n      AppStorage.setOrCreate('backTaskState', BackgroundTaskState.RUNNING)\n      requestUpload.uploadFilesBackground(this.imageList);\n      promptAction.showToast({ message: $r('app.string.background_task_start'), bottom: TOAST_BOTTOM });\n    } else {\n      this.isBegin = true;\n      this.progress = 0;\n      requestUpload.uploadFiles(this.imageList, (progress: number, isSucceed: boolean) => {\n        this.progress = progress;\n        if (this.progress === 100 && isSucceed) {\n          this.isBegin = false;\n          this.imageList = [];\n          promptAction.showToast({ message: $r('app.string.upload_success'), bottom: TOAST_BOTTOM })\n        }\n        if (this.progress === 100 && isSucceed === false) {\n          this.isBegin = false;\n          this.countdown = TIME_MAX;\n          let interval = setInterval(() => {\n            if (this.countdown > 0) {\n              this.countdown--;\n            } else {\n              clearInterval(interval);\n            }\n          }, 1000);\n          promptAction.showToast({ message: $r('app.string.upload_fail'), bottom: TOAST_BOTTOM })\n        }\n      });\n    }\n  }\n\n  getResourceString(resource: Resource) {\n    let context = getContext(this) as common.UIAbilityContext;\n    return context.resourceManager.getStringSync(resource.id);\n  }\n}", "id": "16a43cd02d66065edfc53c7203bfc46dbf528612b24936b9718e978711cbc5ed", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "ArkTS语法规范，生态耦合自然，逻辑完整，具学习价值", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2545, "completion_tokens": 69, "total_tokens": 2614, "raw_response": "```json\n{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"ArkTS语法规范，生态耦合自然，逻辑完整，具学习价值\"\n}\n```", "llm_formatted": "ts\nimport { common } from '@kit.AbilityKit';\nimport { promptAction } from '@kit.ArkUI';\nimport { AddPictures } from '../components/AddPictures';\nimport { BackgroundTaskState, requestUpload, TOAST_BOTTOM } from '@ohos/uploaddownload';\n\nconst TIME_MAX: number = 5;\n\n@Entry\n@Component\nstruct Upload {\n  @StorageLink('isBackground') isBackground: boolean = false;\n  @StorageLink('backTaskState') @Watch('stateChange') backTaskState: BackgroundTaskState = BackgroundTaskState.NONE;\n  @State isBegin: boolean = false;\n  @Provide imageList: Array<string> = [];\n  @State progress: number = 0;\n  @State countdown: number = 0;\n\n  build() {\n    Navigation() {\n      Scroll() {\n        AddPictures()\n      }\n      .padding({ left: 24, right: 24 })\n      .width('100%')\n      .layoutWeight(1)\n      .align(Alignment.Top)\n\n      Column() {\n        Button() {\n          if (this.isBackground && this.backTaskState !== BackgroundTaskState.NONE) {\n            if (this.backTaskState === BackgroundTaskState.RUNNING) {\n              Text($r('app.string.pause'))\n                .fontSize(16)\n                .fontWeight(500)\n                .fontColor($r('app.color.white'))\n            } else {\n              Text($r('app.string.continue'))\n                .fontSize(16)\n                .fontWeight(500)\n                .fontColor($r('app.color.white'))\n            }\n          } else if (this.isBegin && !this.isBackground) {\n            Row() {\n              Progress({ value: this.progress, type: ProgressType.Ring })\n                .width(20)\n                .height(20)\n                .backgroundColor('#FFFFFF')\n                .color('#558DFF')\n                .style({ strokeWidth: 2, scaleCount: 100, scaleWidth: 2 })\n              Text(`${this.getResourceString($r('app.string.uploading'))}${this.progress}%`)\n                .fontSize(16)\n                .fontColor('#FFFFFF')\n                .fontWeight(500)\n                .margin({ left: 12 })\n            }.alignItems(VerticalAlign.Center)\n          } else {\n            if (this.countdown > 0) {\n              Text(`${this.countdown}s`)\n                .fontSize(16)\n                .fontWeight(500)\n                .fontColor($r('app.color.white'))\n            } else {\n              Text($r('app.string.upload'))\n                .fontSize(16)\n                .fontWeight(500)\n                .fontColor($r('app.color.white'))\n            }\n          }\n        }\n        .id('publish')\n        .width('100%')\n        .height(40)\n        .margin({ bottom: this.isBegin ? 16 : 24 })\n        .enabled(this.countdown > 0 ? false : true)\n        .backgroundColor($r('app.color.button_blue'))\n        .onClick(() => {\n          if (this.isBackground && this.backTaskState !== BackgroundTaskState.NONE) {\n            requestUpload.pauseOrResume();\n          } else {\n            this.uploadFiles();\n          }\n        })\n\n        if (this.isBegin) {\n          Button() {\n            Text($r('app.string.cancel'))\n              .fontSize(16)\n              .fontWeight(500)\n              .fontColor($r('app.color.btn_text_blue'))\n          }\n          .id('cancel')\n          .width('100%')\n          .height(40)\n          .margin({ bottom: 24 })\n          .backgroundColor($r('app.color.button_light_gray'))\n          .onClick(() => {\n            requestUpload.cancelTask();\n            this.progress = 0;\n            this.isBegin = false;\n          })\n        }\n      }\n      .width('100%')\n      .padding({ left: 24, right: 24 })\n    }\n    .width('100%')\n    .height('100%')\n    .backgroundColor($r('app.color.light_gray'))\n    .title($r('app.string.upload'))\n    .hideBackButton(false)\n    .titleMode(NavigationTitleMode.Mini)\n    .mode(NavigationMode.Stack)\n  }\n\n  aboutToAppear() {\n    this.isBegin = false;\n    this.backTaskState = BackgroundTaskState.NONE;\n  }\n\n  stateChange() {\n    if (this.backTaskState === BackgroundTaskState.NONE) {\n      this.imageList = [];\n    }\n  }\n\n  uploadFiles() {\n    if (this.imageList.length === 0) {\n      return;\n    }\n    if (this.isBackground) {\n      AppStorage.setOrCreate('backTaskState', BackgroundTaskState.RUNNING)\n      requestUpload.uploadFilesBackground(this.imageList);\n      promptAction.showToast({ message: $r('app.string.background_task_start'), bottom: TOAST_BOTTOM });\n    } else {\n      this.isBegin = true;\n      this.progress = 0;\n      requestUpload.uploadFiles(this.imageList, (progress: number, isSucceed: boolean) => {\n        this.progress = progress;\n        if (this.progress === 100 && isSucceed) {\n          this.isBegin = false;\n          this.imageList = [];\n          promptAction.showToast({ message: $r('app.string.upload_success'), bottom: TOAST_BOTTOM })\n        }\n        if (this.progress === 100 && isSucceed === false) {\n          this.isBegin = false;\n          this.countdown = TIME_MAX;\n          let interval = setInterval(() => {\n            if (this.countdown > 0) {\n              this.countdown--;\n            } else {\n              clearInterval(interval);\n            }\n          }, 1000);\n          promptAction.showToast({ message: $r('app.string.upload_fail'), bottom: TOAST_BOTTOM })\n        }\n      });\n    }\n  }\n\n  getResourceString(resource: Resource) {\n    let context = getContext(this) as common.UIAbilityContext;\n    return context.resourceManager.getStringSync(resource.id);\n  }\n}", "leaked": true, "text_tokens": 1277, "split": "valid"}
{"path": "AgileDevHOS~LZ9~110/pandora/src/main/ets/utils/promise/Disposable.ets", "project_name": "AgileDevHOS~LZ9~110", "text": "/**\n * 生命周期控制器\n * Created by zhouL on 2025/8/7.\n */\nexport interface Disposable {\n\n  /** 终止任务 */\n  dispose(): void\n\n  /** 任务是否终止 */\n  isDisposed(): boolean\n\n}\n", "id": "53bfbb280781b713700330e7a905e94d8b49db6fc344bcb76d59ab62964b365a", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 3.0, "quality_score": 4.0, "confidence": 0.9, "rationale": "接口定义清晰，命名语义化，具备可复用性", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 1321, "completion_tokens": 66, "total_tokens": 1387, "raw_response": "```json\n{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 3,\n  \"quality_score\": 4,\n  \"confidence\": 0.9,\n  \"rationale\": \"接口定义清晰，命名语义化，具备可复用性\"\n}\n```", "llm_formatted": "/**\n * 生命周期控制器\n * Created by zhouL on 2025/8/7.\n */\nexport interface Disposable {\n\n  /** 终止任务 */\n  dispose(): void\n\n  /** 任务是否终止 */\n  isDisposed(): boolean\n\n}\n", "leaked": true, "text_tokens": 53, "split": "valid"}
{"path": "component-collection~harmonyos_samples~391/entry/src/main/ets/pages/components/navigation/tabContentSample/TabContentSample.ets", "project_name": "component-collection~harmonyos_samples~391", "text": "import { CommonSwitcher } from '../../../../common/AttributeModificationTool';\nimport { TitleBar } from '../../../../common/TitleBar';\nimport { LEFT_PADDING, RIGHT_PADDING } from '../../ComponentData';\n\n@Extend(Column)\nfunction backgroundStyle() {\n  .width('100%')\n  .padding(12)\n  .borderRadius(16)\n  .backgroundColor(Color.White)\n  .justifyContent(FlexAlign.Start)\n}\n\n@Entry\n@Component\nstruct TabSample {\n  @State barPosition: BarPosition = BarPosition.Start;\n  @State isDisabled: boolean = true;\n  @State isBottomTabBar: boolean = false;\n  @State vertical: boolean = false;\n  private controller: TabsController = new TabsController();\n\n  build() {\n    Flex({ direction: FlexDirection.Column, alignItems: ItemAlign.Center, justifyContent: FlexAlign.Start }) {\n      TitleBar({ title: $r('app.string.tab_content_title') })\n        .flexGrow(0)\n      // component\n      Tabs({\n        barPosition: this.vertical ? BarPosition.Start : this.isBottomTabBar ? BarPosition.End : BarPosition.Start,\n        controller: this.controller\n      }) {\n        TabContent() {\n          Column()\n            .width('100%')\n            .height('100%')\n            .backgroundColor('#00CB87')\n        }\n        .tabBar(new SubTabBarStyle('green')\n          .labelStyle({\n            overflow: TextOverflow.Clip,\n            maxLines: 10,\n            minFontSize: 10,\n            heightAdaptivePolicy: TextHeightAdaptivePolicy.MAX_LINES_FIRST,\n            font: { size: 16 }\n          }))\n\n        TabContent() {\n          Column()\n            .width('100%')\n            .height('100%')\n            .backgroundColor('#007DFF')\n        }\n        .tabBar(new SubTabBarStyle('blue')\n          .labelStyle({\n            overflow: TextOverflow.Clip,\n            maxLines: 10,\n            minFontSize: 10,\n            heightAdaptivePolicy: TextHeightAdaptivePolicy.MAX_LINES_FIRST,\n            font: { size: 16 }\n          }))\n\n        TabContent() {\n          Column()\n            .width('100%')\n            .height('100%')\n            .backgroundColor('#FFBF00')\n        }\n        .tabBar(new SubTabBarStyle('yellow')\n          .labelStyle({\n            overflow: TextOverflow.Clip,\n            maxLines: 10,\n            minFontSize: 10,\n            heightAdaptivePolicy: TextHeightAdaptivePolicy.MAX_LINES_FIRST,\n            font: { size: 16 }\n          }))\n\n        TabContent() {\n          Column()\n            .width('100%')\n            .height('100%')\n            .backgroundColor('#E67C92')\n        }\n        .tabBar(new SubTabBarStyle('pink')\n          .labelStyle({\n            overflow: TextOverflow.Clip,\n            maxLines: 10,\n            minFontSize: 10,\n            heightAdaptivePolicy: TextHeightAdaptivePolicy.MAX_LINES_FIRST,\n            font: { size: 16 }\n          }))\n      }\n      .vertical(this.vertical)\n      .barMode(BarMode.Fixed)\n      .width('100%')\n      .height(300)\n      .padding({ left: LEFT_PADDING, right: RIGHT_PADDING })\n      .margin({ bottom: 20 })\n      .flexGrow(0)\n\n      Scroll() {\n        // Control Panel\n        Column() {\n          Column() {\n            CommonSwitcher({\n              name: $r('app.string.tab_content_introduction'),\n              bool: $isBottomTabBar,\n              testID: `tabcontent_001`\n            })\n              .enabled(this.vertical ? false : true)\n            Button($r('app.string.tab_content_side'))\n              .padding(12)\n              .enabled(this.isBottomTabBar ? true : false)\n              .id(`tabcontent_002`)\n              .onClick(() => {\n                this.vertical = !this.vertical;\n              })\n          }\n          .backgroundStyle()\n        }\n        .justifyContent(FlexAlign.Start)\n        .width('100%')\n        .height('100%')\n      }\n      .flexGrow(1)\n      .height(100)\n      .margin({ bottom: 10 })\n    }\n    .padding({ left: LEFT_PADDING, right: RIGHT_PADDING })\n    .height('100%')\n    .width('100%')\n    .backgroundColor($r('app.color.background_shallow_grey'))\n  }\n}", "id": "9ca006eb0ecb874b1a8514adb7ce605ef1204bf5ae6a9050370cec792a17b424", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "结构完整，生态耦合自然，具备良好的ArkTS实践与可迁移性。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2843, "completion_tokens": 67, "total_tokens": 2910, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"结构完整，生态耦合自然，具备良好的ArkTS实践与可迁移性。\"\n}", "llm_formatted": "ts\nimport { CommonSwitcher } from '../../../../common/AttributeModificationTool';\nimport { TitleBar } from '../../../../common/TitleBar';\nimport { LEFT_PADDING, RIGHT_PADDING } from '../../ComponentData';\n\n@Extend(Column)\nfunction backgroundStyle() {\n  .width('100%')\n  .padding(12)\n  .borderRadius(16)\n  .backgroundColor(Color.White)\n  .justifyContent(FlexAlign.Start)\n}\n\n@Entry\n@Component\nstruct TabSample {\n  @State barPosition: BarPosition = BarPosition.Start;\n  @State isDisabled: boolean = true;\n  @State isBottomTabBar: boolean = false;\n  @State vertical: boolean = false;\n  private controller: TabsController = new TabsController();\n\n  build() {\n    Flex({ direction: FlexDirection.Column, alignItems: ItemAlign.Center, justifyContent: FlexAlign.Start }) {\n      TitleBar({ title: $r('app.string.tab_content_title') })\n        .flexGrow(0)\n      \n      Tabs({\n        barPosition: this.vertical ? BarPosition.Start : this.isBottomTabBar ? BarPosition.End : BarPosition.Start,\n        controller: this.controller\n      }) {\n        TabContent() {\n          Column()\n            .width('100%')\n            .height('100%')\n            .backgroundColor('#00CB87')\n        }\n        .tabBar(new SubTabBarStyle('green')\n          .labelStyle({\n            overflow: TextOverflow.Clip,\n            maxLines: 10,\n            minFontSize: 10,\n            heightAdaptivePolicy: TextHeightAdaptivePolicy.MAX_LINES_FIRST,\n            font: { size: 16 }\n          }))\n\n        TabContent() {\n          Column()\n            .width('100%')\n            .height('100%')\n            .backgroundColor('#007DFF')\n        }\n        .tabBar(new SubTabBarStyle('blue')\n          .labelStyle({\n            overflow: TextOverflow.Clip,\n            maxLines: 10,\n            minFontSize: 10,\n            heightAdaptivePolicy: TextHeightAdaptivePolicy.MAX_LINES_FIRST,\n            font: { size: 16 }\n          }))\n\n        TabContent() {\n          Column()\n            .width('100%')\n            .height('100%')\n            .backgroundColor('#FFBF00')\n        }\n        .tabBar(new SubTabBarStyle('yellow')\n          .labelStyle({\n            overflow: TextOverflow.Clip,\n            maxLines: 10,\n            minFontSize: 10,\n            heightAdaptivePolicy: TextHeightAdaptivePolicy.MAX_LINES_FIRST,\n            font: { size: 16 }\n          }))\n\n        TabContent() {\n          Column()\n            .width('100%')\n            .height('100%')\n            .backgroundColor('#E67C92')\n        }\n        .tabBar(new SubTabBarStyle('pink')\n          .labelStyle({\n            overflow: TextOverflow.Clip,\n            maxLines: 10,\n            minFontSize: 10,\n            heightAdaptivePolicy: TextHeightAdaptivePolicy.MAX_LINES_FIRST,\n            font: { size: 16 }\n          }))\n      }\n      .vertical(this.vertical)\n      .barMode(BarMode.Fixed)\n      .width('100%')\n      .height(300)\n      .padding({ left: LEFT_PADDING, right: RIGHT_PADDING })\n      .margin({ bottom: 20 })\n      .flexGrow(0)\n\n      Scroll() {\n        Column() {\n          Column() {\n            CommonSwitcher({\n              name: $r('app.string.tab_content_introduction'),\n              bool: $isBottomTabBar,\n              testID: `tabcontent_001`\n            })\n              .enabled(this.vertical ? false : true)\n            Button($r('app.string.tab_content_side'))\n              .padding(12)\n              .enabled(this.isBottomTabBar ? true : false)\n              .id(`tabcontent_002`)\n              .onClick(() => {\n                this.vertical = !this.vertical;\n              })\n          }\n          .backgroundStyle()\n        }\n        .justifyContent(FlexAlign.Start)\n        .width('100%')\n        .height('100%')\n      }\n      .flexGrow(1)\n      .height(100)\n      .margin({ bottom: 10 })\n    }\n    .padding({ left: LEFT_PADDING, right: RIGHT_PADDING })\n    .height('100%')\n    .width('100%')\n    .backgroundColor($r('app.color.background_shallow_grey'))\n  }\n}", "leaked": true, "text_tokens": 974, "split": "valid"}
{"path": "ability-start-mode~harmonyos_samples~491/entry/src/main/ets/common/Constants.ets", "project_name": "ability-start-mode~harmonyos_samples~491", "text": "export default class Constants {\n  /**\n   * FontWeight.borderRadius 700\n   */\n  static readonly FONT_WEIGHT_LG: number = 700;\n\n  /**\n   * FontWeight.borderRadius 600\n   */\n  static readonly FONT_WEIGHT_MD: number = 600;\n\n  /**\n   * FontWeight.borderRadius 500\n   */\n  static readonly FONT_WEIGHT: number = 500;\n\n  /**\n   * FontWeight.borderRadius 50\n   */\n  static readonly FONT_WEIGHT_SM: number = 50;\n\n  /**\n   * Click on the list of tips/history to go to the animation duration of the example page.\n   */\n  static readonly TO_EXAMPLE_PAGE_DURATION: number = 20;\n\n  /**\n   * Device size\n   */\n  static readonly DEFAULT_DEVICE_SIZE: number = 600;\n\n  /**\n   * BorderRadius\n   */\n  static readonly BORDER_RADIUS: number = 24;\n\n  /**\n   * Detail height\n   */\n  static readonly DETAIL_HEIGHT: number = 72;\n\n  /**\n   * List space.\n   */\n  static readonly LIST_SPACE: number = 72;\n\n  /**\n   * Half opacity\n   */\n  static readonly HALF_OPACITY: number = 0.5;\n\n  /**\n   * Maximum number of input characters\n   */\n  static readonly PHONE_NUMBER_LENGTH = 11;\n\n  /**\n   * The animation duration is 300 ms\n   */\n  static readonly EFFECT_DURATION = 300;\n\n  /**\n   * The animation duration is 400 ms\n   */\n  static readonly EFFECT_DURATION_FOUR = 400;\n\n  /**\n   * Spacing of child elementsconst 10\n   */\n  static readonly SPACE_TEN = 10;\n\n  /**\n   * Spacing of child elementsconst 15\n   */\n  static readonly SPACE_FIFTEEN = 15;\n\n  /**\n   * Spacing of child elementsconst 30\n   */\n  static readonly SPACE_THIRTY = 30;\n\n  /**\n   * Spacing of child elements\n   */\n  static readonly SPACE_TWENTY = 20;\n\n  /**\n   * FontWeight.seventy\n   */\n  static readonly FONT_WEIGHT_SEVENTY = 70;\n\n  /**\n   * FontWeight.twenty\n   */\n  static readonly FONT_WEIGHT_NORMAL = 20;\n\n  /**\n   * Default status height\n   */\n  static readonly DEFAULT_STATUS_HEIGHT: number = 32;\n\n  /**\n   * Default text max line\n   */\n  static readonly DEFAULT_TEXT_LINE: number = 2;\n\n  /**\n   * Default row height * 2\n   */\n  static readonly DEFAULT_ROW_HEIGHT: number = 168;\n\n  /**\n   * Default row spacing of waterfall flow\n   */\n  static readonly DEFAULT_ROW_SPACING_WATERFALL: number = 8;\n\n  /**\n   * Default number 0\n   */\n  static readonly DEFAULT_ZERO: number = 0;\n\n  /**\n   * Default number 1\n   */\n  static readonly DEFAULT_ONE: number = 1;\n\n  /**\n   * Default number -1\n   */\n  static readonly DEFAULT_NEGATIVE_ONE: number = -1;\n\n  /**\n   * None of the opacity\n   */\n  static readonly NONE_OPACITY: number = 0;\n\n  /**\n   * Click to search for the duration of the animation\n   */\n  static readonly CLICK_SEARCH_ANIMATION_DURATION: number = 100;\n\n  /**\n   * Transition animation duration\n   */\n  static readonly TRANSITION_ANIMATION_DURATION: number = 200;\n\n  /**\n   * Search history content animation duration\n   */\n  static readonly SEARCH_HISTORY_ANIMATION_DURATION: number = 350;\n\n  /**\n   * Animation delay 150\n   */\n  static readonly ANIMATION_DELAY: number = 150;\n\n  /**\n   * Animation delay 100\n   */\n  static readonly ANIMATION_DELAY_ONE: number = 100;\n\n  /**\n   * Parameter velocity for generating the animation curve from 0 to 1\n   */\n  static readonly ANIMATION_CURVE_VELOCITY: number = 0;\n\n  /**\n   * Parameter mass for generating the animation curve from 0 to 1\n   */\n  static readonly ANIMATION_CURVE_MASS: number = 1;\n\n  /**\n   * Parameter stiffness for generating the animation curve from 0 to 1\n   */\n  static readonly ANIMATION_CURVE_STIFFNESS: number = 342;\n\n  /**\n   * Parameter damping for generating the animation curve from 0 to 1\n   */\n  static readonly ANIMATION_CURVE_DAMPING: number = 38;\n\n  /**\n   * Constructs a third-order Bezier curve X1\n   */\n  static readonly ANIMATION_CURVE_X1: number = 0.33;\n\n  /**\n   * Constructs a third-order Bezier curve Y1\n   */\n  static readonly ANIMATION_CURVE_Y1: number = 0;\n\n  /**\n   * Constructs a third-order Bezier curve X2\n   */\n  static readonly ANIMATION_CURVE_X2: number = 0.67;\n\n  /**\n   * Constructs a third-order Bezier curve Y2\n   */\n  static readonly ANIMATION_CURVE_Y2: number = 1;\n\n  /**\n   * Creates a translate transition effect.\n   */\n  static readonly TRANSITION_EFFECT_Y: number = 30;\n\n  /**\n   * Creates an opacity transition effect with alpha value\n   */\n  static readonly TRANSITION_OPACITY: number = 0;\n\n  /**\n   * Width of the top search box\n   */\n  static readonly TOP_SEARCH_WIDTH: number = 24;\n\n  /**\n   * Width of the search\n   */\n  static readonly SEARCH_WIDTH: number = 80;\n\n  /**\n   * 0.9 of the opacity\n   */\n  static readonly ZERO_NINE_OPACITY: number = 0.9;\n\n  /**\n   * Font family HeiTi\n   */\n  static readonly HARMONY_HEI_TI_FONT_FAMILY = 'HarmonyHeiTi';\n\n  /**\n   * Font family Medium\n   */\n  static readonly HARMONY_HEITI_MEDIUM_FONT_FAMILY = 'HarmonyHeiTi-Medium';\n\n  /**\n   * Font family Bold\n   */\n  static readonly HARMONY_HEITI_BOLD_FONT_FAMILY = 'HarmonyHeiTi-Bold';\n\n  /**\n   * Columns template 1fr 1fr\n   */\n  static readonly COLUMNS_TEMPLATE = '1fr 1fr';\n\n  /**\n   * Columns template 1fr\n   */\n  static readonly COLUMNS_TEMPLATE_ONE = '1fr';\n\n  /**\n   * Full percent.\n   */\n  static readonly FULL_PERCENT: string = '100%';\n\n  /**\n   * Eighty percent.\n   */\n  static readonly EIGHTY_PERCENT: string = '80%';\n\n  /**\n   * Ten percent.\n   */\n  static readonly TEN_PERCENT: string = '10%';\n\n  /**\n   * Ninety Four percent.\n   */\n  static readonly NINETY_FOUR_PERCENT: string = '94%';\n\n  /**\n   * Animation Duration.\n   */\n  static readonly ANIMATE_DURATION: number = 200;\n\n  /**\n   * Minimum Animation Duration.\n   */\n  static readonly ANIMATE_DURATION_MIN: number = 100;\n\n  /**\n   * Card Minimum Animation Duration.\n   */\n  static readonly CARD_ANIMATE_DURATION_MIN: number = 5;\n\n  /**\n   * zIndex Large.\n   */\n  static readonly Z_INDEX_LARGE: number = 2;\n\n  /**\n   * zIndex Medium.\n   */\n  static readonly Z_INDEX_MEDIUM: number = 1;\n\n  /**\n   * zIndex Small.\n   */\n  static readonly Z_INDEX_SMALL: number = 0;\n\n  /**\n   * Vertical spacing between elements in a vertical layout.\n   */\n  static readonly CARD_LIST_SPACE: number = 2;\n\n  /**\n   * border radius 6\n   */\n  static readonly BORDER_RADIUS_NORMAL: number = 6;\n\n  /**\n   * border radius 12\n   */\n  static readonly BORDER_RADIUS_NORMAL_DOUBLE: number = 12;\n\n  /**\n   * border radius 30\n   */\n  static readonly BORDER_RADIUS_NORMAL_MD: number = 30;\n\n  /**\n   * Circle width height\n   */\n  static readonly CIRCLE_WIDTH_NORMAL: number = 6;\n\n  /**\n   * Circle width width\n   */\n  static readonly CIRCLE_HEIGHT_NORMAL: number = 6;\n\n  /**\n   * averageCalories 26\n   */\n  static readonly AVERAGE_CALORIES_ONE: number = 26;\n\n  /**\n   * averageCalories 60\n   */\n  static readonly AVERAGE_CALORIES_TWO: number = 60;\n\n  /**\n   * averageCalories 606\n   */\n  static readonly AVERAGE_CALORIES_THREE: number = 606;\n\n  /**\n   * averageCalories 56\n   */\n  static readonly AVERAGE_CALORIES_FOUR: number = 56;\n\n  /**\n   * averageCalories 365\n   */\n  static readonly AVERAGE_CALORIES_FIVE: number = 365;\n\n  /**\n   * strokeWidth\n   */\n  static readonly STROKE_WIDTH: number = 24;\n}", "id": "3ded3d869c5aa0d2333776e5be9d359e735c6429ba318389bc42d8a905c5879a", "replica": 1, "decision": "KEEP_WITH_TAG", "labels": ["TOY_OR_TUTORIAL_FRAGMENT"], "arkts_score": 3.0, "quality_score": 2.0, "confidence": 0.85, "rationale": "常量类结构清晰，但信息密度低，多为硬编码值，缺乏实际业务逻辑或复杂类型技巧。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 3804, "completion_tokens": 85, "total_tokens": 3889, "raw_response": "{\n  \"decision\": \"KEEP_WITH_TAG\",\n  \"labels\": [\"TOY_OR_TUTORIAL_FRAGMENT\"],\n  \"arkts_score\": 3,\n  \"quality_score\": 2,\n  \"confidence\": 0.85,\n  \"rationale\": \"常量类结构清晰，但信息密度低，多为硬编码值，缺乏实际业务逻辑或复杂类型技巧。\"\n}", "llm_formatted": "export default class Constants {\n  /**\n   * FontWeight.borderRadius 700\n   */\n  static readonly FONT_WEIGHT_LG: number = 700;\n\n  /**\n   * FontWeight.borderRadius 600\n   */\n  static readonly FONT_WEIGHT_MD: number = 600;\n\n  /**\n   * FontWeight.borderRadius 500\n   */\n  static readonly FONT_WEIGHT: number = 500;\n\n  /**\n   * FontWeight.borderRadius 50\n   */\n  static readonly FONT_WEIGHT_SM: number = 50;\n\n  /**\n   * Click on the list of tips/history to go to the animation duration of the example page.\n   */\n  static readonly TO_EXAMPLE_PAGE_DURATION: number = 20;\n\n  /**\n   * Device size\n   */\n  static readonly DEFAULT_DEVICE_SIZE: number = 600;\n\n  /**\n   * BorderRadius\n   */\n  static readonly BORDER_RADIUS: number = 24;\n\n  /**\n   * Detail height\n   */\n  static readonly DETAIL_HEIGHT: number = 72;\n\n  /**\n   * List space.\n   */\n  static readonly LIST_SPACE: number = 72;\n\n  /**\n   * Half opacity\n   */\n  static readonly HALF_OPACITY: number = 0.5;\n\n  /**\n   * Maximum number of input characters\n   */\n  static readonly PHONE_NUMBER_LENGTH = 11;\n\n  /**\n   * The animation duration is 300 ms\n   */\n  static readonly EFFECT_DURATION = 300;\n\n  /**\n   * The animation duration is 400 ms\n   */\n  static readonly EFFECT_DURATION_FOUR = 400;\n\n  /**\n   * Spacing of child elementsconst 10\n   */\n  static readonly SPACE_TEN = 10;\n\n  /**\n   * Spacing of child elementsconst 15\n   */\n  static readonly SPACE_FIFTEEN = 15;\n\n  /**\n   * Spacing of child elementsconst 30\n   */\n  static readonly SPACE_THIRTY = 30;\n\n  /**\n   * Spacing of child elements\n   */\n  static readonly SPACE_TWENTY = 20;\n\n  /**\n   * FontWeight.seventy\n   */\n  static readonly FONT_WEIGHT_SEVENTY = 70;\n\n  /**\n   * FontWeight.twenty\n   */\n  static readonly FONT_WEIGHT_NORMAL = 20;\n\n  /**\n   * Default status height\n   */\n  static readonly DEFAULT_STATUS_HEIGHT: number = 32;\n\n  /**\n   * Default text max line\n   */\n  static readonly DEFAULT_TEXT_LINE: number = 2;\n\n  /**\n   * Default row height * 2\n   */\n  static readonly DEFAULT_ROW_HEIGHT: number = 168;\n\n  /**\n   * Default row spacing of waterfall flow\n   */\n  static readonly DEFAULT_ROW_SPACING_WATERFALL: number = 8;\n\n  /**\n   * Default number 0\n   */\n  static readonly DEFAULT_ZERO: number = 0;\n\n  /**\n   * Default number 1\n   */\n  static readonly DEFAULT_ONE: number = 1;\n\n  /**\n   * Default number -1\n   */\n  static readonly DEFAULT_NEGATIVE_ONE: number = -1;\n\n  /**\n   * None of the opacity\n   */\n  static readonly NONE_OPACITY: number = 0;\n\n  /**\n   * Click to search for the duration of the animation\n   */\n  static readonly CLICK_SEARCH_ANIMATION_DURATION: number = 100;\n\n  /**\n   * Transition animation duration\n   */\n  static readonly TRANSITION_ANIMATION_DURATION: number = 200;\n\n  /**\n   * Search history content animation duration\n   */\n  static readonly SEARCH_HISTORY_ANIMATION_DURATION: number = 350;\n\n  /**\n   * Animation delay 150\n   */\n  static readonly ANIMATION_DELAY: number = 150;\n\n  /**\n   * Animation delay 100\n   */\n  static readonly ANIMATION_DELAY_ONE: number = 100;\n\n  /**\n   * Parameter velocity for generating the animation curve from 0 to 1\n   */\n  static readonly ANIMATION_CURVE_VELOCITY: number = 0;\n\n  /**\n   * Parameter mass for generating the animation curve from 0 to 1\n   */\n  static readonly ANIMATION_CURVE_MASS: number = 1;\n\n  /**\n   * Parameter stiffness for generating the animation curve from 0 to 1\n   */\n  static readonly ANIMATION_CURVE_STIFFNESS: number = 342;\n\n  /**\n   * Parameter damping for generating the animation curve from 0 to 1\n   */\n  static readonly ANIMATION_CURVE_DAMPING: number = 38;\n\n  /**\n   * Constructs a third-order Bezier curve X1\n   */\n  static readonly ANIMATION_CURVE_X1: number = 0.33;\n\n  /**\n   * Constructs a third-order Bezier curve Y1\n   */\n  static readonly ANIMATION_CURVE_Y1: number = 0;\n\n  /**\n   * Constructs a third-order Bezier curve X2\n   */\n  static readonly ANIMATION_CURVE_X2: number = 0.67;\n\n  /**\n   * Constructs a third-order Bezier curve Y2\n   */\n  static readonly ANIMATION_CURVE_Y2: number = 1;\n\n  /**\n   * Creates a translate transition effect.\n   */\n  static readonly TRANSITION_EFFECT_Y: number = 30;\n\n  /**\n   * Creates an opacity transition effect with alpha value\n   */\n  static readonly TRANSITION_OPACITY: number = 0;\n\n  /**\n   * Width of the top search box\n   */\n  static readonly TOP_SEARCH_WIDTH: number = 24;\n\n  /**\n   * Width of the search\n   */\n  static readonly SEARCH_WIDTH: number = 80;\n\n  /**\n   * 0.9 of the opacity\n   */\n  static readonly ZERO_NINE_OPACITY: number = 0.9;\n\n  /**\n   * Font family HeiTi\n   */\n  static readonly HARMONY_HEI_TI_FONT_FAMILY = 'HarmonyHeiTi';\n\n  /**\n   * Font family Medium\n   */\n  static readonly HARMONY_HEITI_MEDIUM_FONT_FAMILY = 'HarmonyHeiTi-Medium';\n\n  /**\n   * Font family Bold\n   */\n  static readonly HARMONY_HEITI_BOLD_FONT_FAMILY = 'HarmonyHeiTi-Bold';\n\n  /**\n   * Columns template 1fr 1fr\n   */\n  static readonly COLUMNS_TEMPLATE = '1fr 1fr';\n\n  /**\n   * Columns template 1fr\n   */\n  static readonly COLUMNS_TEMPLATE_ONE = '1fr';\n\n  /**\n   * Full percent.\n   */\n  static readonly FULL_PERCENT: string = '100%';\n\n  /**\n   * Eighty percent.\n   */\n  static readonly EIGHTY_PERCENT: string = '80%';\n\n  /**\n   * Ten percent.\n   */\n  static readonly TEN_PERCENT: string = '10%';\n\n  /**\n   * Ninety Four percent.\n   */\n  static readonly NINETY_FOUR_PERCENT: string = '94%';\n\n  /**\n   * Animation Duration.\n   */\n  static readonly ANIMATE_DURATION: number = 200;\n\n  /**\n   * Minimum Animation Duration.\n   */\n  static readonly ANIMATE_DURATION_MIN: number = 100;\n\n  /**\n   * Card Minimum Animation Duration.\n   */\n  static readonly CARD_ANIMATE_DURATION_MIN: number = 5;\n\n  /**\n   * zIndex Large.\n   */\n  static readonly Z_INDEX_LARGE: number = 2;\n\n  /**\n   * zIndex Medium.\n   */\n  static readonly Z_INDEX_MEDIUM: number = 1;\n\n  /**\n   * zIndex Small.\n   */\n  static readonly Z_INDEX_SMALL: number = 0;\n\n  /**\n   * Vertical spacing between elements in a vertical layout.\n   */\n  static readonly CARD_LIST_SPACE: number = 2;\n\n  /**\n   * border radius 6\n   */\n  static readonly BORDER_RADIUS_NORMAL: number = 6;\n\n  /**\n   * border radius 12\n   */\n  static readonly BORDER_RADIUS_NORMAL_DOUBLE: number = 12;\n\n  /**\n   * border radius 30\n   */\n  static readonly BORDER_RADIUS_NORMAL_MD: number = 30;\n\n  /**\n   * Circle width height\n   */\n  static readonly CIRCLE_WIDTH_NORMAL: number = 6;\n\n  /**\n   * Circle width width\n   */\n  static readonly CIRCLE_HEIGHT_NORMAL: number = 6;\n\n  /**\n   * averageCalories 26\n   */\n  static readonly AVERAGE_CALORIES_ONE: number = 26;\n\n  /**\n   * averageCalories 60\n   */\n  static readonly AVERAGE_CALORIES_TWO: number = 60;\n\n  /**\n   * averageCalories 606\n   */\n  static readonly AVERAGE_CALORIES_THREE: number = 606;\n\n  /**\n   * averageCalories 56\n   */\n  static readonly AVERAGE_CALORIES_FOUR: number = 56;\n\n  /**\n   * averageCalories 365\n   */\n  static readonly AVERAGE_CALORIES_FIVE: number = 365;\n\n  /**\n   * strokeWidth\n   */\n  static readonly STROKE_WIDTH: number = 24;\n}", "leaked": true, "text_tokens": 1935, "split": "valid"}
{"path": "DocsSample_Graphics~harmonyos_samples~1310/ArkTsDrawingSamples/entry/src/main/ets/common/PathRenderNode.ets", "project_name": "DocsSample_Graphics~harmonyos_samples~1310", "text": "import { RenderNode } from '@kit.ArkUI'\nimport { common2D, drawing } from '@kit.ArkGraphics2D'\n\nclass PathRenderNode extends RenderNode {\n  async draw(context: DrawContext) {\n    const canvas = context.canvas\n    let height_ = 1200\n    let width_ = 600\n    let len = height_ / 4\n    let aX = width_ / 2\n    let aY = height_ / 4\n    let dX = aX - len * Math.sin(18.0)\n    let dY = aY + len * Math.cos(18.0)\n    let cX = aX + len * Math.sin(18.0)\n    let cY = dY\n    let bX = aX + (len / 2.0)\n    let bY = aY + Math.sqrt((cX - dX) * (cX - dX) + (len / 2.0) * (len / 2.0))\n    let eX = aX - (len / 2.0)\n    let eY = bY;\n\n    // 创建一个path对象，然后使用接口连接成一个五角星形状\n    let path = new drawing.Path()\n\n    // 指定path的起始位置\n    path.moveTo(aX, aY)\n\n    // 用直线连接到目标点\n    path.lineTo(bX, bY)\n    path.lineTo(cX, cY)\n    path.lineTo(dX, dY)\n    path.lineTo(eX, eY)\n\n    // 闭合形状，path绘制完毕\n    path.close()\n\n    // 创建一个画笔Pen对象，Pen对象用于形状的边框线绘制\n    let pen = new drawing.Pen()\n    pen.setAntiAlias(true)\n    let pen_color: common2D.Color = {\n      alpha: 0xFF,\n      red: 0xFF,\n      green: 0x00,\n      blue: 0x00\n    }\n    pen.setColor(pen_color)\n    pen.setStrokeWidth(10.0)\n\n    // 将Pen画笔设置到canvas中\n    canvas.attachPen(pen)\n\n    // 创建一个画刷Brush对象，Brush对象用于形状的填充\n    let brush = new drawing.Brush()\n    let brush_color: common2D.Color = {\n      alpha: 0xFF,\n      red: 0x00,\n      green: 0xFF,\n      blue: 0x00\n    }\n    brush.setColor(brush_color)\n\n    // 将Brush画刷设置到canvas中\n    canvas.attachBrush(brush)\n\n    // 绘制path\n    canvas.drawPath(path)\n  }\n}\n\nexport default PathRenderNode;\n", "id": "049a7af8e06ebb7a9b92291e3af1fad243362c11d769636c5a76cb21c82ebec3", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "ArkTS生态耦合良好，逻辑完整，具备可学习的图形绘制模式。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2462, "completion_tokens": 67, "total_tokens": 2529, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"ArkTS生态耦合良好，逻辑完整，具备可学习的图形绘制模式。\"\n}", "llm_formatted": "import { RenderNode } from '@kit.ArkUI'\nimport { common2D, drawing } from '@kit.ArkGraphics2D'\n\nclass PathRenderNode extends RenderNode {\n  async draw(context: DrawContext) {\n    const canvas = context.canvas\n    let height_ = 1200\n    let width_ = 600\n    let len = height_ / 4\n    let aX = width_ / 2\n    let aY = height_ / 4\n    let dX = aX - len * Math.sin(18.0)\n    let dY = aY + len * Math.cos(18.0)\n    let cX = aX + len * Math.sin(18.0)\n    let cY = dY\n    let bX = aX + (len / 2.0)\n    let bY = aY + Math.sqrt((cX - dX) * (cX - dX) + (len / 2.0) * (len / 2.0))\n    let eX = aX - (len / 2.0)\n    let eY = bY\n\n    // 创建一个path对象，然后使用接口连接成一个五角星形状\n    let path = new drawing.Path()\n\n    // 指定path的起始位置\n    path.moveTo(aX, aY)\n\n    // 用直线连接到目标点\n    path.lineTo(bX, bY)\n    path.lineTo(cX, cY)\n    path.lineTo(dX, dY)\n    path.lineTo(eX, eY)\n\n    // 闭合形状，path绘制完毕\n    path.close()\n\n    // 创建一个画笔Pen对象，Pen对象用于形状的边框线绘制\n    let pen = new drawing.Pen()\n    pen.setAntiAlias(true)\n    let pen_color: common2D.Color = {\n      alpha: 0xFF,\n      red: 0xFF,\n      green: 0x00,\n      blue: 0x00\n    }\n    pen.setColor(pen_color)\n    pen.setStrokeWidth(10.0)\n\n    // 将Pen画笔设置到canvas中\n    canvas.attachPen(pen)\n\n    // 创建一个画刷Brush对象，Brush对象用于形状的填充\n    let brush = new drawing.Brush()\n    let brush_color: common2D.Color = {\n      alpha: 0xFF,\n      red: 0x00,\n      green: 0xFF,\n      blue: 0x00\n    }\n    brush.setColor(brush_color)\n\n    // 将Brush画刷设置到canvas中\n    canvas.attachBrush(brush)\n\n    // 绘制path\n    canvas.drawPath(path)\n  }\n}\n\nexport default PathRenderNode;", "leaked": true, "text_tokens": 593, "split": "valid"}
{"path": "multi-convenient-life~harmonyos_samples~335/entry/src/main/ets/pages/Index.ets", "project_name": "multi-convenient-life~harmonyos_samples~335", "text": "import { window } from '@kit.ArkUI';\nimport { BreakpointConstants } from '../constants/BreakpointConstants';\nimport { CommonConstants } from '../constants/CommonConstants';\nimport { router } from '@kit.ArkUI';\n\n\n@Entry\n@Component\nstruct Index {\n  @StorageLink('currentBreakpoint') currentBreakpoint: string = BreakpointConstants.BREAKPOINT_LG;\n  @StorageLink('pageShow') pageShow: string = 'button';\n  @StorageLink('windowTop') windowTop: number = 0;\n  @StorageLink('windowBottom') windowBottom: number = 0;\n\n  aboutToAppear(): void {\n    window.getLastWindow(this.getUIContext().getHostContext()).then((windowStage: window.Window) => {\n      let area = windowStage.getWindowAvoidArea(window.AvoidAreaType.TYPE_SYSTEM);\n      this.windowTop = this.getUIContext().px2vp(area.topRect.height);\n      let bottomArea = windowStage.getWindowAvoidArea(window.AvoidAreaType.TYPE_NAVIGATION_INDICATOR);\n      this.windowBottom = this.getUIContext().px2vp(bottomArea.bottomRect.height);\n    });\n  }\n\n  build() {\n    Column() {\n      if (this.pageShow === CommonConstants.PAGE_ROUTER_INDEX) {\n        Column({ space: CommonConstants.DEFAULT_SPACE }) {\n          Button($r('app.string.food_list'))\n            .width(CommonConstants.FULL_PERCENT)\n            .constraintSize({\n              maxWidth: $r('app.float.max_width')\n            })\n            .onClick(() => {\n              this.getUIContext().getRouter().pushUrl({ url: \"pages/FoodList\" })\n            })\n          Button($r('app.string.graphic_text'))\n            .width(CommonConstants.FULL_PERCENT)\n            .constraintSize({\n              maxWidth: $r('app.float.max_width')\n            })\n            .onClick(() => {\n              this.getUIContext().getRouter().pushUrl({ url: \"pages/GraphicText\" })\n            })\n          Button($r('app.string.living_page'))\n            .width(CommonConstants.FULL_PERCENT)\n            .constraintSize({\n              maxWidth: $r('app.float.max_width')\n            })\n            .onClick(() => {\n              this.getUIContext().getRouter().pushUrl({ url: \"pages/Living\" })\n            })\n        }\n        .height(CommonConstants.FULL_PERCENT)\n        .justifyContent(FlexAlign.End)\n        .padding($r('app.float.padding_small'))\n      }\n    }\n    .width(CommonConstants.FULL_PERCENT)\n    .height(CommonConstants.FULL_PERCENT)\n  }\n}", "id": "6799f95bf9c74557c7e4781b5147ca7dfde75d343bf42aa7767fd0395c0cead0", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "结构完整，生态耦合自然，具备良好的ArkTS实践与可迁移性。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2396, "completion_tokens": 67, "total_tokens": 2463, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"结构完整，生态耦合自然，具备良好的ArkTS实践与可迁移性。\"\n}", "llm_formatted": "import { window } from '@kit.ArkUI';\nimport { BreakpointConstants } from '../constants/BreakpointConstants';\nimport { CommonConstants } from '../constants/CommonConstants';\nimport { router } from '@kit.ArkUI';\n\n@Entry\n@Component\nstruct Index {\n  @StorageLink('currentBreakpoint') currentBreakpoint: string = BreakpointConstants.BREAKPOINT_LG;\n  @StorageLink('pageShow') pageShow: string = 'button';\n  @StorageLink('windowTop') windowTop: number = 0;\n  @StorageLink('windowBottom') windowBottom: number = 0;\n\n  aboutToAppear(): void {\n    window.getLastWindow(this.getUIContext().getHostContext()).then((windowStage: window.Window) => {\n      let area = windowStage.getWindowAvoidArea(window.AvoidAreaType.TYPE_SYSTEM);\n      this.windowTop = this.getUIContext().px2vp(area.topRect.height);\n      let bottomArea = windowStage.getWindowAvoidArea(window.AvoidAreaType.TYPE_NAVIGATION_INDICATOR);\n      this.windowBottom = this.getUIContext().px2vp(bottomArea.bottomRect.height);\n    });\n  }\n\n  build() {\n    Column() {\n      if (this.pageShow === CommonConstants.PAGE_ROUTER_INDEX) {\n        Column({ space: CommonConstants.DEFAULT_SPACE }) {\n          Button($r('app.string.food_list'))\n            .width(CommonConstants.FULL_PERCENT)\n            .constraintSize({\n              maxWidth: $r('app.float.max_width')\n            })\n            .onClick(() => {\n              this.getUIContext().getRouter().pushUrl({ url: \"pages/FoodList\" })\n            })\n          Button($r('app.string.graphic_text'))\n            .width(CommonConstants.FULL_PERCENT)\n            .constraintSize({\n              maxWidth: $r('app.float.max_width')\n            })\n            .onClick(() => {\n              this.getUIContext().getRouter().pushUrl({ url: \"pages/GraphicText\" })\n            })\n          Button($r('app.string.living_page'))\n            .width(CommonConstants.FULL_PERCENT)\n            .constraintSize({\n              maxWidth: $r('app.float.max_width')\n            })\n            .onClick(() => {\n              this.getUIContext().getRouter().pushUrl({ url: \"pages/Living\" })\n            })\n        }\n        .height(CommonConstants.FULL_PERCENT)\n        .justifyContent(FlexAlign.End)\n        .padding($r('app.float.padding_small'))\n      }\n    }\n    .width(CommonConstants.FULL_PERCENT)\n    .height(CommonConstants.FULL_PERCENT)\n  }\n}", "leaked": true, "text_tokens": 527, "split": "valid"}
{"path": "xts_acts~openharmony~1331/arkui/ace_c_arkui_test/entry/src/ohosTest/ets/test/customdialog/CustomDialogRegisterOnWillDismissTest.test.ets", "project_name": "xts_acts~openharmony~1331", "text": "import { beforeEach, describe, expect, it, Level } from '@ohos/hypium';\nimport Utils from '../common/Utils';\nimport nativeFunc from 'libnativefunc.so'\nimport { Driver } from '@ohos.UiTest';\n\nexport default function customDialogRegisterOnWillDismissTest() {\n\n  describe('CustomDialogRegisterOnWillDismissTest', () => {\n\n    beforeEach(async (done: Function) => {\n      await Utils.sleep(100);\n      done();\n    });\n\n    /*\n     * @tc.number     : SUB_ARKUI_CAPI_CUSTOMDIALOG_REGISTERONWILLDISMISS_0100\n     * @tc.name       : testCustomDialogRegisterOnWillDismiss001\n     * @tc.desc       : testing registerOnWillDismiss for customDialog with valid value\n     * @tc.size       : MediumTest\n     * @tc.type       : Function\n     * @tc.level      : Level1\n     */\n    it('testCustomDialogRegisterOnWillDismiss001', Level.LEVEL1, async (done: Function) => {\n      await Utils.pushPage(`customdialog/CustomDialogRegisterOnWillDismissTest`)\n      await Utils.clickComponent('buttonRegisterOnWillDismiss')\n      await Utils.sleep(2000)\n      let driver: Driver = Driver.create();\n      await driver.pressBack()\n      await Utils.sleep(2000)\n      expect(getInspectorByKey('columnRegisterOnWillDismiss')).assertEqual(\"\")\n      done()\n    })\n\n    /*\n     * @tc.number     : SUB_ARKUI_CAPI_CUSTOMDIALOG_REGISTERONWILLDISMISS_0200\n     * @tc.name       : testCustomDialogRegisterOnWillDismiss002\n     * @tc.desc       : testing registerOnWillDismiss for customDialog with valid value\n     * @tc.size       : MediumTest\n     * @tc.type       : Function\n     * @tc.level      : Level1\n     */\n    it('testCustomDialogRegisterOnWillDismiss002', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testCustomDialogRegisterOnWillDismiss002()).assertEqual(0)\n      done()\n    })\n\n    /*\n     * @tc.number     : SUB_ARKUI_CAPI_CUSTOMDIALOG_REGISTERONWILLDISMISS_0300\n     * @tc.name       : testCustomDialogRegisterOnWillDismiss003\n     * @tc.desc       : testing registerOnWillDismiss for customDialog with valid value\n     * @tc.size       : MediumTest\n     * @tc.type       : Function\n     * @tc.level      : Level1\n     */\n    it('testCustomDialogRegisterOnWillDismiss003', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testCustomDialogRegisterOnWillDismiss003()).assertEqual(0)\n      done()\n    })\n  })\n}", "id": "0aa6d60d4b2cd47a86a582c9252329490c7f1acf64855622865820ed2a42532c", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 3.0, "confidence": 0.95, "rationale": "符合ArkTS生态，结构清晰，含测试用例与实际调用逻辑，具备一定学习价值。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2482, "completion_tokens": 72, "total_tokens": 2554, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 3,\n  \"confidence\": 0.95,\n  \"rationale\": \"符合ArkTS生态，结构清晰，含测试用例与实际调用逻辑，具备一定学习价值。\"\n}", "llm_formatted": "import { beforeEach, describe, expect, it, Level } from '@ohos/hypium';\nimport Utils from '../common/Utils';\nimport nativeFunc from 'libnativefunc.so'\nimport { Driver } from '@ohos.UiTest';\n\nexport default function customDialogRegisterOnWillDismissTest() {\n\n  describe('CustomDialogRegisterOnWillDismissTest', () => {\n\n    beforeEach(async (done: Function) => {\n      await Utils.sleep(100);\n      done();\n    });\n\n    /*\n     * @tc.number     : SUB_ARKUI_CAPI_CUSTOMDIALOG_REGISTERONWILLDISMISS_0100\n     * @tc.name       : testCustomDialogRegisterOnWillDismiss001\n     * @tc.desc       : testing registerOnWillDismiss for customDialog with valid value\n     * @tc.size       : MediumTest\n     * @tc.type       : Function\n     * @tc.level      : Level1\n     */\n    it('testCustomDialogRegisterOnWillDismiss001', Level.LEVEL1, async (done: Function) => {\n      await Utils.pushPage(`customdialog/CustomDialogRegisterOnWillDismissTest`)\n      await Utils.clickComponent('buttonRegisterOnWillDismiss')\n      await Utils.sleep(2000)\n      let driver: Driver = Driver.create();\n      await driver.pressBack()\n      await Utils.sleep(2000)\n      expect(getInspectorByKey('columnRegisterOnWillDismiss')).assertEqual(\"\")\n      done()\n    })\n\n    /*\n     * @tc.number     : SUB_ARKUI_CAPI_CUSTOMDIALOG_REGISTERONWILLDISMISS_0200\n     * @tc.name       : testCustomDialogRegisterOnWillDismiss002\n     * @tc.desc       : testing registerOnWillDismiss for customDialog with valid value\n     * @tc.size       : MediumTest\n     * @tc.type       : Function\n     * @tc.level      : Level1\n     */\n    it('testCustomDialogRegisterOnWillDismiss002', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testCustomDialogRegisterOnWillDismiss002()).assertEqual(0)\n      done()\n    })\n\n    /*\n     * @tc.number     : SUB_ARKUI_CAPI_CUSTOMDIALOG_REGISTERONWILLDISMISS_0300\n     * @tc.name       : testCustomDialogRegisterOnWillDismiss003\n     * @tc.desc       : testing registerOnWillDismiss for customDialog with valid value\n     * @tc.size       : MediumTest\n     * @tc.type       : Function\n     * @tc.level      : Level1\n     */\n    it('testCustomDialogRegisterOnWillDismiss003', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testCustomDialogRegisterOnWillDismiss003()).assertEqual(0)\n      done()\n    })\n  })\n}", "leaked": true, "text_tokens": 613, "split": "valid"}
{"path": "xts_acts~openharmony~1331/arkui/ace_c_arkui_test/entry/src/ohosTest/ets/MainAbility/pages/requirement/RequirementRouterPageStateTest.ets", "project_name": "xts_acts~openharmony~1331", "text": "import { resourceManager } from '@kit.LocalizationKit';\n\nimport render from 'libnativerender.so'\nimport { CommonView } from '../../componet/CommonView';\n\n\n@Entry\n@Component\nstruct RequirementRouterPageStateTest {\n  PAGE_TAG: string = 'RequirementRouterPageStateTest';\n\n  build() {\n    Column() {\n      CommonView({\n        pageTag: this.PAGE_TAG,\n      }).onAppear(() => {\n        render.requirementRouterPageStateTest(this.PAGE_TAG)\n      })\n    }\n  }\n}", "id": "2a163047aef6df3a394b7c5e006c4e336be35c7d6580e27f3ed879c59c1b1980", "replica": 1, "decision": "KEEP_WITH_TAG", "labels": ["BINARY_OR_GARBLED"], "arkts_score": 4.0, "quality_score": 3.0, "confidence": 0.85, "rationale": "含二进制导入但结构完整，符合ArkTS生态，具备一定学习价值。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 1976, "completion_tokens": 77, "total_tokens": 2053, "raw_response": "{\n  \"decision\": \"KEEP_WITH_TAG\",\n  \"labels\": [\"BINARY_OR_GARBLED\"],\n  \"arkts_score\": 4,\n  \"quality_score\": 3,\n  \"confidence\": 0.85,\n  \"rationale\": \"含二进制导入但结构完整，符合ArkTS生态，具备一定学习价值。\"\n}", "llm_formatted": "import { resourceManager } from '@kit.LocalizationKit';\n\nimport render from 'libnativerender.so'\nimport { CommonView } from '../../componet/CommonView';\n\n\n@Entry\n@Component\nstruct RequirementRouterPageStateTest {\n  PAGE_TAG: string = 'RequirementRouterPageStateTest';\n\n  build() {\n    Column() {\n      CommonView({\n        pageTag: this.PAGE_TAG,\n      }).onAppear(() => {\n        render.requirementRouterPageStateTest(this.PAGE_TAG)\n      })\n    }\n  }\n}", "leaked": true, "text_tokens": 107, "split": "valid"}
{"path": "hmosworld~harmonyos_samples~1320/HMOSWorld/Application/products/phone/src/main/ets/components/CustomTabBar.ets", "project_name": "hmosworld~harmonyos_samples~1320", "text": "import { ConfigurationConstant } from '@kit.AbilityKit';\nimport { BreakpointType, BreakpointTypeEnum, LottieUtil, WindowUtil } from '@ohos/utils';\nimport { AppConstants } from '../constants/AppConstants';\nimport { TabBarData, TabBarType, TabsInfo } from '../model/TabBarModel';\n\n@Component\nexport struct CustomTabBar {\n  @Link currentIndex: TabBarType;\n  @StorageLink('currentBreakpoint') currentBreakpoint: BreakpointTypeEnum = BreakpointTypeEnum.MD;\n  @StorageProp('naviIndicatorHeight') naviIndicatorHeight: number = 0;\n\n  onChange(index: TabBarType): void {\n    this.currentIndex = index;\n    if (this.currentIndex === TabBarType.MINE) {\n      WindowUtil.updateStatusBarColor(getContext(this), true);\n    } else {\n      WindowUtil.updateStatusBarColor(getContext(this),\n        AppStorage.get('currentColorMode') === ConfigurationConstant.ColorMode.COLOR_MODE_DARK);\n    }\n  }\n\n  build() {\n    Flex({\n      direction: this.currentBreakpoint === BreakpointTypeEnum.LG ? FlexDirection.Column : FlexDirection.Row,\n      alignItems: ItemAlign.Center,\n      justifyContent: FlexAlign.SpaceAround\n    }) {\n      ForEach(TabsInfo, (item: TabBarData) => {\n        TabItem({\n          index: item.id,\n          selectedIndex: this.currentIndex,\n          onChange: (index: number) => this.onChange(index)\n        })\n      }, (item: TabBarData) => item.id.toString())\n    }\n    .backgroundColor(this.currentBreakpoint === BreakpointTypeEnum.LG && this.currentIndex === TabBarType.MINE ?\n    $r('sys.color.ohos_id_color_switch_bg_off') : $r('sys.color.ohos_id_color_sub_background'))\n    .backgroundBlurStyle(this.currentBreakpoint === BreakpointTypeEnum.LG && this.currentIndex === TabBarType.MINE ?\n    BlurStyle.BACKGROUND_THIN : BlurStyle.NONE)\n    .border({\n      width: this.currentBreakpoint === BreakpointTypeEnum.LG ? { right: $r('app.float.tab_border_width') } : {\n        top: $r('app.float.tab_border_width')\n      },\n      color: $r('sys.color.ohos_id_color_text_field_sub_bg')\n    })\n    .padding(this.currentBreakpoint === BreakpointTypeEnum.LG ? {\n      top: AppConstants.TAB_PERCENT,\n      bottom: AppConstants.TAB_PERCENT\n    } : { bottom: this.naviIndicatorHeight })\n    .clip(false)\n    .height(new BreakpointType<Length>({\n      sm: AppConstants.TAB_HEIGHT + (this.naviIndicatorHeight || 0),\n      md: AppConstants.TAB_HEIGHT + (this.naviIndicatorHeight || 0),\n      lg: AppConstants.FULL_PERCENT\n    }).getValue(this.currentBreakpoint))\n    .width(new BreakpointType<Length>({\n      sm: AppConstants.FULL_PERCENT,\n      md: AppConstants.FULL_PERCENT,\n      lg: $r('app.float.tool_bar_width')\n    }).getValue(this.currentBreakpoint))\n  }\n}\n\n@Component\nstruct TabItem {\n  @Prop index: number\n  @Prop selectedIndex: number;\n  @State showAnimation: boolean = false;\n  onChange: (index: number) => void = () => {\n  };\n  private mainRenderingSettings: RenderingContextSettings = new RenderingContextSettings(true);\n  private mainCanvasRenderingContext: CanvasRenderingContext2D =\n    new CanvasRenderingContext2D(this.mainRenderingSettings);\n  @StorageLink('currentBreakpoint') currentBreakpoint: BreakpointTypeEnum = BreakpointTypeEnum.MD;\n\n  build() {\n    Column() {\n      Image(this.selectedIndex === this.index ?\n        (this.showAnimation ? TabsInfo[this.index].animationIcon : TabsInfo[this.index].activeIcon) :\n      TabsInfo[this.index].defaultIcon)\n        .size(this.index === TabBarType.CHALLENGE ?\n          { width: $r('app.float.tab_big_img_width'), height: $r('app.float.tab_big_img_height') } :\n          { width: $r('app.float.tab_img_size'), height: $r('app.float.tab_img_size') })\n        .margin({ top: this.index === TabBarType.CHALLENGE ? $r('app.float.tab_margin') : 0 })\n      Text(TabsInfo[this.index].title)\n        .fontSize($r('app.float.tab_font_size'))\n        .margin({ top: $r('app.float.tab_title_margin') })\n        .fontWeight(AppConstants.TAB_FONT_WEIGHT)\n        .fontColor(this.index === this.selectedIndex ?\n          (this.index == TabBarType.CHALLENGE ? $r('app.color.challenge_light') :\n          $r('sys.color.ohos_id_color_bottom_tab_text_on')) :\n        $r('sys.color.ohos_id_color_bottom_tab_text_off'))\n    }\n    .clip(false)\n    .padding(this.currentBreakpoint === BreakpointTypeEnum.LG ?\n      { top: $r('app.float.sm_padding_margin'), bottom: $r('app.float.sm_padding_margin') } :\n      { left: $r('app.float.ss_padding_margin'), right: $r('app.float.ss_padding_margin') })\n    .layoutWeight(1)\n    .size(this.currentBreakpoint === BreakpointTypeEnum.LG ?\n      { width: AppConstants.FULL_PERCENT } :\n      { height: AppConstants.FULL_PERCENT })\n    .justifyContent(FlexAlign.Center)\n    .onClick(() => {\n      if (this.selectedIndex!==this.index) {\n        this.showAnimation = true;\n        this.onChange(this.index);\n        setTimeout(() => {\n          this.showAnimation = false;\n        }, 300)\n      }\n    })\n  }\n}", "id": "2a49b5fb667e331fadf7561ec1b97869834a13c31a3dcda1dc91c9510012e6d5", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "ArkTS语法规范，生态耦合自然，逻辑清晰，具有较高学习价值", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2448, "completion_tokens": 70, "total_tokens": 2518, "raw_response": "```json\n{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"ArkTS语法规范，生态耦合自然，逻辑清晰，具有较高学习价值\"\n}\n```", "llm_formatted": "import { ConfigurationConstant } from '@kit.AbilityKit';\nimport { BreakpointType, BreakpointTypeEnum, LottieUtil, WindowUtil } from '@ohos/utils';\nimport { AppConstants } from '../constants/AppConstants';\nimport { TabBarData, TabBarType, TabsInfo } from '../model/TabBarModel';\n\n@Component\nexport struct CustomTabBar {\n  @Link currentIndex: TabBarType;\n  @StorageLink('currentBreakpoint') currentBreakpoint: BreakpointTypeEnum = BreakpointTypeEnum.MD;\n  @StorageProp('naviIndicatorHeight') naviIndicatorHeight: number = 0;\n\n  onChange(index: TabBarType): void {\n    this.currentIndex = index;\n    if (this.currentIndex === TabBarType.MINE) {\n      WindowUtil.updateStatusBarColor(getContext(this), true);\n    } else {\n      WindowUtil.updateStatusBarColor(getContext(this),\n        AppStorage.get('currentColorMode') === ConfigurationConstant.ColorMode.COLOR_MODE_DARK);\n    }\n  }\n\n  build() {\n    Flex({\n      direction: this.currentBreakpoint === BreakpointTypeEnum.LG ? FlexDirection.Column : FlexDirection.Row,\n      alignItems: ItemAlign.Center,\n      justifyContent: FlexAlign.SpaceAround\n    }) {\n      ForEach(TabsInfo, (item: TabBarData) => {\n        TabItem({\n          index: item.id,\n          selectedIndex: this.currentIndex,\n          onChange: (index: number) => this.onChange(index)\n        })\n      }, (item: TabBarData) => item.id.toString())\n    }\n    .backgroundColor(this.currentBreakpoint === BreakpointTypeEnum.LG && this.currentIndex === TabBarType.MINE ?\n    $r('sys.color.ohos_id_color_switch_bg_off') : $r('sys.color.ohos_id_color_sub_background'))\n    .backgroundBlurStyle(this.currentBreakpoint === BreakpointTypeEnum.LG && this.currentIndex === TabBarType.MINE ?\n    BlurStyle.BACKGROUND_THIN : BlurStyle.NONE)\n    .border({\n      width: this.currentBreakpoint === BreakpointTypeEnum.LG ? { right: $r('app.float.tab_border_width') } : {\n        top: $r('app.float.tab_border_width')\n      },\n      color: $r('sys.color.ohos_id_color_text_field_sub_bg')\n    })\n    .padding(this.currentBreakpoint === BreakpointTypeEnum.LG ? {\n      top: AppConstants.TAB_PERCENT,\n      bottom: AppConstants.TAB_PERCENT\n    } : { bottom: this.naviIndicatorHeight })\n    .clip(false)\n    .height(new BreakpointType<Length>({\n      sm: AppConstants.TAB_HEIGHT + (this.naviIndicatorHeight || 0),\n      md: AppConstants.TAB_HEIGHT + (this.naviIndicatorHeight || 0),\n      lg: AppConstants.FULL_PERCENT\n    }).getValue(this.currentBreakpoint))\n    .width(new BreakpointType<Length>({\n      sm: AppConstants.FULL_PERCENT,\n      md: AppConstants.FULL_PERCENT,\n      lg: $r('app.float.tool_bar_width')\n    }).getValue(this.currentBreakpoint))\n  }\n}\n\n@Component\nstruct TabItem {\n  @Prop index: number\n  @Prop selectedIndex: number;\n  @State showAnimation: boolean = false;\n  onChange: (index: number) => void = () => {};\n  private mainRenderingSettings: RenderingContextSettings = new RenderingContextSettings(true);\n  private mainCanvasRenderingContext: CanvasRenderingContext2D =\n    new CanvasRenderingContext2D(this.mainRenderingSettings);\n  @StorageLink('currentBreakpoint') currentBreakpoint: BreakpointTypeEnum = BreakpointTypeEnum.MD;\n\n  build() {\n    Column() {\n      Image(this.selectedIndex === this.index ?\n        (this.showAnimation ? TabsInfo[this.index].animationIcon : TabsInfo[this.index].activeIcon) :\n      TabsInfo[this.index].defaultIcon)\n        .size(this.index === TabBarType.CHALLENGE ?\n          { width: $r('app.float.tab_big_img_width'), height: $r('app.float.tab_big_img_height') } :\n          { width: $r('app.float.tab_img_size'), height: $r('app.float.tab_img_size') })\n        .margin({ top: this.index === TabBarType.CHALLENGE ? $r('app.float.tab_margin') : 0 })\n      Text(TabsInfo[this.index].title)\n        .fontSize($r('app.float.tab_font_size'))\n        .margin({ top: $r('app.float.tab_title_margin') })\n        .fontWeight(AppConstants.TAB_FONT_WEIGHT)\n        .fontColor(this.index === this.selectedIndex ?\n          (this.index == TabBarType.CHALLENGE ? $r('app.color.challenge_light') :\n          $r('sys.color.ohos_id_color_bottom_tab_text_on')) :\n        $r('sys.color.ohos_id_color_bottom_tab_text_off'))\n    }\n    .clip(false)\n    .padding(this.currentBreakpoint === BreakpointTypeEnum.LG ?\n      { top: $r('app.float.sm_padding_margin'), bottom: $r('app.float.sm_padding_margin') } :\n      { left: $r('app.float.ss_padding_margin'), right: $r('app.float.ss_padding_margin') })\n    .layoutWeight(1)\n    .size(this.currentBreakpoint === BreakpointTypeEnum.LG ?\n      { width: AppConstants.FULL_PERCENT } :\n      { height: AppConstants.FULL_PERCENT })\n    .justifyContent(FlexAlign.Center)\n    .onClick(() => {\n      if (this.selectedIndex !== this.index) {\n        this.showAnimation = true;\n        this.onChange(this.index);\n        setTimeout(() => {\n          this.showAnimation = false;\n        }, 300)\n      }\n    })\n  }\n}", "leaked": true, "text_tokens": 1180, "split": "valid"}
{"path": "applications_dlp_manager~openharmony~1194/entry/src/main/ets/Ability/OpeningDialogUIExtAbility.ets", "project_name": "applications_dlp_manager~openharmony~1194", "text": "import UIExtensionContentSession from '@ohos.app.ability.UIExtensionContentSession';\nimport UIExtensionAbility from '@ohos.app.ability.UIExtensionAbility';\nimport { HiLog } from '../common/HiLog';\nimport Constants from '../common/constant';\nimport Want from '@ohos.app.ability.Want';\nimport OpeningDialogService from '../rpc/OpeningDialog/service/OpeningDialogService';\nimport CommonEventManager from '../common/CommonEventManager';\n\nconst TAG = 'OpeningDialogUIExt';\n\nexport default class OpeningDialogUIExtAbility extends UIExtensionAbility {\n  async onSessionCreate(want: Want, session: UIExtensionContentSession): Promise<void> {\n    HiLog.info(TAG, 'OpeningDialogUIExtAbility onSessionCreate start');\n    try {\n      session.loadContent('pages/OpeningDialog');\n      session.setWindowBackgroundColor(Constants.TRANSPARENT_BACKGROUND_COLOR);\n      CommonEventManager.getInstance().init();\n    } catch (error) {\n      HiLog.wrapError(TAG, error, 'loadContent failed');\n    }\n    OpeningDialogService.getInstance().setContext(this.context);\n    OpeningDialogService.getInstance().connectViewAbility();\n  }\n\n  onSessionDestroy(session: UIExtensionContentSession): void {\n    HiLog.info(TAG, 'OpeningDialogUIExtAbility onSessionDestroy');\n    CommonEventManager.getInstance().unsubscribe();\n    OpeningDialogService.getInstance().disconnectViewAbility();\n  }\n\n  onWindowStageDestroy(): void {\n    HiLog.info(TAG, 'OpeningDialogUIExtAbility onWindowStageDestroy');\n  }\n\n  onForeground(): void {\n    HiLog.info(TAG, 'OpeningDialogUIExtAbility onForeground');\n  }\n\n  onBackground() {\n    HiLog.info(TAG, 'OpeningDialogUIExtAbility onBackground');\n  }\n};\n", "id": "5bb0d91687a37be3e677d0bb976480952426a858a4ef03f45b50212569b7ed73", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "ArkTS生态耦合良好，结构清晰，具备实际业务逻辑与可复用性", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 1615, "completion_tokens": 72, "total_tokens": 1687, "raw_response": "```json\n{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"ArkTS生态耦合良好，结构清晰，具备实际业务逻辑与可复用性\"\n}\n```", "llm_formatted": "import UIExtensionContentSession from '@ohos.app.ability.UIExtensionContentSession';\nimport UIExtensionAbility from '@ohos.app.ability.UIExtensionAbility';\nimport { HiLog } from '../common/HiLog';\nimport Constants from '../common/constant';\nimport Want from '@ohos.app.ability.Want';\nimport OpeningDialogService from '../rpc/OpeningDialog/service/OpeningDialogService';\nimport CommonEventManager from '../common/CommonEventManager';\n\nconst TAG = 'OpeningDialogUIExt';\n\nexport default class OpeningDialogUIExtAbility extends UIExtensionAbility {\n  async onSessionCreate(want: Want, session: UIExtensionContentSession): Promise<void> {\n    HiLog.info(TAG, 'OpeningDialogUIExtAbility onSessionCreate start');\n    try {\n      session.loadContent('pages/OpeningDialog');\n      session.setWindowBackgroundColor(Constants.TRANSPARENT_BACKGROUND_COLOR);\n      CommonEventManager.getInstance().init();\n    } catch (error) {\n      HiLog.wrapError(TAG, error, 'loadContent failed');\n    }\n    OpeningDialogService.getInstance().setContext(this.context);\n    OpeningDialogService.getInstance().connectViewAbility();\n  }\n\n  onSessionDestroy(session: UIExtensionContentSession): void {\n    HiLog.info(TAG, 'OpeningDialogUIExtAbility onSessionDestroy');\n    CommonEventManager.getInstance().unsubscribe();\n    OpeningDialogService.getInstance().disconnectViewAbility();\n  }\n\n  onWindowStageDestroy(): void {\n    HiLog.info(TAG, 'OpeningDialogUIExtAbility onWindowStageDestroy');\n  }\n\n  onForeground(): void {\n    HiLog.info(TAG, 'OpeningDialogUIExtAbility onForeground');\n  }\n\n  onBackground() {\n    HiLog.info(TAG, 'OpeningDialogUIExtAbility onBackground');\n  }\n}", "leaked": true, "text_tokens": 347, "split": "valid"}
{"path": "component_collection_master~张兴华~1071/entry/src/main/ets/pages/animations/TransitionAnimations/shareElementTransitionSample/ShareElementTransitionSampleTo.ets", "project_name": "component_collection_master~张兴华~1071", "text": "import { router } from '@kit.ArkUI';\n\n@Entry\n@Component\nstruct ShareElementTransitionSampleTo {\n  @State image: Resource = $r('app.media.img_test_1')\n  @State sharedTransitionID: number = -1\n\n  build() {\n    Column() {\n      Image(this.image)\n        .objectFit(ImageFit.Contain)\n        .sharedTransition(`sharedImage_${this.sharedTransitionID}`)\n        .onClick(() => {\n          router.back()\n        }).id('test_back')\n    }\n    .padding(12)\n    .backgroundColor(Color.Black)\n    .justifyContent(FlexAlign.Center)\n  }\n\n  aboutToAppear() {\n    let params: Record<string, Object> = router.getParams() as Record<string, Object>;\n    this.image = params['image'] as Resource;\n    this.sharedTransitionID = params['id'] as number;\n  }\n}", "id": "3e8f958924a75c07baccb95dd4d56a4bfe036818819fdbb1e34e6f1d6f86812a", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 3.0, "confidence": 0.95, "rationale": "符合ArkTS生态，结构清晰，使用了共享过渡动画特性，具有实用学习价值。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2052, "completion_tokens": 69, "total_tokens": 2121, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 3,\n  \"confidence\": 0.95,\n  \"rationale\": \"符合ArkTS生态，结构清晰，使用了共享过渡动画特性，具有实用学习价值。\"\n}", "llm_formatted": "import { router } from '@kit.ArkUI';\n\n@Entry\n@Component\nstruct ShareElementTransitionSampleTo {\n  @State image: Resource = $r('app.media.img_test_1')\n  @State sharedTransitionID: number = -1\n\n  build() {\n    Column() {\n      Image(this.image)\n        .objectFit(ImageFit.Contain)\n        .sharedTransition(`sharedImage_${this.sharedTransitionID}`)\n        .onClick(() => {\n          router.back()\n        })\n        .id('test_back')\n    }\n    .padding(12)\n    .backgroundColor(Color.Black)\n    .justifyContent(FlexAlign.Center)\n  }\n\n  aboutToAppear() {\n    let params: Record<string, Object> = router.getParams() as Record<string, Object>;\n    this.image = params['image'] as Resource;\n    this.sharedTransitionID = params['id'] as number;\n  }\n}", "leaked": true, "text_tokens": 183, "split": "valid"}
{"path": "applications_mms~openharmony~1285/entry/src/main/ets/service/ContractService.ets", "project_name": "applications_mms~openharmony~1285", "text": "import HiLog from '../utils/HiLog';\nimport common from '../data/commonData';\nimport telephoneUtil from '../utils/TelephoneUtil';\nimport LooseObject from '../data/LooseObject'\n\nconst TAG = 'ContractService';\n\nexport default {\n\n    /**\n     * Querying the contact list\n     *\n     * @param actionData\n     * @callback callback\n     */\n    queryContact(actionData, callback) {\n        // Obtain rawContractIds and query contacts.\n        globalThis.DataWorker.sendRequest('queryContact', {\n            actionData: actionData,\n            context: globalThis.mmsContext\n        }, rawContractIds => {\n            let result: LooseObject = {};\n            actionData.contractIds = rawContractIds;\n            globalThis.DataWorker.sendRequest('queryContactDataByIds', {\n                actionData: actionData,\n                context: globalThis.mmsContext\n            }, contracts => {\n                result.code = common.int.SUCCESS;\n                this.convertContracts(contracts, messageList => {\n                    result.response = messageList;\n                    callback(result);\n                });\n            });\n        });\n    },\n\n    /**\n     * Counting the number of rows of contacts\n     *\n     * @param actionData\n     * @callback callback\n     */\n    countContact(actionData, callback) {\n        // Obtain rawContractIds and query contacts.\n        globalThis.DataWorker.sendRequest('countContact', {\n            actionData: actionData,\n            context: globalThis.mmsContext\n        }, count => {\n            let result: LooseObject = {};\n            result.code = common.int.SUCCESS;\n            result.response = count;\n            callback(result);\n        });\n    },\n\n    /**\n     * Convert contact parameters\n     *\n     * @param contracts\n     * @callback callback\n     */\n    async convertContracts(contracts, callback) {\n        let messageList = [];\n        for (let contract of contracts) {\n            let item: LooseObject = {};\n            item.contactName = contract.displayName;\n            item.headImage = 'icon/user_avatar_full_fill.svg';\n            item.telephone = contract.detailInfo;\n            item.telephoneFormat = contract.detailInfo;\n            item.select = false;\n            messageList.push(item);\n        }\n        callback(messageList);\n    },\n\n    /**\n     * Process contact parameters\n     *\n     * @param contactObjects\n     */\n    dealContractParams(contactObjects): LooseObject {\n        let contractParams: LooseObject = {};\n        if (contactObjects && contactObjects != common.string.EMPTY_STR) {\n            let params: Array<LooseObject> = [];\n            try {\n                params = JSON.parse(contactObjects);\n            } catch (Error) {\n                HiLog.i(TAG, `JSON.parse error ${Error}`);\n                return contractParams;\n            }\n            let contactsNumber: string = common.string.EMPTY_STR;\n            let contactsName: string = common.string.EMPTY_STR;\n            let contactsNumberFormat: string = common.string.EMPTY_STR;\n            let length: number = params.length;\n            for (let item of params) {\n                contactsNumber = contactsNumber + item.telephone + common.string.COMMA;\n                contactsNumberFormat = contactsNumberFormat + item.telephone + common.string.COMMA;\n                if (item.contactsName) {\n                    contactsName += (item.contactsName + common.string.COMMA);\n                } else if (length > 1) {\n                    contactsName += (item.telephone + common.string.COMMA);\n                }\n            }\n            let telephone: string = contactsNumber.substring(0, contactsNumber.length - 1);\n            contactsNumber = telephoneUtil.dealTelephoneSort(telephone);\n            contractParams.strContactsNumber = contactsNumber;\n            contractParams.strContactsNumberFormat = contactsNumber;\n            contractParams.strContactsName = contactsName.substring(0, contactsName.length - 1);\n            contractParams.contactsNum = length;\n        }\n        return contractParams;\n    },\n\n    /**\n     * Query a contact by mobile number.\n     *\n     * @param actionData\n     * @callback callback\n     */\n    queryContactDataByTelephone(actionData, callback) {\n        globalThis.DataWorker.sendRequest('queryContactDataByTelephone', {\n            actionData: actionData,\n            context: globalThis.mmsContext\n        }, contracts => {\n            callback(contracts);\n        });\n    },\n\n    /**\n     * Fuzzy search for contacts\n     *\n     * @param actionData\n     * @callback callback\n     */\n    searchContracts(actionData, callback) {\n        let result: LooseObject = {};\n        globalThis.DataWorker.sendRequest('searchContracts', {\n            actionData: actionData,\n            context: globalThis.mmsContext\n        }, (res) =>{\n            result.code = res.code\n            if (res.code == common.int.SUCCESS) {\n                result.response = this.dealSearchContracts(res.abilityResult);\n                callback(result);\n            }\n        });\n    },\n\n    dealSearchContracts(contracts) {\n        let searchContracts = []\n        for (let item of contracts) {\n            let searchContract: LooseObject = {};\n            searchContract.headImage = 'icon/user_avatar_full_fill.svg';\n            searchContract.contactName = item.displayName;\n            searchContract.telephone = item.detailInfo;\n            searchContract.telephoneFormat = item.detailInfo;\n            searchContracts.push(searchContract);\n        }\n        return searchContracts;\n    },\n\n    /**\n     * Check whether a business card exists.\n     *\n     * @param actionData\n     * @callback callback\n     */\n    judgeIsExitProfile(actionData, callback) {\n        globalThis.DataWorker.sendRequest('queryProfile', {\n            actionData: actionData,\n            context: globalThis.mmsContext\n        }, res => {\n            let result = false;\n            if (res > 0) {\n                result = true;\n            }\n            callback(result);\n        });\n    }\n}", "id": "86bed1e47b7b978dd4488b897f1745b9b176c150db26df4c21fa3097d4c11870", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "结构清晰，类型与命名规范，具备实际业务逻辑与ArkTS生态耦合特征。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 3054, "completion_tokens": 69, "total_tokens": 3123, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"结构清晰，类型与命名规范，具备实际业务逻辑与ArkTS生态耦合特征。\"\n}", "llm_formatted": "import HiLog from '../utils/HiLog';\nimport common from '../data/commonData';\nimport telephoneUtil from '../utils/TelephoneUtil';\nimport LooseObject from '../data/LooseObject'\n\nconst TAG = 'ContractService';\n\nexport default {\n\n    /**\n     * Querying the contact list\n     *\n     * @param actionData\n     * @callback callback\n     */\n    queryContact(actionData, callback) {\n        // Obtain rawContractIds and query contacts.\n        globalThis.DataWorker.sendRequest('queryContact', {\n            actionData: actionData,\n            context: globalThis.mmsContext\n        }, rawContractIds => {\n            let result: LooseObject = {};\n            actionData.contractIds = rawContractIds;\n            globalThis.DataWorker.sendRequest('queryContactDataByIds', {\n                actionData: actionData,\n                context: globalThis.mmsContext\n            }, contracts => {\n                result.code = common.int.SUCCESS;\n                this.convertContracts(contracts, messageList => {\n                    result.response = messageList;\n                    callback(result);\n                });\n            });\n        });\n    },\n\n    /**\n     * Counting the number of rows of contacts\n     *\n     * @param actionData\n     * @callback callback\n     */\n    countContact(actionData, callback) {\n        // Obtain rawContractIds and query contacts.\n        globalThis.DataWorker.sendRequest('countContact', {\n            actionData: actionData,\n            context: globalThis.mmsContext\n        }, count => {\n            let result: LooseObject = {};\n            result.code = common.int.SUCCESS;\n            result.response = count;\n            callback(result);\n        });\n    },\n\n    /**\n     * Convert contact parameters\n     *\n     * @param contracts\n     * @callback callback\n     */\n    async convertContracts(contracts, callback) {\n        let messageList = [];\n        for (let contract of contracts) {\n            let item: LooseObject = {};\n            item.contactName = contract.displayName;\n            item.headImage = 'icon/user_avatar_full_fill.svg';\n            item.telephone = contract.detailInfo;\n            item.telephoneFormat = contract.detailInfo;\n            item.select = false;\n            messageList.push(item);\n        }\n        callback(messageList);\n    },\n\n    /**\n     * Process contact parameters\n     *\n     * @param contactObjects\n     */\n    dealContractParams(contactObjects): LooseObject {\n        let contractParams: LooseObject = {};\n        if (contactObjects && contactObjects != common.string.EMPTY_STR) {\n            let params: Array<LooseObject> = [];\n            try {\n                params = JSON.parse(contactObjects);\n            } catch (Error) {\n                HiLog.i(TAG, `JSON.parse error ${Error}`);\n                return contractParams;\n            }\n            let contactsNumber: string = common.string.EMPTY_STR;\n            let contactsName: string = common.string.EMPTY_STR;\n            let contactsNumberFormat: string = common.string.EMPTY_STR;\n            let length: number = params.length;\n            for (let item of params) {\n                contactsNumber = contactsNumber + item.telephone + common.string.COMMA;\n                contactsNumberFormat = contactsNumberFormat + item.telephone + common.string.COMMA;\n                if (item.contactsName) {\n                    contactsName += (item.contactsName + common.string.COMMA);\n                } else if (length > 1) {\n                    contactsName += (item.telephone + common.string.COMMA);\n                }\n            }\n            let telephone: string = contactsNumber.substring(0, contactsNumber.length - 1);\n            contactsNumber = telephoneUtil.dealTelephoneSort(telephone);\n            contractParams.strContactsNumber = contactsNumber;\n            contractParams.strContactsNumberFormat = contactsNumber;\n            contractParams.strContactsName = contactsName.substring(0, contactsName.length - 1);\n            contractParams.contactsNum = length;\n        }\n        return contractParams;\n    },\n\n    /**\n     * Query a contact by mobile number.\n     *\n     * @param actionData\n     * @callback callback\n     */\n    queryContactDataByTelephone(actionData, callback) {\n        globalThis.DataWorker.sendRequest('queryContactDataByTelephone', {\n            actionData: actionData,\n            context: globalThis.mmsContext\n        }, contracts => {\n            callback(contracts);\n        });\n    },\n\n    /**\n     * Fuzzy search for contacts\n     *\n     * @param actionData\n     * @callback callback\n     */\n    searchContracts(actionData, callback) {\n        let result: LooseObject = {};\n        globalThis.DataWorker.sendRequest('searchContracts', {\n            actionData: actionData,\n            context: globalThis.mmsContext\n        }, (res) =>{\n            result.code = res.code\n            if (res.code == common.int.SUCCESS) {\n                result.response = this.dealSearchContracts(res.abilityResult);\n                callback(result);\n            }\n        });\n    },\n\n    dealSearchContracts(contracts) {\n        let searchContracts = []\n        for (let item of contracts) {\n            let searchContract: LooseObject = {};\n            searchContract.headImage = 'icon/user_avatar_full_fill.svg';\n            searchContract.contactName = item.displayName;\n            searchContract.telephone = item.detailInfo;\n            searchContract.telephoneFormat = item.detailInfo;\n            searchContracts.push(searchContract);\n        }\n        return searchContracts;\n    },\n\n    /**\n     * Check whether a business card exists.\n     *\n     * @param actionData\n     * @callback callback\n     */\n    judgeIsExitProfile(actionData, callback) {\n        globalThis.DataWorker.sendRequest('queryProfile', {\n            actionData: actionData,\n            context: globalThis.mmsContext\n        }, res => {\n            let result = false;\n            if (res > 0) {\n                result = true;\n            }\n            callback(result);\n        });\n    }\n}", "leaked": true, "text_tokens": 1185, "split": "valid"}
{"path": "language-base-class-library~harmonyos_samples~528/feature/capabilities/src/main/ets/components/lightweightmapcomponents/LightWeightMapDataSource.ets", "project_name": "language-base-class-library~harmonyos_samples~528", "text": "import { BaseDataSource } from '@ohos/common';\nimport { KeyValuePair } from '../../model/KeyValuePair';\n\nexport class LightWeightMapDataSource extends BaseDataSource {\n  public dataArr: KeyValuePair[] = [];\n\n  public totalCount(): number {\n    return this.dataArr.length;\n  }\n\n  public getData(index: number): KeyValuePair {\n    return this.dataArr[index];\n  }\n\n  public addData(item: KeyValuePair): void {\n    this.dataArr.push(item);\n    this.notifyDataAdd(this.dataArr.length - 1);\n    this.notifyDataReload();\n  }\n\n  public deleteData(item: KeyValuePair, index: number): void {\n    this.dataArr.splice(index, 1);\n    this.notifyDataDelete(index);\n    this.notifyDataReload();\n  }\n}", "id": "2727382a4b47be59f416b8c80479826bf61c3a275a43953f6ecf152edc5f0a03", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "结构清晰，类型规范，符合 ArkTS 生态习惯", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 1419, "completion_tokens": 65, "total_tokens": 1484, "raw_response": "```json\n{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"结构清晰，类型规范，符合 ArkTS 生态习惯\"\n}\n```", "llm_formatted": "import { BaseDataSource } from '@ohos/common';\nimport { KeyValuePair } from '../../model/KeyValuePair';\n\nexport class LightWeightMapDataSource extends BaseDataSource {\n  public dataArr: KeyValuePair[] = [];\n\n  public totalCount(): number {\n    return this.dataArr.length;\n  }\n\n  public getData(index: number): KeyValuePair {\n    return this.dataArr[index];\n  }\n\n  public addData(item: KeyValuePair): void {\n    this.dataArr.push(item);\n    this.notifyDataAdd(this.dataArr.length - 1);\n    this.notifyDataReload();\n  }\n\n  public deleteData(item: KeyValuePair, index: number): void {\n    this.dataArr.splice(index, 1);\n    this.notifyDataDelete(index);\n    this.notifyDataReload();\n  }\n}", "leaked": true, "text_tokens": 151, "split": "valid"}
{"path": "testfwk_arkxtest~OpenHarmony~1905/jsunit/src_static/module/assert/assertNull.ets", "project_name": "testfwk_arkxtest~OpenHarmony~1905", "text": "import { AssertResult } from '../modal/assertModel';\nimport { AnyType } from '../types/common';\n\nexport function assertNull(actualValue: AnyType): AssertResult {\n  return {\n    pass: actualValue === null,\n    message: 'expect null, actualValue is ' + actualValue,\n  };\n}\n", "id": "2980d5131d9e45a5f658e69bbfc90fac16b8e3bc26216862903bd20eeaa10d94", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 3.0, "quality_score": 3.0, "confidence": 0.9, "rationale": "结构清晰，类型合理，具可复用性", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 1330, "completion_tokens": 63, "total_tokens": 1393, "raw_response": "```json\n{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 3,\n  \"quality_score\": 3,\n  \"confidence\": 0.9,\n  \"rationale\": \"结构清晰，类型合理，具可复用性\"\n}\n```", "llm_formatted": "import { AssertResult } from '../modal/assertModel';\nimport { AnyType } from '../types/common';\n\nexport function assertNull(actualValue: AnyType): AssertResult {\n  return {\n    pass: actualValue === null,\n    message: 'expect null, actualValue is ' + actualValue,\n  };\n}", "leaked": true, "text_tokens": 62, "split": "valid"}
{"path": "Immersive~harmonyos_samples~1315/features/shopping/src/main/ets/models/Detail.ets", "project_name": "Immersive~harmonyos_samples~1315", "text": "import { FAQ_DATA } from '../constants/Detail';\n\nexport interface Faq {\n  question: ResourceStr\n  answer: ResourceStr\n  likeCount?: number\n}\n\nexport function getFaqQuestions() {\n  return FAQ_DATA.slice(0, 3).map(faq => faq.question);\n}\n\nexport function getFaqData() {\n  return FAQ_DATA.map(faq => {\n    const newFaq: Faq = {\n      question: faq.question,\n      answer: faq.answer,\n      likeCount: Math.floor(Math.random() * 99)\n    }\n    return newFaq;\n  });\n}", "id": "50433e56e36b18a21d79a89853bed742ef52cab5cb45a6fbd17851c83f430e6e", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 3.0, "confidence": 0.9, "rationale": "结构清晰，类型规范，有实际业务逻辑，符合ArkTS/TS最佳实践", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 1397, "completion_tokens": 70, "total_tokens": 1467, "raw_response": "```json\n{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 3,\n  \"confidence\": 0.9,\n  \"rationale\": \"结构清晰，类型规范，有实际业务逻辑，符合ArkTS/TS最佳实践\"\n}\n```", "llm_formatted": "import { FAQ_DATA } from '../constants/Detail';\n\nexport interface Faq {\n  question: ResourceStr\n  answer: ResourceStr\n  likeCount?: number\n}\n\nexport function getFaqQuestions() {\n  return FAQ_DATA.slice(0, 3).map(faq => faq.question);\n}\n\nexport function getFaqData() {\n  return FAQ_DATA.map(faq => {\n    const newFaq: Faq = {\n      question: faq.question,\n      answer: faq.answer,\n      likeCount: Math.floor(Math.random() * 99)\n    }\n    return newFaq;\n  });\n}", "leaked": true, "text_tokens": 129, "split": "valid"}
{"path": "app-account-manager~harmonyos_samples~453/entry/src/main/ets/pages/Register.ets", "project_name": "app-account-manager~harmonyos_samples~453", "text": "import { RegisterInfo } from '../common/RegisterInfo';\nimport { NavigationBar } from '../common/NavigationBar';\n\n@Entry\n@Component\nstruct Register {\n  @State bundleName: string = (this.getUIContext().getRouter().getParams() as Record<string, string>)['bundleName'];\n\n  build() {\n    Scroll() {\n      Column() {\n        NavigationBar({ title: $r('app.string.register'), flag: true, url: 'pages/Login', bundleName: this.bundleName })\n\n        RegisterInfo({ bundleName: this.bundleName })\n      }\n    }\n  }\n}", "id": "ea5e5e4500e4fe545835e7ca5918c801845b02f2c46989466811e5089a0393a4", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 3.0, "confidence": 0.95, "rationale": "结构清晰，符合ArkTS生态，使用了@Entry、@Component等标准装饰器及组件化结构。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 1989, "completion_tokens": 73, "total_tokens": 2062, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 3,\n  \"confidence\": 0.95,\n  \"rationale\": \"结构清晰，符合ArkTS生态，使用了@Entry、@Component等标准装饰器及组件化结构。\"\n}", "llm_formatted": "import { RegisterInfo } from '../common/RegisterInfo';\nimport { NavigationBar } from '../common/NavigationBar';\n\n@Entry\n@Component\nstruct Register {\n  @State bundleName: string = (this.getUIContext().getRouter().getParams() as Record<string, string>)['bundleName'];\n\n  build() {\n    Scroll() {\n      Column() {\n        NavigationBar({ title: $r('app.string.register'), flag: true, url: 'pages/Login', bundleName: this.bundleName })\n\n        RegisterInfo({ bundleName: this.bundleName })\n      }\n    }\n  }\n}", "leaked": true, "text_tokens": 120, "split": "valid"}
{"path": "xts_acts~openharmony~1331/arkui/ace_c_arkui_test/entry/src/ohosTest/ets/test/hybird/HybirdGetNodeHandleTest.test.ets", "project_name": "xts_acts~openharmony~1331", "text": "import { beforeAll, describe, expect, it, Level } from '@ohos/hypium';\nimport Utils from '../common/Utils';\n\nexport default function hybirdGetNodeHandleTest() {\n\n  describe('HybirdGetNodeHandleTest', () => {\n\n    let PAGE_TAG = 'HybirdGetNodeHandleTest';\n\n    beforeAll(async (done: Function) => {\n      await Utils.pushPage(`hybird/${PAGE_TAG}`, done);\n    });\n\n    /*\n    * @tc.number     : SUB_ARKUI_CAPI_HYBIRD_GET_NODE_HANDLE_0001\n    * @tc.name       : testHybirdGetNodeHandle001\n    * @tc.desc       : test hybirdGetNodeHandle event callback\n    * @tc.size       : MediumTest\n    * @tc.type       : Function\n    * @tc.level      : Level 1\n    */\n    it('testHybirdGetNodeHandle001', Level.LEVEL1, async (done: Function) => {\n      expect(Utils.getComponentInfoByKey('row').$attrs.backgroundColor).assertEqual('#FF008000')\n      done()\n    })\n\n  })\n}\n", "id": "004d71d58714838e9e68f036d137969620f75f6ba9373aedbc43980734e468e1", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 3.0, "confidence": 0.9, "rationale": "符合ArkTS生态，结构清晰，含测试用例与实际业务逻辑，具备一定学习价值。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2113, "completion_tokens": 70, "total_tokens": 2183, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 3,\n  \"confidence\": 0.9,\n  \"rationale\": \"符合ArkTS生态，结构清晰，含测试用例与实际业务逻辑，具备一定学习价值。\"\n}", "llm_formatted": "import { beforeAll, describe, expect, it, Level } from '@ohos/hypium';\nimport Utils from '../common/Utils';\n\nexport default function hybirdGetNodeHandleTest() {\n\n  describe('HybirdGetNodeHandleTest', () => {\n\n    let PAGE_TAG = 'HybirdGetNodeHandleTest';\n\n    beforeAll(async (done: Function) => {\n      await Utils.pushPage(`hybird/${PAGE_TAG}`, done);\n    });\n\n    /*\n    * @tc.number     : SUB_ARKUI_CAPI_HYBIRD_GET_NODE_HANDLE_0001\n    * @tc.name       : testHybirdGetNodeHandle001\n    * @tc.desc       : test hybirdGetNodeHandle event callback\n    * @tc.size       : MediumTest\n    * @tc.type       : Function\n    * @tc.level      : Level 1\n    */\n    it('testHybirdGetNodeHandle001', Level.LEVEL1, async (done: Function) => {\n      expect(Utils.getComponentInfoByKey('row').$attrs.backgroundColor).assertEqual('#FF008000')\n      done()\n    })\n\n  })\n}\n", "leaked": true, "text_tokens": 244, "split": "valid"}
{"path": "xts_acts~openharmony~1331/arkui/ace_c_arkui_test/entry/src/ohosTest/ets/test/commonattrs/CommonAttrsDefaultFocusTest.test.ets", "project_name": "xts_acts~openharmony~1331", "text": "import { beforeEach, describe, expect, it, Level } from '@ohos/hypium';\nimport Utils from '../common/Utils';\nimport nativeFunc from 'libnativefunc.so'\n\nexport default function commonAttrsDefaultFocusTest() {\n    \n  describe('CommonAttrsDefaultFocusTest', () => {\n\n    beforeEach(async (done: Function) => {\n      await Utils.sleep(100);\n      done();\n    });\n\n    /*\n     * @tc.number     : SUB_ARKUI_CAPI_BUTTON_DEFAULTFOCUS_0100\n     * @tc.name       : testCommonAttrsDefaultFocus001\n     * @tc.desc       : testing defaultFocus for commonAttrs with valid value\n     * @tc.size       : MediumTest\n     * @tc.type       : Function\n     * @tc.level      : Level1\n     */\n    it('testCommonAttrsDefaultFocus001', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testCommonAttrsDefaultFocus001()).assertEqual(0)\n      done()\n    })\n\n    /*\n     * @tc.number     : SUB_ARKUI_CAPI_BUTTON_DEFAULTFOCUS_0200\n     * @tc.name       : testCommonAttrsDefaultFocus002\n     * @tc.desc       : testing defaultFocus for commonAttrs with valid value\n     * @tc.size       : MediumTest\n     * @tc.type       : Function\n     * @tc.level      : Level1\n     */\n    it('testCommonAttrsDefaultFocus002', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testCommonAttrsDefaultFocus002()).assertEqual(0)\n      done()\n    })\n\n    /*\n     * @tc.number     : SUB_ARKUI_CAPI_BUTTON_DEFAULTFOCUS_0300\n     * @tc.name       : testCommonAttrsDefaultFocus003\n     * @tc.desc       : testing defaultFocus for commonAttrs with invalid value\n     * @tc.size       : MediumTest\n     * @tc.type       : Function\n     * @tc.level      : Level1\n     */\n    it('testCommonAttrsDefaultFocus003', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testCommonAttrsDefaultFocus003()).assertEqual(0)\n      done()\n    })\n\n    /*\n     * @tc.number     : SUB_ARKUI_CAPI_BUTTON_DEFAULTFOCUS_0400\n     * @tc.name       : testCommonAttrsDefaultFocus004\n     * @tc.desc       : testing resetAttribute defaultFocus for commonAttrs\n     * @tc.size       : MediumTest\n     * @tc.type       : Function\n     * @tc.level      : Level1\n     */\n    it('testCommonAttrsDefaultFocus004', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testCommonAttrsDefaultFocus004()).assertEqual(0)\n      done()\n    })\n  })\n}", "id": "b515b645c83d668da369b817ff34308b8818945f7a999d8d2bafbc61151a367f", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 3.0, "confidence": 0.95, "rationale": "符合ArkTS生态，结构清晰，具备测试用例典型特征，有学习价值。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2508, "completion_tokens": 68, "total_tokens": 2576, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 3,\n  \"confidence\": 0.95,\n  \"rationale\": \"符合ArkTS生态，结构清晰，具备测试用例典型特征，有学习价值。\"\n}", "llm_formatted": "import { beforeEach, describe, expect, it, Level } from '@ohos/hypium';\nimport Utils from '../common/Utils';\nimport nativeFunc from 'libnativefunc.so';\n\nexport default function commonAttrsDefaultFocusTest() {\n  describe('CommonAttrsDefaultFocusTest', () => {\n    beforeEach(async (done: Function) => {\n      await Utils.sleep(100);\n      done();\n    });\n\n    it('testCommonAttrsDefaultFocus001', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testCommonAttrsDefaultFocus001()).assertEqual(0);\n      done();\n    });\n\n    it('testCommonAttrsDefaultFocus002', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testCommonAttrsDefaultFocus002()).assertEqual(0);\n      done();\n    });\n\n    it('testCommonAttrsDefaultFocus003', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testCommonAttrsDefaultFocus003()).assertEqual(0);\n      done();\n    });\n\n    it('testCommonAttrsDefaultFocus004', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testCommonAttrsDefaultFocus004()).assertEqual(0);\n      done();\n    });\n  });\n}", "leaked": true, "text_tokens": 639, "split": "valid"}
{"path": "applications_dlp_manager~openharmony~1048/entry/src/main/ets/Ability/data/IIdlDlpRpcServiceTs/id_dlpRpc_service_proxy.ets", "project_name": "applications_dlp_manager~openharmony~1048", "text": "import rpc from '@ohos.rpc';\nimport {\n  IDlpServiceCmdCode,\n  genDlpFileCallback,\n  openDlpFileCallback,\n  stopFuseLinkCallback,\n  resumeFuseLinkCallback,\n  replaceDlpLinkFileCallback,\n  recoverDlpFileCallback,\n  closeDlpFileCallback,\n  sandBoxLinkFileCallback,\n  fileOpenHistoryCallback,\n  linkSetCallback\n  } from './i_id_dlpRpc_service';\nimport IIdDlpRpcService from './i_id_dlpRpc_service';\nimport IDLDLPProperty from '../../../common/dlpClass';\nimport Constants from '../../../common/constant';\nimport { HiLog } from '../../../common/HiLog';\n\nconst TAG = 'service_proxy';\n\nexport default class IdDlpRpcServiceProxy implements IIdDlpRpcService {\n  private proxy: rpc.IRemoteObject;\n\n  constructor(proxy: rpc.IRemoteObject) {\n    this.proxy = proxy;\n  }\n\n  async genDlpFile(\n    inputUri: string, outputUri: string, dlp: IDLDLPProperty, callback: genDlpFileCallback\n  ): Promise<void> {\n    HiLog.info(TAG, `genDlpFile called`);\n    let _option = new rpc.MessageOption();\n    let _data = new rpc.MessageSequence();\n    let _reply = new rpc.MessageSequence();\n    _data.writeInterfaceToken(Constants.DLP_MGR_INTERFACE_TOKEN);\n    _data.writeString(inputUri);\n    _data.writeString(outputUri);\n    _data.writeParcelable(dlp);\n    await this.proxy.sendMessageRequest(IDlpServiceCmdCode.COMMAND_GEN_DLP_FILE, _data, _reply, _option)\n      .then((result: rpc.RequestResult)=>{\n        if (result.errCode === Constants.DLPRPC_SERVICE_PROXY_ERRCODE) {\n          let _errCode = result.reply.readInt();\n          callback(_errCode);\n        } else {\n          HiLog.error(TAG, `sendMessageRequest failed, errCode: ${result.errCode}`);\n          callback(result.errCode);\n        }\n    }).finally(() => {\n      _data.reclaim();\n      _reply.reclaim();\n    });\n  }\n\n  async openDlpFile(srcUri: string, callerAppId: string, callback: openDlpFileCallback): Promise<void> {\n    HiLog.info(TAG, `openDlpFile called`);\n    let _dlp = new IDLDLPProperty('', '', 0, [], '', true, [], 0);\n    let _option = new rpc.MessageOption();\n    let _data = new rpc.MessageSequence();\n    let _reply = new rpc.MessageSequence();\n    _data.writeInterfaceToken(Constants.DLP_MGR_INTERFACE_TOKEN);\n    _data.writeString(srcUri);\n    _data.writeString(callerAppId);\n    await this.proxy.sendMessageRequest(IDlpServiceCmdCode.COMMAND_OPEN_DLP_FILE, _data, _reply, _option)\n      .then((result: rpc.RequestResult)=>{\n      if (result.errCode === Constants.DLPRPC_SERVICE_PROXY_ERRCODE) {\n        let _errCode = result.reply.readInt();\n        result.reply.readParcelable(_dlp);\n        let _msg = result.reply.readString();\n        callback(_errCode, _dlp, _msg);\n      } else {\n        HiLog.error(TAG, `sendMessageRequest failed, errCode: ${result.errCode}`);\n        callback(result.errCode, _dlp, result.data.readString());\n      }\n    }).finally(() => {\n      _data.reclaim();\n      _reply.reclaim();\n    });\n  }\n\n  async stopFuseLink(uri: string, callback: stopFuseLinkCallback): Promise<void> {\n    HiLog.info(TAG, `stopFuseLink called`);\n    let _option = new rpc.MessageOption();\n    let _data = new rpc.MessageSequence();\n    let _reply = new rpc.MessageSequence();\n    _data.writeInterfaceToken(Constants.DLP_MGR_INTERFACE_TOKEN);\n    _data.writeString(uri);\n    await this.proxy.sendMessageRequest(IDlpServiceCmdCode.COMMAND_STOP_FUSE_LINK, _data, _reply, _option)\n      .then((result: rpc.RequestResult)=>{\n        if (result.errCode === Constants.DLPRPC_SERVICE_PROXY_ERRCODE) {\n          let _errCode = result.reply.readInt();\n          callback(_errCode);\n        } else {\n          HiLog.error(TAG, `sendMessageRequest failed, errCode: ${result.errCode}`);\n          callback(result.errCode);\n        }\n    }).finally(() => {\n      _data.reclaim();\n      _reply.reclaim();\n    });\n  }\n\n  async resumeFuseLink(uri: string, callback: resumeFuseLinkCallback): Promise<void> {\n    HiLog.info(TAG, `resumeFuseLink called`);\n    let _option = new rpc.MessageOption();\n    let _data = new rpc.MessageSequence();\n    let _reply = new rpc.MessageSequence();\n    _data.writeInterfaceToken(Constants.DLP_MGR_INTERFACE_TOKEN);\n    _data.writeString(uri);\n    await this.proxy.sendMessageRequest(IDlpServiceCmdCode.COMMAND_RESUME_FUSE_LINK, _data, _reply, _option)\n      .then((result: rpc.RequestResult)=>{\n        if (result.errCode === Constants.DLPRPC_SERVICE_PROXY_ERRCODE) {\n          let _errCode = result.reply.readInt();\n          callback(_errCode);\n        } else {\n          HiLog.error(TAG, `sendMessageRequest failed, errCode: ${result.errCode}`);\n          callback(result.errCode);\n        }\n    }).finally(() => {\n      _data.reclaim();\n      _reply.reclaim();\n    });\n  }\n\n  async replaceDlpLinkFile(uri: string, linkFileName: string, callback: replaceDlpLinkFileCallback): Promise<void> {\n    HiLog.info(TAG, `replaceDlpLinkFile called`);\n    let _option = new rpc.MessageOption();\n    let _data = new rpc.MessageSequence();\n    let _reply = new rpc.MessageSequence();\n    _data.writeInterfaceToken(Constants.DLP_MGR_INTERFACE_TOKEN);\n    _data.writeString(uri);\n    _data.writeString(linkFileName);\n    await this.proxy.sendMessageRequest(IDlpServiceCmdCode.COMMAND_REPLACE_DLP_LINK_FILE, _data, _reply, _option)\n      .then((result: rpc.RequestResult)=>{\n        if (result.errCode === Constants.DLPRPC_SERVICE_PROXY_ERRCODE) {\n          let _errCode = result.reply.readInt();\n          callback(_errCode);\n        } else {\n          HiLog.error(TAG, `sendMessageRequest failed, errCode: ${result.errCode}`);\n          callback(result.errCode);\n        }\n    }).finally(() => {\n      _data.reclaim();\n      _reply.reclaim();\n    });\n  }\n\n  async recoverDlpFile(srcUri: string, pathUri: string, callback: recoverDlpFileCallback): Promise<void> {\n    HiLog.info(TAG, `recoverDlpFile called`);\n    let _option = new rpc.MessageOption();\n    let _data = new rpc.MessageSequence();\n    let _reply = new rpc.MessageSequence();\n    _data.writeInterfaceToken(Constants.DLP_MGR_INTERFACE_TOKEN);\n    _data.writeString(srcUri);\n    _data.writeString(pathUri);\n    await this.proxy.sendMessageRequest(IDlpServiceCmdCode.COMMAND_RECOVER_DLP_FILE, _data, _reply, _option)\n      .then((result: rpc.RequestResult)=>{\n        if (result.errCode === Constants.DLPRPC_SERVICE_PROXY_ERRCODE) {\n          let _errCode = result.reply.readInt();\n          callback(_errCode);\n        } else {\n          HiLog.error(TAG, `sendMessageRequest failed, errCode: ${result.errCode}`);\n          callback(result.errCode);\n        }\n    }).finally(() => {\n      _data.reclaim();\n      _reply.reclaim();\n    });\n  }\n  \n  async closeDlpFile(srcUri: string, callback: closeDlpFileCallback): Promise<void> {\n    HiLog.info(TAG, `closeDlpFile called`);\n    let _option = new rpc.MessageOption();\n    let _data = new rpc.MessageSequence();\n    let _reply = new rpc.MessageSequence();\n    _data.writeInterfaceToken(Constants.DLP_MGR_INTERFACE_TOKEN);\n    _data.writeString(srcUri);\n\n    await this.proxy.sendMessageRequest(IDlpServiceCmdCode.COMMAND_CLOSE_DLP_FILE, _data, _reply, _option)\n      .then((result: rpc.RequestResult)=>{\n        if (result.errCode === Constants.DLPRPC_SERVICE_PROXY_ERRCODE) {\n          let _errCode = result.reply.readInt();\n          callback(_errCode);\n        } else {\n          HiLog.error(TAG, `sendMessageRequest failed, errCode: ${result.errCode}`);\n          callback(result.errCode);\n        }\n    }).finally(() => {\n      _data.reclaim();\n      _reply.reclaim();\n    });\n  }\n\n  async sandBoxLinkFile(linkFileName: string, callerToken: number, callback: sandBoxLinkFileCallback): Promise<void> {\n    HiLog.info(TAG, `sandBoxLinkFile called`);\n    let _dlp = new IDLDLPProperty('', '', 0, [], '', true, [], 0);\n    let _option = new rpc.MessageOption();\n    let _data = new rpc.MessageSequence();\n    let _reply = new rpc.MessageSequence();\n    _data.writeInterfaceToken(Constants.DLP_MGR_INTERFACE_TOKEN);\n    _data.writeString(linkFileName);\n    _data.writeLong(callerToken);\n    await this.proxy.sendMessageRequest(IDlpServiceCmdCode.COMMAND_SANDBOX_LINK_FILE, _data, _reply, _option)\n      .then((result: rpc.RequestResult)=>{\n        if (result.errCode === Constants.DLPRPC_SERVICE_PROXY_ERRCODE) {\n          let _errCode = result.reply.readInt();\n          result.reply.readParcelable(_dlp);\n          let _fileUri = result.reply.readString();\n          callback(_errCode, _dlp, _fileUri);\n        } else {\n          HiLog.error(TAG, `sendMessageRequest failed, errCode: ${result.errCode}`);\n          callback(result.errCode, _dlp, '');\n        }\n    }).finally(() => {\n      _data.reclaim();\n      _reply.reclaim();\n    });\n  }\n\n  async fileOpenHistory(uri: string, callback: fileOpenHistoryCallback): Promise<void> {\n    HiLog.info(TAG, `fileOpenHistory called`);\n    let _option = new rpc.MessageOption();\n    let _data = new rpc.MessageSequence();\n    let _reply = new rpc.MessageSequence();\n    _data.writeInterfaceToken(Constants.DLP_MGR_INTERFACE_TOKEN);\n    _data.writeString(uri);\n    await this.proxy.sendMessageRequest(IDlpServiceCmdCode.COMMAND_FILE_OPEN_HISTORY, _data, _reply, _option)\n      .then((result: rpc.RequestResult)=>{\n        if (result.errCode === Constants.DLPRPC_SERVICE_PROXY_ERRCODE) {\n          let _errCode = result.reply.readInt();\n          callback(_errCode);\n        } else {\n          HiLog.error(TAG, `sendMessageRequest failed, errCode: ${result.errCode}`);\n          callback(result.errCode);\n        }\n    }).finally(() => {\n      _data.reclaim();\n      _reply.reclaim();\n    });\n  }\n\n  async linkSet(uri: string, callback: linkSetCallback): Promise<void> {\n    HiLog.info(TAG, `linkSet called`);\n    let _option = new rpc.MessageOption();\n    let _data = new rpc.MessageSequence();\n    let _reply = new rpc.MessageSequence();\n    _data.writeInterfaceToken(Constants.DLP_MGR_INTERFACE_TOKEN);\n    _data.writeString(uri);\n    await this.proxy.sendMessageRequest(IDlpServiceCmdCode.COMMAND_FILE_LINK_SET, _data, _reply, _option)\n      .then((result: rpc.RequestResult)=>{\n        if (result.errCode === Constants.DLPRPC_SERVICE_PROXY_ERRCODE) {\n          let _errCode = result.reply.readInt();\n          callback(_errCode);\n        } else {\n          HiLog.error(TAG, `sendMessageRequest failed, errCode: ${result.errCode}`);\n          callback(result.errCode);\n        }\n    }).finally(() => {\n      _data.reclaim();\n      _reply.reclaim();\n    });\n  }\n}\n\n", "id": "729a3a6efe6daa3505cc27ff4f9a3e2e7ba70e47a6e8df5558abc36877748697", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "ArkTS语法规范，生态耦合自然，逻辑清晰，具学习价值", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 3751, "completion_tokens": 69, "total_tokens": 3820, "raw_response": "```json\n{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"ArkTS语法规范，生态耦合自然，逻辑清晰，具学习价值\"\n}\n```", "llm_formatted": "import rpc from '@ohos.rpc';\nimport {\n  IDlpServiceCmdCode,\n  genDlpFileCallback,\n  openDlpFileCallback,\n  stopFuseLinkCallback,\n  resumeFuseLinkCallback,\n  replaceDlpLinkFileCallback,\n  recoverDlpFileCallback,\n  closeDlpFileCallback,\n  sandBoxLinkFileCallback,\n  fileOpenHistoryCallback,\n  linkSetCallback\n  } from './i_id_dlpRpc_service';\nimport IIdDlpRpcService from './i_id_dlpRpc_service';\nimport IDLDLPProperty from '../../../common/dlpClass';\nimport Constants from '../../../common/constant';\nimport { HiLog } from '../../../common/HiLog';\n\nconst TAG = 'service_proxy';\n\nexport default class IdDlpRpcServiceProxy implements IIdDlpRpcService {\n  private proxy: rpc.IRemoteObject;\n\n  constructor(proxy: rpc.IRemoteObject) {\n    this.proxy = proxy;\n  }\n\n  async genDlpFile(\n    inputUri: string, outputUri: string, dlp: IDLDLPProperty, callback: genDlpFileCallback\n  ): Promise<void> {\n    HiLog.info(TAG, `genDlpFile called`);\n    let _option = new rpc.MessageOption();\n    let _data = new rpc.MessageSequence();\n    let _reply = new rpc.MessageSequence();\n    _data.writeInterfaceToken(Constants.DLP_MGR_INTERFACE_TOKEN);\n    _data.writeString(inputUri);\n    _data.writeString(outputUri);\n    _data.writeParcelable(dlp);\n    await this.proxy.sendMessageRequest(IDlpServiceCmdCode.COMMAND_GEN_DLP_FILE, _data, _reply, _option)\n      .then((result: rpc.RequestResult)=>{\n        if (result.errCode === Constants.DLPRPC_SERVICE_PROXY_ERRCODE) {\n          let _errCode = result.reply.readInt();\n          callback(_errCode);\n        } else {\n          HiLog.error(TAG, `sendMessageRequest failed, errCode: ${result.errCode}`);\n          callback(result.errCode);\n        }\n    }).finally(() => {\n      _data.reclaim();\n      _reply.reclaim();\n    });\n  }\n\n  async openDlpFile(srcUri: string, callerAppId: string, callback: openDlpFileCallback): Promise<void> {\n    HiLog.info(TAG, `openDlpFile called`);\n    let _dlp = new IDLDLPProperty('', '', 0, [], '', true, [], 0);\n    let _option = new rpc.MessageOption();\n    let _data = new rpc.MessageSequence();\n    let _reply = new rpc.MessageSequence();\n    _data.writeInterfaceToken(Constants.DLP_MGR_INTERFACE_TOKEN);\n    _data.writeString(srcUri);\n    _data.writeString(callerAppId);\n    await this.proxy.sendMessageRequest(IDlpServiceCmdCode.COMMAND_OPEN_DLP_FILE, _data, _reply, _option)\n      .then((result: rpc.RequestResult)=>{\n      if (result.errCode === Constants.DLPRPC_SERVICE_PROXY_ERRCODE) {\n        let _errCode = result.reply.readInt();\n        result.reply.readParcelable(_dlp);\n        let _msg = result.reply.readString();\n        callback(_errCode, _dlp, _msg);\n      } else {\n        HiLog.error(TAG, `sendMessageRequest failed, errCode: ${result.errCode}`);\n        callback(result.errCode, _dlp, result.data.readString());\n      }\n    }).finally(() => {\n      _data.reclaim();\n      _reply.reclaim();\n    });\n  }\n\n  async stopFuseLink(uri: string, callback: stopFuseLinkCallback): Promise<void> {\n    HiLog.info(TAG, `stopFuseLink called`);\n    let _option = new rpc.MessageOption();\n    let _data = new rpc.MessageSequence();\n    let _reply = new rpc.MessageSequence();\n    _data.writeInterfaceToken(Constants.DLP_MGR_INTERFACE_TOKEN);\n    _data.writeString(uri);\n    await this.proxy.sendMessageRequest(IDlpServiceCmdCode.COMMAND_STOP_FUSE_LINK, _data, _reply, _option)\n      .then((result: rpc.RequestResult)=>{\n        if (result.errCode === Constants.DLPRPC_SERVICE_PROXY_ERRCODE) {\n          let _errCode = result.reply.readInt();\n          callback(_errCode);\n        } else {\n          HiLog.error(TAG, `sendMessageRequest failed, errCode: ${result.errCode}`);\n          callback(result.errCode);\n        }\n    }).finally(() => {\n      _data.reclaim();\n      _reply.reclaim();\n    });\n  }\n\n  async resumeFuseLink(uri: string, callback: resumeFuseLinkCallback): Promise<void> {\n    HiLog.info(TAG, `resumeFuseLink called`);\n    let _option = new rpc.MessageOption();\n    let _data = new rpc.MessageSequence();\n    let _reply = new rpc.MessageSequence();\n    _data.writeInterfaceToken(Constants.DLP_MGR_INTERFACE_TOKEN);\n    _data.writeString(uri);\n    await this.proxy.sendMessageRequest(IDlpServiceCmdCode.COMMAND_RESUME_FUSE_LINK, _data, _reply, _option)\n      .then((result: rpc.RequestResult)=>{\n        if (result.errCode === Constants.DLPRPC_SERVICE_PROXY_ERRCODE) {\n          let _errCode = result.reply.readInt();\n          callback(_errCode);\n        } else {\n          HiLog.error(TAG, `sendMessageRequest failed, errCode: ${result.errCode}`);\n          callback(result.errCode);\n        }\n    }).finally(() => {\n      _data.reclaim();\n      _reply.reclaim();\n    });\n  }\n\n  async replaceDlpLinkFile(uri: string, linkFileName: string, callback: replaceDlpLinkFileCallback): Promise<void> {\n    HiLog.info(TAG, `replaceDlpLinkFile called`);\n    let _option = new rpc.MessageOption();\n    let _data = new rpc.MessageSequence();\n    let _reply = new rpc.MessageSequence();\n    _data.writeInterfaceToken(Constants.DLP_MGR_INTERFACE_TOKEN);\n    _data.writeString(uri);\n    _data.writeString(linkFileName);\n    await this.proxy.sendMessageRequest(IDlpServiceCmdCode.COMMAND_REPLACE_DLP_LINK_FILE, _data, _reply, _option)\n      .then((result: rpc.RequestResult)=>{\n        if (result.errCode === Constants.DLPRPC_SERVICE_PROXY_ERRCODE) {\n          let _errCode = result.reply.readInt();\n          callback(_errCode);\n        } else {\n          HiLog.error(TAG, `sendMessageRequest failed, errCode: ${result.errCode}`);\n          callback(result.errCode);\n        }\n    }).finally(() => {\n      _data.reclaim();\n      _reply.reclaim();\n    });\n  }\n\n  async recoverDlpFile(srcUri: string, pathUri: string, callback: recoverDlpFileCallback): Promise<void> {\n    HiLog.info(TAG, `recoverDlpFile called`);\n    let _option = new rpc.MessageOption();\n    let _data = new rpc.MessageSequence();\n    let _reply = new rpc.MessageSequence();\n    _data.writeInterfaceToken(Constants.DLP_MGR_INTERFACE_TOKEN);\n    _data.writeString(srcUri);\n    _data.writeString(pathUri);\n    await this.proxy.sendMessageRequest(IDlpServiceCmdCode.COMMAND_RECOVER_DLP_FILE, _data, _reply, _option)\n      .then((result: rpc.RequestResult)=>{\n        if (result.errCode === Constants.DLPRPC_SERVICE_PROXY_ERRCODE) {\n          let _errCode = result.reply.readInt();\n          callback(_errCode);\n        } else {\n          HiLog.error(TAG, `sendMessageRequest failed, errCode: ${result.errCode}`);\n          callback(result.errCode);\n        }\n    }).finally(() => {\n      _data.reclaim();\n      _reply.reclaim();\n    });\n  }\n  \n  async closeDlpFile(srcUri: string, callback: closeDlpFileCallback): Promise<void> {\n    HiLog.info(TAG, `closeDlpFile called`);\n    let _option = new rpc.MessageOption();\n    let _data = new rpc.MessageSequence();\n    let _reply = new rpc.MessageSequence();\n    _data.writeInterfaceToken(Constants.DLP_MGR_INTERFACE_TOKEN);\n    _data.writeString(srcUri);\n\n    await this.proxy.sendMessageRequest(IDlpServiceCmdCode.COMMAND_CLOSE_DLP_FILE, _data, _reply, _option)\n      .then((result: rpc.RequestResult)=>{\n        if (result.errCode === Constants.DLPRPC_SERVICE_PROXY_ERRCODE) {\n          let _errCode = result.reply.readInt();\n          callback(_errCode);\n        } else {\n          HiLog.error(TAG, `sendMessageRequest failed, errCode: ${result.errCode}`);\n          callback(result.errCode);\n        }\n    }).finally(() => {\n      _data.reclaim();\n      _reply.reclaim();\n    });\n  }\n\n  async sandBoxLinkFile(linkFileName: string, callerToken: number, callback: sandBoxLinkFileCallback): Promise<void> {\n    HiLog.info(TAG, `sandBoxLinkFile called`);\n    let _dlp = new IDLDLPProperty('', '', 0, [], '', true, [], 0);\n    let _option = new rpc.MessageOption();\n    let _data = new rpc.MessageSequence();\n    let _reply = new rpc.MessageSequence();\n    _data.writeInterfaceToken(Constants.DLP_MGR_INTERFACE_TOKEN);\n    _data.writeString(linkFileName);\n    _data.writeLong(callerToken);\n    await this.proxy.sendMessageRequest(IDlpServiceCmdCode.COMMAND_SANDBOX_LINK_FILE, _data, _reply, _option)\n      .then((result: rpc.RequestResult)=>{\n        if (result.errCode === Constants.DLPRPC_SERVICE_PROXY_ERRCODE) {\n          let _errCode = result.reply.readInt();\n          result.reply.readParcelable(_dlp);\n          let _fileUri = result.reply.readString();\n          callback(_errCode, _dlp, _fileUri);\n        } else {\n          HiLog.error(TAG, `sendMessageRequest failed, errCode: ${result.errCode}`);\n          callback(result.errCode, _dlp, '');\n        }\n    }).finally(() => {\n      _data.reclaim();\n      _reply.reclaim();\n    });\n  }\n\n  async fileOpenHistory(uri: string, callback: fileOpenHistoryCallback): Promise<void> {\n    HiLog.info(TAG, `fileOpenHistory called`);\n    let _option = new rpc.MessageOption();\n    let _data = new rpc.MessageSequence();\n    let _reply = new rpc.MessageSequence();\n    _data.writeInterfaceToken(Constants.DLP_MGR_INTERFACE_TOKEN);\n    _data.writeString(uri);\n    await this.proxy.sendMessageRequest(IDlpServiceCmdCode.COMMAND_FILE_OPEN_HISTORY, _data, _reply, _option)\n      .then((result: rpc.RequestResult)=>{\n        if (result.errCode === Constants.DLPRPC_SERVICE_PROXY_ERRCODE) {\n          let _errCode = result.reply.readInt();\n          callback(_errCode);\n        } else {\n          HiLog.error(TAG, `sendMessageRequest failed, errCode: ${result.errCode}`);\n          callback(result.errCode);\n        }\n    }).finally(() => {\n      _data.reclaim();\n      _reply.reclaim();\n    });\n  }\n\n  async linkSet(uri: string, callback: linkSetCallback): Promise<void> {\n    HiLog.info(TAG, `linkSet called`);\n    let _option = new rpc.MessageOption();\n    let _data = new rpc.MessageSequence();\n    let _reply = new rpc.MessageSequence();\n    _data.writeInterfaceToken(Constants.DLP_MGR_INTERFACE_TOKEN);\n    _data.writeString(uri);\n    await this.proxy.sendMessageRequest(IDlpServiceCmdCode.COMMAND_FILE_LINK_SET, _data, _reply, _option)\n      .then((result: rpc.RequestResult)=>{\n        if (result.errCode === Constants.DLPRPC_SERVICE_PROXY_ERRCODE) {\n          let _errCode = result.reply.readInt();\n          callback(_errCode);\n        } else {\n          HiLog.error(TAG, `sendMessageRequest failed, errCode: ${result.errCode}`);\n          callback(result.errCode);\n        }\n    }).finally(() => {\n      _data.reclaim();\n      _reply.reclaim();\n    });\n  }\n}\n\n", "leaked": true, "text_tokens": 2483, "split": "valid"}
{"path": "grid-hybrid~harmonyos_samples~258/entry/src/main/ets/pages/Index.ets", "project_name": "grid-hybrid~harmonyos_samples~258", "text": "import { router } from '@kit.ArkUI';\nimport {CommonConstants} from '../constants/CommonConstants';\n\nclass DirectoryItem {\n  title: ResourceStr = '';\n  uri: string = '';\n  id: string = '';\n}\n\n@Entry\n@Component\nstruct Index {\n  private directory: DirectoryItem[] = [\n    {\n      title: $r('app.string.grid_nest_list'),\n      uri: CommonConstants.TABLE_GRID_NEST_LIST_URI,\n      id: 'GridNestListIndex'\n    },\n    {\n      title: $r('app.string.grid_nest_swiper'),\n      uri: CommonConstants.TABLE_GRID_NEST_SWIPER_URI,\n      id: 'GridNestSwiperIndex'\n    }\n  ];\n\n  build() {\n    Column(){\n      ForEach(this.directory, (item: DirectoryItem) => {\n        Button(item.title)\n          .id(item.id)\n          .fontSize($r('app.float.font_size'))\n          .width(CommonConstants.NINETY_PERCENT)\n          .height($r('app.float.button_height'))\n          .margin({bottom:$r('app.float.button_margin')})\n          .backgroundColor($r('app.color.button_background'))\n          .onClick(() => {\n            this.getUIContext().getRouter().pushUrl({\n              url: item.uri\n            });\n          })\n      }, (item: DirectoryItem) => JSON.stringify(item))\n    }\n    .justifyContent(FlexAlign.End)\n    .height(CommonConstants.FULL_PERCENT)\n    .width(CommonConstants.FULL_PERCENT)\n  }\n}", "id": "605a97886a9d40ca3d6c3f696cec4570197b32bcb6058b386d94cbd26b298c9f", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "结构完整，符合ArkTS生态规范，具备良好可迁移性与学习价值。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2178, "completion_tokens": 67, "total_tokens": 2245, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"结构完整，符合ArkTS生态规范，具备良好可迁移性与学习价值。\"\n}", "llm_formatted": "import { router } from '@kit.ArkUI';\nimport {CommonConstants} from '../constants/CommonConstants';\n\nclass DirectoryItem {\n  title: ResourceStr = '';\n  uri: string = '';\n  id: string = '';\n}\n\n@Entry\n@Component\nstruct Index {\n  private directory: DirectoryItem[] = [\n    {\n      title: $r('app.string.grid_nest_list'),\n      uri: CommonConstants.TABLE_GRID_NEST_LIST_URI,\n      id: 'GridNestListIndex'\n    },\n    {\n      title: $r('app.string.grid_nest_swiper'),\n      uri: CommonConstants.TABLE_GRID_NEST_SWIPER_URI,\n      id: 'GridNestSwiperIndex'\n    }\n  ];\n\n  build() {\n    Column(){\n      ForEach(this.directory, (item: DirectoryItem) => {\n        Button(item.title)\n          .id(item.id)\n          .fontSize($r('app.float.font_size'))\n          .width(CommonConstants.NINETY_PERCENT)\n          .height($r('app.float.button_height'))\n          .margin({bottom:$r('app.float.button_margin')})\n          .backgroundColor($r('app.color.button_background'))\n          .onClick(() => {\n            this.getUIContext().getRouter().pushUrl({\n              url: item.uri\n            });\n          })\n      }, (item: DirectoryItem) => JSON.stringify(item))\n    }\n    .justifyContent(FlexAlign.End)\n    .height(CommonConstants.FULL_PERCENT)\n    .width(CommonConstants.FULL_PERCENT)\n  }\n}", "leaked": true, "text_tokens": 309, "split": "valid"}
{"path": "applications_filepicker~OpenHarmony~799/entry/src/main/ets/pages/component/dialog/DownloadDialog.ets", "project_name": "applications_filepicker~OpenHarmony~799", "text": "import { DialogButton, DialogButtonDivider } from './DialogComponent';\nimport { display } from '@kit.ArkUI';\nimport Logger from '../../../base/log/Logger';\n\nconst TAG = 'DownloadDialog';\nlet storage = LocalStorage.getShared();\n\n@CustomDialog\nexport struct DownloadDialog {\n  controller?: CustomDialogController;\n  cancel: Function = () => {\n  };\n  confirm: Function = () => {\n  };\n  appName: string | undefined = storage.get<string>('appName');\n  appIcon: string | undefined = storage.get<string>('appIcon');\n  downloadTips: Resource = $r('app.string.download_tips', this.appName, this.appName);\n  cancelButtonText: Resource = $r('app.string.cancel');\n  confirmButtonText: Resource = $r('app.string.agree');\n  @State contentAlign: ItemAlign = ItemAlign.Start;\n  @State dialogWidth: number = 328;\n  closeDialogBind: Function = () => this.closeDialog();\n\n  aboutToAppear(): void {\n    let px2VpScale: number = px2vp(1);\n    let screenWidth: number = display.getDefaultDisplaySync()?.width ?\n    px2vp(display.getDefaultDisplaySync()?.width) : px2vp(display.getDefaultDisplaySync()?.width * px2VpScale);\n    this.dialogWidth = screenWidth > 432 ? 400 : screenWidth - 32;\n  }\n\n  closeDialog(): void {\n    if (this.controller) {\n      Logger.i(TAG, 'DownloadDialog close.');\n      this.controller.close();\n    }\n  }\n\n  build() {\n    Column() {\n      Column() {\n        this.downloadDialogContent();\n      }\n      .padding({\n        left: $r('app.float.common_padding24'),\n        right: $r('app.float.common_padding24')\n      })\n    }\n    .borderRadius($r('sys.float.ohos_id_corner_radius_dialog'))\n    .backgroundColor($r('sys.color.ohos_id_color_dialog_bg'))\n    .alignItems(HorizontalAlign.End)\n    .margin({ left: $r('app.float.common_margin16'), right: $r('app.float.common_margin16') })\n    .width(this.dialogWidth)\n  }\n\n  @Builder\n  downloadDialogContent() {\n    Row() {\n      Image(this.appIcon)\n        .fillColor($r('sys.color.ohos_id_color_primary'))\n        .objectFit(ImageFit.Contain)\n        .width($r('app.float.common_size64'))\n        .height($r('app.float.common_size64'))\n        .interpolation(ImageInterpolation.High)\n        .draggable(false)\n        .focusable(true)\n        .margin({ top: 24 })\n        .autoResize(false)\n    }\n\n    Row() {\n      Text(this.downloadTips)\n        .lineHeight(21)\n        .fontColor($r('sys.color.ohos_id_color_text_primary'))\n        .margin({ top: $r('app.float.common_margin16') })\n        .alignSelf(ItemAlign.Center)\n    }\n\n    Row() {\n      DialogButton({\n        text: this.cancelButtonText,\n        isDisabled: false,\n        color: '#0A56F7',\n        bgColor: '#F1F3F5',\n        click: () => {\n          this.cancel()\n          this.closeDialog()\n        }\n      })\n      DialogButtonDivider()\n      DialogButton({\n        text: this.confirmButtonText,\n        isDisabled: false,\n        color: '#0A56F7',\n        bgColor: '#F1F3F5',\n        click: () => {\n          this.confirm();\n          this.closeDialog();\n        }\n      })\n    }.width('100%')\n    .padding({ bottom: $r('app.float.common_margin10'), top: $r('app.float.common_margin10') })\n    .margin({\n      top: 8,\n    })\n  }\n}", "id": "0872061847641bdba61c0da1e73df80820b136da6af3ff587bbe9290ca731fce", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "ArkTS结构完整，生态耦合自然，具备实际应用价值与学习参考性。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2674, "completion_tokens": 68, "total_tokens": 2742, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"ArkTS结构完整，生态耦合自然，具备实际应用价值与学习参考性。\"\n}", "llm_formatted": "import { DialogButton, DialogButtonDivider } from './DialogComponent';\nimport { display } from '@kit.ArkUI';\nimport Logger from '../../../base/log/Logger';\n\nconst TAG = 'DownloadDialog';\nlet storage = LocalStorage.getShared();\n\n@CustomDialog\nexport struct DownloadDialog {\n  controller?: CustomDialogController;\n  cancel: Function = () => {\n  };\n  confirm: Function = () => {\n  };\n  appName: string | undefined = storage.get<string>('appName');\n  appIcon: string | undefined = storage.get<string>('appIcon');\n  downloadTips: Resource = $r('app.string.download_tips', this.appName, this.appName);\n  cancelButtonText: Resource = $r('app.string.cancel');\n  confirmButtonText: Resource = $r('app.string.agree');\n  @State contentAlign: ItemAlign = ItemAlign.Start;\n  @State dialogWidth: number = 328;\n  closeDialogBind: Function = () => this.closeDialog();\n\n  aboutToAppear(): void {\n    let px2VpScale: number = px2vp(1);\n    let screenWidth: number = display.getDefaultDisplaySync()?.width ?\n    px2vp(display.getDefaultDisplaySync()?.width) : px2vp(display.getDefaultDisplaySync()?.width * px2VpScale);\n    this.dialogWidth = screenWidth > 432 ? 400 : screenWidth - 32;\n  }\n\n  closeDialog(): void {\n    if (this.controller) {\n      Logger.i(TAG, 'DownloadDialog close.');\n      this.controller.close();\n    }\n  }\n\n  build() {\n    Column() {\n      Column() {\n        this.downloadDialogContent();\n      }\n      .padding({\n        left: $r('app.float.common_padding24'),\n        right: $r('app.float.common_padding24')\n      })\n    }\n    .borderRadius($r('sys.float.ohos_id_corner_radius_dialog'))\n    .backgroundColor($r('sys.color.ohos_id_color_dialog_bg'))\n    .alignItems(HorizontalAlign.End)\n    .margin({ left: $r('app.float.common_margin16'), right: $r('app.float.common_margin16') })\n    .width(this.dialogWidth)\n  }\n\n  @Builder\n  downloadDialogContent() {\n    Row() {\n      Image(this.appIcon)\n        .fillColor($r('sys.color.ohos_id_color_primary'))\n        .objectFit(ImageFit.Contain)\n        .width($r('app.float.common_size64'))\n        .height($r('app.float.common_size64'))\n        .interpolation(ImageInterpolation.High)\n        .draggable(false)\n        .focusable(true)\n        .margin({ top: 24 })\n        .autoResize(false)\n    }\n\n    Row() {\n      Text(this.downloadTips)\n        .lineHeight(21)\n        .fontColor($r('sys.color.ohos_id_color_text_primary'))\n        .margin({ top: $r('app.float.common_margin16') })\n        .alignSelf(ItemAlign.Center)\n    }\n\n    Row() {\n      DialogButton({\n        text: this.cancelButtonText,\n        isDisabled: false,\n        color: '#0A56F7',\n        bgColor: '#F1F3F5',\n        click: () => {\n          this.cancel()\n          this.closeDialog()\n        }\n      })\n      DialogButtonDivider()\n      DialogButton({\n        text: this.confirmButtonText,\n        isDisabled: false,\n        color: '#0A56F7',\n        bgColor: '#F1F3F5',\n        click: () => {\n          this.confirm();\n          this.closeDialog();\n        }\n      })\n    }.width('100%')\n    .padding({ bottom: $r('app.float.common_margin10'), top: $r('app.float.common_margin10') })\n    .margin({\n      top: 8,\n    })\n  }\n}", "leaked": true, "text_tokens": 805, "split": "valid"}
{"path": "app_samples~openharmony~1421/data/Kvstore/entry/src/main/ets/MainAbility/common/Dialog.ets", "project_name": "app_samples~openharmony~1421", "text": "import { DeviceDataModel } from '../model/DeviceDataModel'\n\n@CustomDialog\nexport struct DeviceDialog {\n  controller: CustomDialogController\n  private deviceList: Array<DeviceDataModel> = []\n  private selectedIndex: number = 0\n  private handleSelectDevice: (selectedIndex: number)=> void\n\n  build() {\n    Column() {\n      Text($r('app.string.check_device'))\n        .fontSize(20)\n        .width('100%')\n        .textAlign(TextAlign.Center)\n        .fontColor(Color.Black)\n        .fontWeight(FontWeight.Bold)\n      List() {\n        ForEach(this.deviceList, (item, index) => {\n          ListItem() {\n            Row() {\n              Text(item.deviceName)\n                .fontSize(20)\n                .width('90%')\n                .fontColor(Color.Black)\n              if (this.deviceList.indexOf(item) == this.selectedIndex) {\n                Image($r('app.media.checked'))\n                  .width('8%')\n                  .objectFit(ImageFit.Contain)\n              } else {\n                Image($r('app.media.uncheck'))\n                  .width('8%')\n                  .objectFit(ImageFit.Contain)\n              }\n            }\n            .height(55)\n            .onClick(() => {\n              this.handleSelectDevice(index)\n            })\n          }\n        }, item => item.deviceName)\n      }\n\n      Button() {\n        Text($r('app.string.cancel'))\n          .fontColor('#0D9FFB')\n          .width('90%')\n          .textAlign(TextAlign.Center)\n          .fontSize(20)\n      }\n      .type(ButtonType.Capsule)\n      .backgroundColor(Color.White)\n      .onClick(() => {\n        this.controller.close()\n      })\n    }\n    .backgroundColor(Color.White)\n    .border({ color: Color.White, radius: 20 })\n    .padding(10)\n  }\n}", "id": "d3562fa12cac1fdff1a09879ed4b96f08e51e2cb027d5732d232322610bef07a", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 3.0, "confidence": 0.9, "rationale": "ArkTS结构完整，生态耦合自然，具可迁移的组件构建模式", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 1658, "completion_tokens": 69, "total_tokens": 1727, "raw_response": "```json\n{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 3,\n  \"confidence\": 0.9,\n  \"rationale\": \"ArkTS结构完整，生态耦合自然，具可迁移的组件构建模式\"\n}\n```", "llm_formatted": "import { DeviceDataModel } from '../model/DeviceDataModel'\n\n@CustomDialog\nexport struct DeviceDialog {\n  controller: CustomDialogController\n  private deviceList: Array<DeviceDataModel> = []\n  private selectedIndex: number = 0\n  private handleSelectDevice: (selectedIndex: number)=> void\n\n  build() {\n    Column() {\n      Text($r('app.string.check_device'))\n        .fontSize(20)\n        .width('100%')\n        .textAlign(TextAlign.Center)\n        .fontColor(Color.Black)\n        .fontWeight(FontWeight.Bold)\n      List() {\n        ForEach(this.deviceList, (item, index) => {\n          ListItem() {\n            Row() {\n              Text(item.deviceName)\n                .fontSize(20)\n                .width('90%')\n                .fontColor(Color.Black)\n              if (this.deviceList.indexOf(item) == this.selectedIndex) {\n                Image($r('app.media.checked'))\n                  .width('8%')\n                  .objectFit(ImageFit.Contain)\n              } else {\n                Image($r('app.media.uncheck'))\n                  .width('8%')\n                  .objectFit(ImageFit.Contain)\n              }\n            }\n            .height(55)\n            .onClick(() => {\n              this.handleSelectDevice(index)\n            })\n          }\n        }, item => item.deviceName)\n      }\n\n      Button() {\n        Text($r('app.string.cancel'))\n          .fontColor('#0D9FFB')\n          .width('90%')\n          .textAlign(TextAlign.Center)\n          .fontSize(20)\n      }\n      .type(ButtonType.Capsule)\n      .backgroundColor(Color.White)\n      .onClick(() => {\n        this.controller.close()\n      })\n    }\n    .backgroundColor(Color.White)\n    .border({ color: Color.White, radius: 20 })\n    .padding(10)\n  }\n}", "leaked": true, "text_tokens": 390, "split": "valid"}
{"path": "xts_acts~openharmony~1331/arkui/ace_c_arkui_test/entry/src/ohosTest/ets/test/customdialog/CustomDialogSetBackgroundColorTest.test.ets", "project_name": "xts_acts~openharmony~1331", "text": "import { beforeEach, describe, expect, it, Level } from '@ohos/hypium';\nimport Utils from '../common/Utils';\nimport nativeFunc from 'libnativefunc.so'\n\nexport default function customDialogSetBackgroundColorTest() {\n\n  describe('CustomDialogSetBackgroundColorTest', () => {\n\n    beforeEach(async (done: Function) => {\n      await Utils.sleep(100);\n      done();\n    });\n\n    /*\n     * @tc.number     : SUB_ARKUI_CAPI_CUSTOMDIALOG_SETBACKGROUNDCOLOR_0100\n     * @tc.name       : testCustomDialogSetBackgroundColor001\n     * @tc.desc       : testing setBackgroundColor for customDialog with valid value\n     * @tc.size       : MediumTest\n     * @tc.type       : Function\n     * @tc.level      : Level1\n     */\n    it('testCustomDialogSetBackgroundColor001', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testCustomDialogSetBackgroundColor001()).assertEqual(0)\n      done()\n    })\n\n    /*\n     * @tc.number     : SUB_ARKUI_CAPI_CUSTOMDIALOG_SETBACKGROUNDCOLOR_0200\n     * @tc.name       : testCustomDialogSetBackgroundColor002\n     * @tc.desc       : testing setBackgroundColor for customDialog with valid value\n     * @tc.size       : MediumTest\n     * @tc.type       : Function\n     * @tc.level      : Level1\n     */\n    it('testCustomDialogSetBackgroundColor002', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testCustomDialogSetBackgroundColor002()).assertEqual(0)\n      done()\n    })\n\n    /*\n     * @tc.number     : SUB_ARKUI_CAPI_CUSTOMDIALOG_SETBACKGROUNDCOLOR_0300\n     * @tc.name       : testCustomDialogSetBackgroundColor003\n     * @tc.desc       : testing setBackgroundColor for customDialog with valid value\n     * @tc.size       : MediumTest\n     * @tc.type       : Function\n     * @tc.level      : Level1\n     */\n    it('testCustomDialogSetBackgroundColor003', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testCustomDialogSetBackgroundColor003()).assertEqual(0)\n      done()\n    })\n\n    /*\n     * @tc.number     : SUB_ARKUI_CAPI_CUSTOMDIALOG_SETBACKGROUNDCOLOR_0400\n     * @tc.name       : testCustomDialogSetBackgroundColor004\n     * @tc.desc       : testing setBackgroundColor for customDialog with valid value\n     * @tc.size       : MediumTest\n     * @tc.type       : Function\n     * @tc.level      : Level1\n     */\n    it('testCustomDialogSetBackgroundColor004', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testCustomDialogSetBackgroundColor004()).assertEqual(0)\n      done()\n    })\n\n  })\n}", "id": "9cc38d100cea112aff5b3d71f62f08dffd165622064fbb49695e65b7594029a5", "replica": 1, "decision": "KEEP_WITH_TAG", "labels": ["AUTO_GEN_TEMPLATE"], "arkts_score": 3.0, "quality_score": 2.0, "confidence": 0.85, "rationale": "测试用例模板化严重，缺乏实际逻辑，但结构符合ArkTS规范。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2528, "completion_tokens": 73, "total_tokens": 2601, "raw_response": "{\n  \"decision\": \"KEEP_WITH_TAG\",\n  \"labels\": [\"AUTO_GEN_TEMPLATE\"],\n  \"arkts_score\": 3,\n  \"quality_score\": 2,\n  \"confidence\": 0.85,\n  \"rationale\": \"测试用例模板化严重，缺乏实际逻辑，但结构符合ArkTS规范。\"\n}", "llm_formatted": "import { beforeEach, describe, expect, it, Level } from '@ohos/hypium';\nimport Utils from '../common/Utils';\nimport nativeFunc from 'libnativefunc.so'\n\nexport default function customDialogSetBackgroundColorTest() {\n\n  describe('CustomDialogSetBackgroundColorTest', () => {\n\n    beforeEach(async (done: Function) => {\n      await Utils.sleep(100);\n      done();\n    });\n\n    /*\n     * @tc.number     : SUB_ARKUI_CAPI_CUSTOMDIALOG_SETBACKGROUNDCOLOR_0100\n     * @tc.name       : testCustomDialogSetBackgroundColor001\n     * @tc.desc       : testing setBackgroundColor for customDialog with valid value\n     * @tc.size       : MediumTest\n     * @tc.type       : Function\n     * @tc.level      : Level1\n     */\n    it('testCustomDialogSetBackgroundColor001', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testCustomDialogSetBackgroundColor001()).assertEqual(0)\n      done()\n    })\n\n    /*\n     * @tc.number     : SUB_ARKUI_CAPI_CUSTOMDIALOG_SETBACKGROUNDCOLOR_0200\n     * @tc.name       : testCustomDialogSetBackgroundColor002\n     * @tc.desc       : testing setBackgroundColor for customDialog with valid value\n     * @tc.size       : MediumTest\n     * @tc.type       : Function\n     * @tc.level      : Level1\n     */\n    it('testCustomDialogSetBackgroundColor002', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testCustomDialogSetBackgroundColor002()).assertEqual(0)\n      done()\n    })\n\n    /*\n     * @tc.number     : SUB_ARKUI_CAPI_CUSTOMDIALOG_SETBACKGROUNDCOLOR_0300\n     * @tc.name       : testCustomDialogSetBackgroundColor003\n     * @tc.desc       : testing setBackgroundColor for customDialog with valid value\n     * @tc.size       : MediumTest\n     * @tc.type       : Function\n     * @tc.level      : Level1\n     */\n    it('testCustomDialogSetBackgroundColor003', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testCustomDialogSetBackgroundColor003()).assertEqual(0)\n      done()\n    })\n\n    /*\n     * @tc.number     : SUB_ARKUI_CAPI_CUSTOMDIALOG_SETBACKGROUNDCOLOR_0400\n     * @tc.name       : testCustomDialogSetBackgroundColor004\n     * @tc.desc       : testing setBackgroundColor for customDialog with valid value\n     * @tc.size       : MediumTest\n     * @tc.type       : Function\n     * @tc.level      : Level1\n     */\n    it('testCustomDialogSetBackgroundColor004', Level.LEVEL1, async (done: Function) => {\n      expect(nativeFunc.testCustomDialogSetBackgroundColor004()).assertEqual(0)\n      done()\n    })\n\n  })\n}", "leaked": true, "text_tokens": 659, "split": "valid"}
{"path": "HMOSWorldProject~GAOMUgenius~4858/features/quickstart/src/main/ets/view/TutorialView.ets", "project_name": "HMOSWorldProject~GAOMUgenius~4858", "text": "import { BreakpointType, BreakpointTypeEnum, preferenceUtil } from '@ohos/utils';\nimport { ArticleClass, ArticleIsFavorite } from '../model/ArticleClass';\nimport { bufferToString } from '../util/BufferUtil';\nimport { common } from '@kit.AbilityKit';\n\ntype FavoriteData = Record<string, boolean>;\nclass FavoriteChangeIml implements ArticleIsFavorite {\n  public context: TutorailView;\n  private prefName: string = 'favorite_articles';\n  private isDataLoaded: boolean = false;\n\n  constructor(context: TutorailView) {\n    this.context = context;\n  }\n\n  async initialize() {\n    if (this.isDataLoaded) return;\n\n    try {\n      await preferenceUtil.loadPreference(getContext(this.context) as common.Context, this.prefName);\n      const favoritesValue = await preferenceUtil.getPreferenceValue(\n        this.prefName,\n        'favorites',\n        '{}'\n      );\n\n      const favoritesStr = typeof favoritesValue === 'string'\n        ? favoritesValue\n        : JSON.stringify(favoritesValue);\n\n      const favoritesObj: FavoriteData = JSON.parse(favoritesStr) || {};\n      this.context.favoriteArticles = new Map(Object.entries(favoritesObj));\n      this.isDataLoaded = true;\n      console.info('收藏数据加载完成');\n    } catch (error) {\n      console.error('加载收藏数据失败:', error);\n    }\n  }\n\n  private convertMapToObject(map: Map<string, boolean>): Record<string, boolean> {\n    const obj: Record<string, boolean> = {};\n    map.forEach((value, key) => {\n      obj[key] = value;\n    });\n    return obj;\n  }\n\n  public async loadFavoriteData() {\n\n    try {\n      // 初始化偏好（如果尚未初始化）\n      await preferenceUtil.loadPreference(getContext(this.context) as common.Context, this.prefName);\n      // 读取收藏数据\n      const favoritesValue = await preferenceUtil.getPreferenceValue(\n        this.prefName,\n        'favorites',\n        '{}'\n      );\n\n      const favoritesStr = typeof favoritesValue === 'string'\n        ? favoritesValue\n        : JSON.stringify(favoritesValue);\n\n      const favoritesObj: FavoriteData = JSON.parse(favoritesStr) || {};\n      this.context.favoriteArticles = new Map(Object.entries(favoritesObj));\n    } catch (error) {\n      console.error('加载收藏数据失败:', error);\n    }\n  }\n\n  async onStarChange(articleId: string): Promise<void> {\n    // 获取当前收藏状态\n    const isFavorite = this.context.favoriteArticles.get(articleId.toString()) || false;\n\n    // 更新收藏状态\n    this.context.favoriteArticles.set(articleId.toString(), !isFavorite);\n\n    try {\n      // 将Map转换为可存储的对象\n      const favoritesObj = this.convertMapToObject(this.context.favoriteArticles);\n      const favoritesStr = JSON.stringify(favoritesObj);\n\n      // 保存到偏好数据库\n      await preferenceUtil.putPreferenceValue(\n        this.prefName,\n        'favorites',\n        favoritesStr\n      );\n    } catch (error) {\n      console.error('保存收藏数据失败:', error);\n    }\n  }\n\n}\n\n@Component\nexport struct TutorailView {\n  @State callback: FavoriteChangeIml = new FavoriteChangeIml(this)\n  @State tutorialList: Array<ArticleClass> = [];\n  @Consume('articlePathStack') articlePathStack: NavPathStack;\n  @StorageProp('currentBreakpoint') currentBreakpoint: string = BreakpointTypeEnum.MD;\n  @State isDataReady: boolean = false;\n\n  //存储收藏ID集合\n  @State favoriteArticles: Map<string, boolean> = new Map();\n  aboutToAppear(): void {\n    this.initializeData()\n  }\n\n  async initializeData() {\n    try {\n      // 先加载收藏数据\n      await this.callback.initialize();\n\n      // 再加载教程数据\n      this.getTutorailDataFromJSON();\n\n      // 数据准备就绪\n      this.isDataReady = true;\n    } catch (error) {\n      console.error('初始化数据失败:', error);\n    }\n  }\n\n  getTutorailDataFromJSON() {\n    getContext(this).resourceManager.getRawFileContent('TutorialData.json').then(value => {\n      this.tutorialList = JSON.parse(bufferToString(value)) as ArticleClass[]\n    })\n  }\n\n  build() {\n    Column() {\n      Text('入门教程')\n        .fontColor('#182431')\n        .fontSize(16)\n        .fontWeight(500)\n        .fontFamily('HarmonyHeiTi-medium')\n        .textAlign(TextAlign.Start)\n        .padding({ left: 16 })\n        .margin({ bottom: 8.5 })\n      List({ space: 12 }) {\n        ForEach(this.tutorialList, (item: ArticleClass) => {\n          ListItem() {\n            Tutorialitem({\n              tutorialitem: item,\n              favoriteArticles: this.favoriteArticles,\n              onFavoriteChange: (id: string) => this.callback.onStarChange(id)\n            })\n              .onClick(() => {\n                this.articlePathStack.pushPathByName('articleDetail', item)\n              })\n          }\n        }, (item: ArticleClass) => item.id)\n      }\n      .lanes(\n        new BreakpointType<number>({ sm: 1, md: 2, lg: 3 }).getValue(this.currentBreakpoint),\n        new BreakpointType<number>({ sm: 0, md: 12, lg: 16 }).getValue(this.currentBreakpoint)\n      )\n      .scrollBar(BarState.Off)\n      .padding({ left: 16, right: 16 })\n\n    }\n    .margin({ top: 18 })\n    .alignItems(HorizontalAlign.Start)\n  }\n}\n\n//入门教程列表视图\n\n@Component\nstruct Tutorialitem {\n  @Prop tutorialitem: ArticleClass\n  @Link favoriteArticles: Map<string, boolean>\n  onFavoriteChange: ( id: string ) => void = () => {\n  }\n  build() {\n    Stack() {\n      Row(){\n        Column(){\n          Text(this.tutorialitem.title)\n            .height(19)\n            .width('100%')\n            .fontSize(14)\n            .textAlign(TextAlign.Start)\n            .textOverflow({ overflow: TextOverflow.Ellipsis })\n            .maxLines(1)\n            .fontWeight(400)\n            .margin({ top: 4 })\n          Text(this.tutorialitem.brief)\n            .height(32)\n            .width('100%')\n            .fontSize(12)\n            .textAlign(TextAlign.Start)\n            .textOverflow({ overflow: TextOverflow.Ellipsis })\n            .maxLines(2)\n            .fontWeight(400)\n            .fontColor('rgba(0, 0, 0, 0.6)')\n            .margin({ top: 5 })\n        }\n        .height('100%')\n        .layoutWeight(1)\n        .alignItems(HorizontalAlign.Start)\n        .margin({ right: 12 })\n        Image($r(this.tutorialitem.imageSrc))\n          .height(64)\n          .width(108)\n            //保持宽高比进行缩小或者放大，使得图片两边都大于或等于显示边界。\n          .objectFit(ImageFit.Cover)\n          .borderRadius(16)\n      }\n      .width('100%')\n      .height(88)\n      .borderRadius(16)\n      .backgroundColor(Color.White)\n      .padding(12)\n      .alignItems(VerticalAlign.Top)\n\n      Image(\n        this.favoriteArticles.get(this.tutorialitem.id.toString()) ?\n        $r('app.media.ic_favorite_on') :\n        $r('app.media.ic_favorite_off')\n      )\n        .size({\n          width: 20,\n          height: 20\n        })\n        .position({\n          x: '92%',\n          y: 5,\n        })\n        .onClick(() => { // 调用收藏状态变更方法\n          this.onFavoriteChange(this.tutorialitem.id);\n        })\n    }\n    .width('100%')\n    .height(88)\n    .backgroundColor(Color.White)\n  }\n}", "id": "fc05ded14a8cd7f7a306090110958c4b14dd24fb6842b6de39e6f70bfbcea66d", "replica": 1, "decision": "KEEP_WITH_TAG", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.9, "rationale": "ArkTS生态耦合良好，结构清晰，逻辑完整，具备较高学习价值", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2969, "completion_tokens": 71, "total_tokens": 3040, "raw_response": "```json\n{\n  \"decision\": \"KEEP_WITH_TAG\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.9,\n  \"rationale\": \"ArkTS生态耦合良好，结构清晰，逻辑完整，具备较高学习价值\"\n}\n```", "llm_formatted": "import { BreakpointType, BreakpointTypeEnum, preferenceUtil } from '@ohos/utils';\nimport { ArticleClass, ArticleIsFavorite } from '../model/ArticleClass';\nimport { bufferToString } from '../util/BufferUtil';\nimport { common } from '@kit.AbilityKit';\n\ntype FavoriteData = Record<string, boolean>;\nclass FavoriteChangeIml implements ArticleIsFavorite {\n  public context: TutorailView;\n  private prefName: string = 'favorite_articles';\n  private isDataLoaded: boolean = false;\n\n  constructor(context: TutorailView) {\n    this.context = context;\n  }\n\n  async initialize() {\n    if (this.isDataLoaded) return;\n\n    try {\n      await preferenceUtil.loadPreference(getContext(this.context) as common.Context, this.prefName);\n      const favoritesValue = await preferenceUtil.getPreferenceValue(\n        this.prefName,\n        'favorites',\n        '{}'\n      );\n\n      const favoritesStr = typeof favoritesValue === 'string'\n        ? favoritesValue\n        : JSON.stringify(favoritesValue);\n\n      const favoritesObj: FavoriteData = JSON.parse(favoritesStr) || {};\n      this.context.favoriteArticles = new Map(Object.entries(favoritesObj));\n      this.isDataLoaded = true;\n      console.info('收藏数据加载完成');\n    } catch (error) {\n      console.error('加载收藏数据失败:', error);\n    }\n  }\n\n  private convertMapToObject(map: Map<string, boolean>): Record<string, boolean> {\n    const obj: Record<string, boolean> = {};\n    map.forEach((value, key) => {\n      obj[key] = value;\n    });\n    return obj;\n  }\n\n  public async loadFavoriteData() {\n\n    try {\n      // 初始化偏好（如果尚未初始化）\n      await preferenceUtil.loadPreference(getContext(this.context) as common.Context, this.prefName);\n      // 读取收藏数据\n      const favoritesValue = await preferenceUtil.getPreferenceValue(\n        this.prefName,\n        'favorites',\n        '{}'\n      );\n\n      const favoritesStr = typeof favoritesValue === 'string'\n        ? favoritesValue\n        : JSON.stringify(favoritesValue);\n\n      const favoritesObj: FavoriteData = JSON.parse(favoritesStr) || {};\n      this.context.favoriteArticles = new Map(Object.entries(favoritesObj));\n    } catch (error) {\n      console.error('加载收藏数据失败:', error);\n    }\n  }\n\n  async onStarChange(articleId: string): Promise<void> {\n    // 获取当前收藏状态\n    const isFavorite = this.context.favoriteArticles.get(articleId.toString()) || false;\n\n    // 更新收藏状态\n    this.context.favoriteArticles.set(articleId.toString(), !isFavorite);\n\n    try {\n      // 将Map转换为可存储的对象\n      const favoritesObj = this.convertMapToObject(this.context.favoriteArticles);\n      const favoritesStr = JSON.stringify(favoritesObj);\n\n      // 保存到偏好数据库\n      await preferenceUtil.putPreferenceValue(\n        this.prefName,\n        'favorites',\n        favoritesStr\n      );\n    } catch (error) {\n      console.error('保存收藏数据失败:', error);\n    }\n  }\n\n}\n\n@Component\nexport struct TutorailView {\n  @State callback: FavoriteChangeIml = new FavoriteChangeIml(this)\n  @State tutorialList: Array<ArticleClass> = [];\n  @Consume('articlePathStack') articlePathStack: NavPathStack;\n  @StorageProp('currentBreakpoint') currentBreakpoint: string = BreakpointTypeEnum.MD;\n  @State isDataReady: boolean = false;\n\n  //存储收藏ID集合\n  @State favoriteArticles: Map<string, boolean> = new Map();\n  aboutToAppear(): void {\n    this.initializeData()\n  }\n\n  async initializeData() {\n    try {\n      // 先加载收藏数据\n      await this.callback.initialize();\n\n      // 再加载教程数据\n      this.getTutorailDataFromJSON();\n\n      // 数据准备就绪\n      this.isDataReady = true;\n    } catch (error) {\n      console.error('初始化数据失败:', error);\n    }\n  }\n\n  getTutorailDataFromJSON() {\n    getContext(this).resourceManager.getRawFileContent('TutorialData.json').then(value => {\n      this.tutorialList = JSON.parse(bufferToString(value)) as ArticleClass[]\n    })\n  }\n\n  build() {\n    Column() {\n      Text('入门教程')\n        .fontColor('#182431')\n        .fontSize(16)\n        .fontWeight(500)\n        .fontFamily('HarmonyHeiTi-medium')\n        .textAlign(TextAlign.Start)\n        .padding({ left: 16 })\n        .margin({ bottom: 8.5 })\n      List({ space: 12 }) {\n        ForEach(this.tutorialList, (item: ArticleClass) => {\n          ListItem() {\n            Tutorialitem({\n              tutorialitem: item,\n              favoriteArticles: this.favoriteArticles,\n              onFavoriteChange: (id: string) => this.callback.onStarChange(id)\n            })\n              .onClick(() => {\n                this.articlePathStack.pushPathByName('articleDetail', item)\n              })\n          }\n        }, (item: ArticleClass) => item.id)\n      }\n      .lanes(\n        new BreakpointType<number>({ sm: 1, md: 2, lg: 3 }).getValue(this.currentBreakpoint),\n        new BreakpointType<number>({ sm: 0, md: 12, lg: 16 }).getValue(this.currentBreakpoint)\n      )\n      .scrollBar(BarState.Off)\n      .padding({ left: 16, right: 16 })\n\n    }\n    .margin({ top: 18 })\n    .alignItems(HorizontalAlign.Start)\n  }\n}\n\n//入门教程列表视图\n\n@Component\nstruct Tutorialitem {\n  @Prop tutorialitem: ArticleClass\n  @Link favoriteArticles: Map<string, boolean>\n  onFavoriteChange: ( id: string ) => void = () => {\n  }\n  build() {\n    Stack() {\n      Row(){\n        Column(){\n          Text(this.tutorialitem.title)\n            .height(19)\n            .width('100%')\n            .fontSize(14)\n            .textAlign(TextAlign.Start)\n            .textOverflow({ overflow: TextOverflow.Ellipsis })\n            .maxLines(1)\n            .fontWeight(400)\n            .margin({ top: 4 })\n          Text(this.tutorialitem.brief)\n            .height(32)\n            .width('100%')\n            .fontSize(12)\n            .textAlign(TextAlign.Start)\n            .textOverflow({ overflow: TextOverflow.Ellipsis })\n            .maxLines(2)\n            .fontWeight(400)\n            .fontColor('rgba(0, 0, 0, 0.6)')\n            .margin({ top: 5 })\n        }\n        .height('100%')\n        .layoutWeight(1)\n        .alignItems(HorizontalAlign.Start)\n        .margin({ right: 12 })\n        Image($r(this.tutorialitem.imageSrc))\n          .height(64)\n          .width(108)\n            //保持宽高比进行缩小或者放大，使得图片两边都大于或等于显示边界。\n          .objectFit(ImageFit.Cover)\n          .borderRadius(16)\n      }\n      .width('100%')\n      .height(88)\n      .borderRadius(16)\n      .backgroundColor(Color.White)\n      .padding(12)\n      .alignItems(VerticalAlign.Top)\n\n      Image(\n        this.favoriteArticles.get(this.tutorialitem.id.toString()) ?\n        $r('app.media.ic_favorite_on') :\n        $r('app.media.ic_favorite_off')\n      )\n        .size({\n          width: 20,\n          height: 20\n        })\n        .position({\n          x: '92%',\n          y: 5,\n        })\n        .onClick(() => { // 调用收藏状态变更方法\n          this.onFavoriteChange(this.tutorialitem.id);\n        })\n    }\n    .width('100%')\n    .height(88)\n    .backgroundColor(Color.White)\n  }\n}", "leaked": true, "text_tokens": 1701, "split": "valid"}
{"path": "xts_acts~openharmony~1331/arkui/ace_c_arkui_test/entry/src/ohosTest/ets/test/scroll/ScrollOnAppearTest.test.ets", "project_name": "xts_acts~openharmony~1331", "text": "import { beforeAll, describe, expect, it, Level } from '@ohos/hypium';\nimport Utils from '../common/Utils';\n\nexport default function scrollOnAppearTest() {\n\n  describe('ScrollOnAppearTest', () => {\n\n    let PAGE_TAG = 'ScrollOnAppearTest';\n\n    beforeAll(async (done: Function) => {\n      await Utils.pushPage(`scroll/${PAGE_TAG}`, done);\n    });\n\n    /*\n    * @tc.number     : SUB_ARKUI_CAPI_SCROLL_ONAPPEAR_0100\n    * @tc.name       : testScrollOnAppear001\n    * @tc.desc       : test OnAppear event callback\n    * @tc.size       : MediumTest\n    * @tc.type       : Function\n    * @tc.level      : Level 1\n    */\n    it('testScrollOnAppear001', Level.LEVEL1, async (done: Function) => {\n      expect(Utils.getComponentInfoByKey('OnAppear').$attrs.backgroundColor).assertEqual('#FF00FF00')\n      done()\n    })\n  })\n}\n", "id": "cce80f982cb3e07f1cf2693d01ea0834373e2fff61cdd43b5150518f4db33914", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 3.0, "confidence": 0.95, "rationale": "符合ArkTS生态，结构清晰，含测试用例与类型标注，具备学习价值。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2096, "completion_tokens": 69, "total_tokens": 2165, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 3,\n  \"confidence\": 0.95,\n  \"rationale\": \"符合ArkTS生态，结构清晰，含测试用例与类型标注，具备学习价值。\"\n}", "llm_formatted": "import { beforeAll, describe, expect, it, Level } from '@ohos/hypium';\nimport Utils from '../common/Utils';\n\nexport default function scrollOnAppearTest() {\n\n  describe('ScrollOnAppearTest', () => {\n\n    let PAGE_TAG = 'ScrollOnAppearTest';\n\n    beforeAll(async (done: Function) => {\n      await Utils.pushPage(`scroll/${PAGE_TAG}`, done);\n    });\n\n    /*\n    * @tc.number     : SUB_ARKUI_CAPI_SCROLL_ONAPPEAR_0100\n    * @tc.name       : testScrollOnAppear001\n    * @tc.desc       : test OnAppear event callback\n    * @tc.size       : MediumTest\n    * @tc.type       : Function\n    * @tc.level      : Level 1\n    */\n    it('testScrollOnAppear001', Level.LEVEL1, async (done: Function) => {\n      expect(Utils.getComponentInfoByKey('OnAppear').$attrs.backgroundColor).assertEqual('#FF00FF00')\n      done()\n    })\n  })\n}\n", "leaked": true, "text_tokens": 227, "split": "valid"}
{"path": "video-show~harmonyos_samples~458/VideoComponent/src/main/ets/components/net/Utils.ets", "project_name": "video-show~harmonyos_samples~458", "text": "import { http } from '@kit.NetworkKit';\n\nlet httpRequest = http.createHttp();\n\nexport function Live() {\n  return httpRequest.request(\n    'http://123.60.114.86:8090/goods/liveInfo?id=2',\n    {\n      header: {\n        'Content-Type': 'application/json'\n      },\n      readTimeout: 60000,\n      connectTimeout: 60000\n    });\n}", "id": "f870cb1321242649411777b0b7abf4b807460d1c85e300901ba0b035db92a343", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 3.0, "confidence": 0.9, "rationale": "符合ArkTS规范，使用了网络请求库，具备实际应用价值。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 1968, "completion_tokens": 64, "total_tokens": 2032, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 3,\n  \"confidence\": 0.9,\n  \"rationale\": \"符合ArkTS规范，使用了网络请求库，具备实际应用价值。\"\n}", "llm_formatted": "import { http } from '@kit.NetworkKit';\n\nlet httpRequest = http.createHttp();\n\nexport function Live() {\n  return httpRequest.request(\n    'http://123.60.114.86:8090/goods/liveInfo?id=2',\n    {\n      header: {\n        'Content-Type': 'application/json'\n      },\n      readTimeout: 60000,\n      connectTimeout: 60000\n    });\n}", "leaked": true, "text_tokens": 99, "split": "valid"}
{"path": "component-reuse~harmonyos_samples~398/entry/src/main/ets/pages/SameListReusePage.ets", "project_name": "component-reuse~harmonyos_samples~398", "text": "@Component\nexport struct SameListReusePage {\n  navPathStack: NavPathStack = new NavPathStack();\n\n  build() {\n    NavDestination() {\n      Column({ space: 12 }) {\n        Button($r('app.string.index_same_list_one_type'))\n          .width('100%')\n          .onClick(() => {\n            this.navPathStack.pushPathByName('OneTypeItemPage', '');\n          })\n        Button($r('app.string.index_same_list_multi_type'))\n          .width('100%')\n          .onClick(() => {\n            this.navPathStack.pushPathByName('MultiTypeItemPage', '');\n          })\n        Button($r('app.string.index_same_list_composable_type'))\n          .width('100%')\n          .onClick(() => {\n            this.navPathStack.pushPathByName('ComposableItemPage', '');\n          })\n      }\n      .justifyContent(FlexAlign.End)\n      .height('100%')\n      .width('100%')\n      .padding({\n        bottom: 16,\n        left: 16,\n        right: 16\n      })\n    }\n    .title($r('app.string.index_same_list'))\n    .onReady((context: NavDestinationContext) => {\n      this.navPathStack = context.pathStack;\n    })\n  }\n}", "id": "f647a02e71d64249aabbebaf5f4276fd4242188bddf1607b4905e3cb612ae218", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 3.0, "confidence": 0.95, "rationale": "ArkTS组件结构清晰，生态耦合自然，具备可学习的UI构建模式。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2145, "completion_tokens": 68, "total_tokens": 2213, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 3,\n  \"confidence\": 0.95,\n  \"rationale\": \"ArkTS组件结构清晰，生态耦合自然，具备可学习的UI构建模式。\"\n}", "llm_formatted": "@Component\nexport struct SameListReusePage {\n  navPathStack: NavPathStack = new NavPathStack();\n\n  build() {\n    NavDestination() {\n      Column({ space: 12 }) {\n        Button($r('app.string.index_same_list_one_type'))\n          .width('100%')\n          .onClick(() => {\n            this.navPathStack.pushPathByName('OneTypeItemPage', '');\n          })\n        Button($r('app.string.index_same_list_multi_type'))\n          .width('100%')\n          .onClick(() => {\n            this.navPathStack.pushPathByName('MultiTypeItemPage', '');\n          })\n        Button($r('app.string.index_same_list_composable_type'))\n          .width('100%')\n          .onClick(() => {\n            this.navPathStack.pushPathByName('ComposableItemPage', '');\n          })\n      }\n      .justifyContent(FlexAlign.End)\n      .height('100%')\n      .width('100%')\n      .padding({\n        bottom: 16,\n        left: 16,\n        right: 16\n      })\n    }\n    .title($r('app.string.index_same_list'))\n    .onReady((context: NavDestinationContext) => {\n      this.navPathStack = context.pathStack;\n    })\n  }\n}", "leaked": true, "text_tokens": 276, "split": "valid"}
{"path": "xts_acts~openharmony~1331/arkui/ace_c_arkui_test/entry/src/ohosTest/ets/test/customcomponent/CustomComponentHitTestBehaviorTest.test.ets", "project_name": "xts_acts~openharmony~1331", "text": "import { beforeAll, describe, expect, it, Level } from '@ohos/hypium';\nimport { ComponentInfo } from '../common/Interfaces';\nimport Utils from '../common/Utils';\n\nexport default function customComponentHitTestBehaviorTest() {\n\n  describe('CustomComponentHitTestBehaviorTest', () => {\n\n    let PAGE_TAG = 'CustomComponentHitTestBehaviorTest';\n\n    beforeAll(async (done: Function) => {\n      await Utils.pushPage(`customcomponent/${PAGE_TAG}`, done);\n    });\n\n    /*\n     * @tc.number     : SUB_ARKUI_CAPI_CUSTOMCOMPONENT_HITTESTBEHAVIOR_0100\n     * @tc.name       : testCustomComponentHitTestBehavior001\n     * @tc.desc       : test commonattrs hitTestBehavior with event callback\n     * @tc.size       : MediumTest\n     * @tc.type       : Function\n     * @tc.level      : Level 1\n     */\n    it('testCustomComponentHitTestBehavior001', Level.LEVEL1, async (done: Function) => {\n      await Utils.clickComponent('OnTouchTestStackDefault')\n      await Utils.sleep(2000)\n      expect(Utils.getComponentInfoByKey('OnTouchTestCustomComponentDefault').$attrs.backgroundColor)\n        .assertEqual('#FF0000FF')\n      expect(Utils.getComponentInfoByKey('OnTouchTestCustomComponentBrotherDefault').$attrs.backgroundColor)\n        .assertEqual('#FF00FF00')\n      expect(Utils.getComponentInfoByKey('OnTouchTestColumnDefault').$attrs.backgroundColor)\n        .assertEqual('#FFFFFFFF')\n\n      await Utils.clickComponent('OnTouchTestStackBlock')\n      await Utils.sleep(2000)\n      expect(Utils.getComponentInfoByKey('OnTouchTestCustomComponentBlock').$attrs.backgroundColor)\n        .assertEqual('#FF0000FF')\n      expect(Utils.getComponentInfoByKey('OnTouchTestCustomComponentBrotherBlock').$attrs.backgroundColor)\n        .assertEqual('#FF00FF00')\n      expect(Utils.getComponentInfoByKey('OnTouchTestColumnBlock').$attrs.backgroundColor)\n        .assertEqual('#FFFF11FF')\n\n      await Utils.clickComponent('OnTouchTestStackTransparent')\n      await Utils.sleep(2000)\n      expect(Utils.getComponentInfoByKey('OnTouchTestCustomComponentTransparent').$attrs.backgroundColor)\n        .assertEqual('#FF0000FF')\n      expect(Utils.getComponentInfoByKey('OnTouchTestCustomComponentBrotherTransparent').$attrs.backgroundColor)\n        .assertEqual('#FF000000')\n      expect(Utils.getComponentInfoByKey('OnTouchTestColumnTransparent').$attrs.backgroundColor)\n        .assertEqual('#FFFFFFFF')\n\n      await Utils.clickComponent('OnTouchTestStackNone')\n      await Utils.sleep(1000)\n      expect(Utils.getComponentInfoByKey('OnTouchTestCustomComponentNone').$attrs.backgroundColor)\n        .assertEqual('#FFFF0000')\n      expect(Utils.getComponentInfoByKey('OnTouchTestCustomComponentBrotherNone').$attrs.backgroundColor)\n        .assertEqual('#FF000000')\n      expect(Utils.getComponentInfoByKey('OnTouchTestColumnNone').$attrs.backgroundColor)\n        .assertEqual('#FFFFFFFF')\n\n      await Utils.clickComponent('OnTouchTestStackExceptBelow')\n      await Utils.sleep(1000)\n      expect(Utils.getComponentInfoByKey('OnTouchTestCustomComponentExceptBelow').$attrs.backgroundColor)\n        .assertEqual('#FF0000FF')\n      expect(Utils.getComponentInfoByKey('OnTouchTestCustomComponentBrotherExceptBelow').$attrs.backgroundColor)\n        .assertEqual('#FF00FF00')\n      expect(Utils.getComponentInfoByKey('OnTouchTestColumnExceptBelow').$attrs.backgroundColor)\n        .assertEqual('#FFFFFFFF')\n\n      await Utils.clickComponent('OnTouchTestStackExceptAbove')\n      await Utils.sleep(2000)\n      expect(Utils.getComponentInfoByKey('OnTouchTestCustomComponentExceptAbove').$attrs.backgroundColor)\n        .assertEqual('#FF0000FF')\n      expect(Utils.getComponentInfoByKey('OnTouchTestCustomComponentBrotherExceptAbove').$attrs.backgroundColor)\n        .assertEqual('#FF00FF00')\n      expect(Utils.getComponentInfoByKey('OnTouchTestColumnExceptAbove').$attrs.backgroundColor)\n        .assertEqual('#FFFFFFFF')\n      done()\n    })\n  })\n}", "id": "19dbbc0cd16138bce9cf2ec358e23c6fe894223be952675b1a531d48bf554021", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "符合ArkTS生态，结构清晰，具有测试用例的完整逻辑与可学习性。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2762, "completion_tokens": 69, "total_tokens": 2831, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"符合ArkTS生态，结构清晰，具有测试用例的完整逻辑与可学习性。\"\n}", "llm_formatted": "import { beforeAll, describe, expect, it, Level } from '@ohos/hypium';\nimport { ComponentInfo } from '../common/Interfaces';\nimport Utils from '../common/Utils';\n\nexport default function customComponentHitTestBehaviorTest() {\n\n  describe('CustomComponentHitTestBehaviorTest', () => {\n\n    let PAGE_TAG = 'CustomComponentHitTestBehaviorTest';\n\n    beforeAll(async (done: Function) => {\n      await Utils.pushPage(`customcomponent/${PAGE_TAG}`, done);\n    });\n\n    /*\n     * @tc.number     : SUB_ARKUI_CAPI_CUSTOMCOMPONENT_HITTESTBEHAVIOR_0100\n     * @tc.name       : testCustomComponentHitTestBehavior001\n     * @tc.desc       : test commonattrs hitTestBehavior with event callback\n     * @tc.size       : MediumTest\n     * @tc.type       : Function\n     * @tc.level      : Level 1\n     */\n    it('testCustomComponentHitTestBehavior001', Level.LEVEL1, async (done: Function) => {\n      await Utils.clickComponent('OnTouchTestStackDefault')\n      await Utils.sleep(2000)\n      expect(Utils.getComponentInfoByKey('OnTouchTestCustomComponentDefault').$attrs.backgroundColor)\n        .assertEqual('#FF0000FF')\n      expect(Utils.getComponentInfoByKey('OnTouchTestCustomComponentBrotherDefault').$attrs.backgroundColor)\n        .assertEqual('#FF00FF00')\n      expect(Utils.getComponentInfoByKey('OnTouchTestColumnDefault').$attrs.backgroundColor)\n        .assertEqual('#FFFFFFFF')\n\n      await Utils.clickComponent('OnTouchTestStackBlock')\n      await Utils.sleep(2000)\n      expect(Utils.getComponentInfoByKey('OnTouchTestCustomComponentBlock').$attrs.backgroundColor)\n        .assertEqual('#FF0000FF')\n      expect(Utils.getComponentInfoByKey('OnTouchTestCustomComponentBrotherBlock').$attrs.backgroundColor)\n        .assertEqual('#FF00FF00')\n      expect(Utils.getComponentInfoByKey('OnTouchTestColumnBlock').$attrs.backgroundColor)\n        .assertEqual('#FFFF11FF')\n\n      await Utils.clickComponent('OnTouchTestStackTransparent')\n      await Utils.sleep(2000)\n      expect(Utils.getComponentInfoByKey('OnTouchTestCustomComponentTransparent').$attrs.backgroundColor)\n        .assertEqual('#FF0000FF')\n      expect(Utils.getComponentInfoByKey('OnTouchTestCustomComponentBrotherTransparent').$attrs.backgroundColor)\n        .assertEqual('#FF000000')\n      expect(Utils.getComponentInfoByKey('OnTouchTestColumnTransparent').$attrs.backgroundColor)\n        .assertEqual('#FFFFFFFF')\n\n      await Utils.clickComponent('OnTouchTestStackNone')\n      await Utils.sleep(1000)\n      expect(Utils.getComponentInfoByKey('OnTouchTestCustomComponentNone').$attrs.backgroundColor)\n        .assertEqual('#FFFF0000')\n      expect(Utils.getComponentInfoByKey('OnTouchTestCustomComponentBrotherNone').$attrs.backgroundColor)\n        .assertEqual('#FF000000')\n      expect(Utils.getComponentInfoByKey('OnTouchTestColumnNone').$attrs.backgroundColor)\n        .assertEqual('#FFFFFFFF')\n\n      await Utils.clickComponent('OnTouchTestStackExceptBelow')\n      await Utils.sleep(1000)\n      expect(Utils.getComponentInfoByKey('OnTouchTestCustomComponentExceptBelow').$attrs.backgroundColor)\n        .assertEqual('#FF0000FF')\n      expect(Utils.getComponentInfoByKey('OnTouchTestCustomComponentBrotherExceptBelow').$attrs.backgroundColor)\n        .assertEqual('#FF00FF00')\n      expect(Utils.getComponentInfoByKey('OnTouchTestColumnExceptBelow').$attrs.backgroundColor)\n        .assertEqual('#FFFFFFFF')\n\n      await Utils.clickComponent('OnTouchTestStackExceptAbove')\n      await Utils.sleep(2000)\n      expect(Utils.getComponentInfoByKey('OnTouchTestCustomComponentExceptAbove').$attrs.backgroundColor)\n        .assertEqual('#FF0000FF')\n      expect(Utils.getComponentInfoByKey('OnTouchTestCustomComponentBrotherExceptAbove').$attrs.backgroundColor)\n        .assertEqual('#FF00FF00')\n      expect(Utils.getComponentInfoByKey('OnTouchTestColumnExceptAbove').$attrs.backgroundColor)\n        .assertEqual('#FFFFFFFF')\n      done()\n    })\n  })\n}", "leaked": true, "text_tokens": 893, "split": "valid"}
{"path": "DocsSample_Graphics~harmonyos_samples~1310/NdkDrawingSamples/entry/src/main/ets/pages/Index.ets", "project_name": "DocsSample_Graphics~harmonyos_samples~1310", "text": "import XComponentContext from \"../interface/XComponentContext\";\n\nconst TAG = '[Sample_DrawingAPI]';\n\n@Entry\n@Component\nstruct Index {\n  private xComponentContext: XComponentContext | undefined = undefined;\n\n  build() {\n    Column() {\n      Row() {\n        XComponent({ id: 'xcomponentId', type: 'surface', libraryname: 'entry' })\n          .onLoad((xComponentContext) => {\n            this.xComponentContext = xComponentContext as XComponentContext;\n          }).width('100%') // Multiples of 64\n      }.height('88%')\n      .backgroundColor(Color.White)\n      Row() {\n        Button('Draw Path')\n          .fontSize('16fp')\n          .fontWeight(500)\n          .margin({ bottom: 24, right: 12 })\n          .onClick(() => {\n            console.log(TAG, \"Draw Path click\");\n            if (this.xComponentContext) {\n              console.log(TAG, \"Draw Path\");\n              this.xComponentContext.drawPattern();\n            }\n          })\n          .width('33.6%')\n          .height(40)\n          .shadow(ShadowStyle.OUTER_DEFAULT_LG)\n        Button('Draw Text')\n          .fontSize('16fp')\n          .fontWeight(500)\n          .margin({ bottom: 24, left: 12 })\n          .onClick(() => {\n            console.log(TAG, \"draw text click\");\n            if (this.xComponentContext) {\n              console.log(TAG, \"draw text\");\n              this.xComponentContext.drawText();\n            }\n          })\n          .width('33.6%')\n          .height(40)\n          .shadow(ShadowStyle.OUTER_DEFAULT_LG)\n      }\n      .width('100%')\n      .justifyContent(FlexAlign.Center)\n      .shadow(ShadowStyle.OUTER_DEFAULT_SM)\n      .alignItems(VerticalAlign.Bottom)\n      .layoutWeight(1)\n    }\n  }\n}\n", "id": "5a871582852cacdddbad759fc4e0223aacc7b2f279e65cf70c7d9fffff3d2800", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 3.0, "confidence": 0.95, "rationale": "符合ArkTS生态，结构清晰，具备实际交互与渲染逻辑，具有学习价值。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2284, "completion_tokens": 68, "total_tokens": 2352, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 3,\n  \"confidence\": 0.95,\n  \"rationale\": \"符合ArkTS生态，结构清晰，具备实际交互与渲染逻辑，具有学习价值。\"\n}", "llm_formatted": "import XComponentContext from \"../interface/XComponentContext\";\n\nconst TAG = '[Sample_DrawingAPI]';\n\n@Entry\n@Component\nstruct Index {\n  private xComponentContext: XComponentContext | undefined = undefined;\n\n  build() {\n    Column() {\n      Row() {\n        XComponent({ id: 'xcomponentId', type: 'surface', libraryname: 'entry' })\n          .onLoad((xComponentContext) => {\n            this.xComponentContext = xComponentContext as XComponentContext;\n          }).width('100%') // Multiples of 64\n      }.height('88%')\n      .backgroundColor(Color.White)\n      Row() {\n        Button('Draw Path')\n          .fontSize('16fp')\n          .fontWeight(500)\n          .margin({ bottom: 24, right: 12 })\n          .onClick(() => {\n            console.log(TAG, \"Draw Path click\");\n            if (this.xComponentContext) {\n              console.log(TAG, \"Draw Path\");\n              this.xComponentContext.drawPattern();\n            }\n          })\n          .width('33.6%')\n          .height(40)\n          .shadow(ShadowStyle.OUTER_DEFAULT_LG)\n        Button('Draw Text')\n          .fontSize('16fp')\n          .fontWeight(500)\n          .margin({ bottom: 24, left: 12 })\n          .onClick(() => {\n            console.log(TAG, \"draw text click\");\n            if (this.xComponentContext) {\n              console.log(TAG, \"draw text\");\n              this.xComponentContext.drawText();\n            }\n          })\n          .width('33.6%')\n          .height(40)\n          .shadow(ShadowStyle.OUTER_DEFAULT_LG)\n      }\n      .width('100%')\n      .justifyContent(FlexAlign.Center)\n      .shadow(ShadowStyle.OUTER_DEFAULT_SM)\n      .alignItems(VerticalAlign.Bottom)\n      .layoutWeight(1)\n    }\n  }\n}\n", "leaked": true, "text_tokens": 415, "split": "valid"}
{"path": "component-collection~harmonyos_samples~391/entry/src/main/ets/pages/components/canvasAndGraphicDrawing/polygonSample/PolygonSample.ets", "project_name": "component-collection~harmonyos_samples~391", "text": "import { TitleBar } from '../../../../common/TitleBar';\nimport { LEFT_PADDING, RIGHT_PADDING } from '../../ComponentData';\nimport { PolygonControlPanel } from './ChangePanel';\n\n@Extend(Column)\nfunction cardStyle() {\n  .backgroundColor($r('app.color.white'))\n  .borderRadius(16)\n  .width('100%')\n  .padding(12)\n}\n\n@Entry\n@Component\nstruct PolygonSample {\n  @State fillOpacity: number = 50;\n  @State strokeWidth: number = 3;\n  @State stroke: Color = Color.Blue;\n  @State strokeDashArray: number = 1;\n  @State fill: Color = Color.Blue;\n  @State strokeOpacity: number = 50;\n\n  build() {\n    Column() {\n      TitleBar({ title: $r('app.string.polygon_title') })\n      Column() {\n        Column() {\n          Scroll() {\n            Column() {\n              Polygon({ width: 100, height: 100 })\n                .points([[0, 0], [50, 100], [100, 0]])\n                .fill(this.fill)\n                .fillOpacity(this.fillOpacity / 100)\n                .stroke(this.stroke)\n                .strokeWidth(this.strokeWidth)\n                .strokeDashArray([this.strokeDashArray])\n                .strokeOpacity(this.strokeOpacity / 100)\n                .margin({ bottom: 20 })\n              Polygon()\n                .width(100)\n                .height(100)\n                .points([[0, 0], [0, 100], [100, 100], [100, 0]])\n                .fill(this.fill)\n                .fillOpacity(this.fillOpacity / 100)\n                .stroke(this.stroke)\n                .strokeWidth(this.strokeWidth / 100)\n                .strokeDashArray([this.strokeDashArray])\n                .strokeOpacity(this.strokeOpacity)\n                .margin({ bottom: 20 })\n              Polygon()\n                .width(100)\n                .height(100)\n                .points([[50, 0], [0, 50], [20, 100], [80, 100], [100, 50]])\n                .fill(this.fill)\n                .fillOpacity(this.fillOpacity / 100)\n                .stroke(this.stroke)\n                .strokeWidth(this.strokeWidth)\n                .strokeDashArray([this.strokeDashArray])\n                .strokeOpacity(this.strokeOpacity / 100)\n            }\n          }.height('100%')\n          .width('100%')\n        }\n        .cardStyle()\n        .height('35%')\n        .margin({ bottom: 10 })\n\n        Column() {\n          Scroll() {\n            PolygonControlPanel({\n              fill: $fill,\n              fillOpacity: $fillOpacity,\n              stroke: $stroke,\n              strokeWidth: $strokeWidth,\n              strokeDashArray: $strokeDashArray,\n              strokeOpacity: $strokeOpacity\n            })\n          }\n        }.cardStyle()\n        .layoutWeight(1)\n        .margin({ bottom: 4 })\n      }.padding({ left: LEFT_PADDING, right: RIGHT_PADDING })\n      .layoutWeight(1)\n    }\n    .backgroundColor($r('app.color.background_light_gray'))\n    .height('100%')\n  }\n}", "id": "7286f43c9fe3c9ab9911d38115e183f7a979cef27d91605036c138bee16a3c56", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "ArkTS结构完整，生态耦合自然，具备良好可迁移性与学习价值。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2590, "completion_tokens": 68, "total_tokens": 2658, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"ArkTS结构完整，生态耦合自然，具备良好可迁移性与学习价值。\"\n}", "llm_formatted": "import { TitleBar } from '../../../../common/TitleBar';\nimport { LEFT_PADDING, RIGHT_PADDING } from '../../ComponentData';\nimport { PolygonControlPanel } from './ChangePanel';\n\n@Extend(Column)\nfunction cardStyle() {\n  .backgroundColor($r('app.color.white'))\n  .borderRadius(16)\n  .width('100%')\n  .padding(12)\n}\n\n@Entry\n@Component\nstruct PolygonSample {\n  @State fillOpacity: number = 50;\n  @State strokeWidth: number = 3;\n  @State stroke: Color = Color.Blue;\n  @State strokeDashArray: number = 1;\n  @State fill: Color = Color.Blue;\n  @State strokeOpacity: number = 50;\n\n  build() {\n    Column() {\n      TitleBar({ title: $r('app.string.polygon_title') })\n      Column() {\n        Column() {\n          Scroll() {\n            Column() {\n              Polygon({ width: 100, height: 100 })\n                .points([[0, 0], [50, 100], [100, 0]])\n                .fill(this.fill)\n                .fillOpacity(this.fillOpacity / 100)\n                .stroke(this.stroke)\n                .strokeWidth(this.strokeWidth)\n                .strokeDashArray([this.strokeDashArray])\n                .strokeOpacity(this.strokeOpacity / 100)\n                .margin({ bottom: 20 })\n              Polygon()\n                .width(100)\n                .height(100)\n                .points([[0, 0], [0, 100], [100, 100], [100, 0]])\n                .fill(this.fill)\n                .fillOpacity(this.fillOpacity / 100)\n                .stroke(this.stroke)\n                .strokeWidth(this.strokeWidth / 100)\n                .strokeDashArray([this.strokeDashArray])\n                .strokeOpacity(this.strokeOpacity)\n                .margin({ bottom: 20 })\n              Polygon()\n                .width(100)\n                .height(100)\n                .points([[50, 0], [0, 50], [20, 100], [80, 100], [100, 50]])\n                .fill(this.fill)\n                .fillOpacity(this.fillOpacity / 100)\n                .stroke(this.stroke)\n                .strokeWidth(this.strokeWidth)\n                .strokeDashArray([this.strokeDashArray])\n                .strokeOpacity(this.strokeOpacity / 100)\n            }\n          }.height('100%')\n          .width('100%')\n        }\n        .cardStyle()\n        .height('35%')\n        .margin({ bottom: 10 })\n\n        Column() {\n          Scroll() {\n            PolygonControlPanel({\n              fill: $fill,\n              fillOpacity: $fillOpacity,\n              stroke: $stroke,\n              strokeWidth: $strokeWidth,\n              strokeDashArray: $strokeDashArray,\n              strokeOpacity: $strokeOpacity\n            })\n          }\n        }.cardStyle()\n        .layoutWeight(1)\n        .margin({ bottom: 4 })\n      }.padding({ left: LEFT_PADDING, right: RIGHT_PADDING })\n      .layoutWeight(1)\n    }\n    .backgroundColor($r('app.color.background_light_gray'))\n    .height('100%')\n  }\n}", "leaked": true, "text_tokens": 721, "split": "valid"}
{"path": "harmonyos-short-video-arkts~码农的世界~2593/entry/src/main/ets/pages/PortraitAlbumPage.ets", "project_name": "harmonyos-short-video-arkts~码农的世界~2593", "text": "import router from '@ohos.router';\nimport Constants from '../common/Constants';\nimport { PortraitInfo } from '../model/PortraitInfo';\n\n/**\n * 头像相册\n */\n@Entry\n@Component\nstruct PortraitAlbumPage {\n  @State portraitInfoArr: Array<PortraitInfo>\n    = (router.getParams() as Record<string, Array<PortraitInfo>>)[`${Constants.PRARM_PORTRAIT_INFO_ARR_KEY}`];\n\n  build() {\n    // 导航组件，支持返回\n    Navigation() {\n      // 网格Grid\n      Grid() {\n\n        // 网格项GridItem\n        ForEach(this.portraitInfoArr, (portraitInfo: PortraitInfo) => {\n          GridItem() {\n            Image($rawfile(portraitInfo.portraitPath))\n              .width('100%')\n              .height('100%')\n              .onClick(() => { // 点击选择头像\n                // 返回注册登录页面\n                router.back({\n                  url: 'pages/RegisterPage',\n                  // 传回选择的头像\n                  params: { [`${Constants.PARAM_SELECTED_PORTRAIT_INFO_KEY}`]: portraitInfo }\n                })\n              })\n          }\n          .width('100%')\n          .aspectRatio(1) // 网格项的宽度跟高度的比例\n\n        })\n\n      }\n      .columnsTemplate('1fr 1fr 1fr 1fr') // 列在网格布局宽度上的占比\n      .rowsGap(2) // 行间距\n      .columnsGap(2) // 列间距\n\n    }\n    .title('头像相册')\n    .hideBackButton(false) // 显示返回按钮\n    .titleMode(NavigationTitleMode.Mini) // 小标题模式\n  }\n}", "id": "b68cd0f321a8a202e13642efa907e0dfee5533c4a3f94d5e2d5884df5458ef68", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "ArkTS代码结构清晰，生态耦合自然，具备良好的类型与逻辑表达。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2247, "completion_tokens": 67, "total_tokens": 2314, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"ArkTS代码结构清晰，生态耦合自然，具备良好的类型与逻辑表达。\"\n}", "llm_formatted": "import router from '@ohos.router';\nimport Constants from '../common/Constants';\nimport { PortraitInfo } from '../model/PortraitInfo';\n\n/**\n * 头像相册\n */\n@Entry\n@Component\nstruct PortraitAlbumPage {\n  @State portraitInfoArr: Array<PortraitInfo>\n    = (router.getParams() as Record<string, Array<PortraitInfo>>)[`${Constants.PRARM_PORTRAIT_INFO_ARR_KEY}`];\n\n  build() {\n    // 导航组件，支持返回\n    Navigation() {\n      // 网格Grid\n      Grid() {\n\n        // 网格项GridItem\n        ForEach(this.portraitInfoArr, (portraitInfo: PortraitInfo) => {\n          GridItem() {\n            Image($rawfile(portraitInfo.portraitPath))\n              .width('100%')\n              .height('100%')\n              .onClick(() => { // 点击选择头像\n                // 返回注册登录页面\n                router.back({\n                  url: 'pages/RegisterPage',\n                  // 传回选择的头像\n                  params: { [`${Constants.PARAM_SELECTED_PORTRAIT_INFO_KEY}`]: portraitInfo }\n                })\n              })\n          }\n          .width('100%')\n          .aspectRatio(1) // 网格项的宽度跟高度的比例\n\n        })\n\n      }\n      .columnsTemplate('1fr 1fr 1fr 1fr') // 列在网格布局宽度上的占比\n      .rowsGap(2) // 行间距\n      .columnsGap(2) // 列间距\n\n    }\n    .title('头像相册')\n    .hideBackButton(false) // 显示返回按钮\n    .titleMode(NavigationTitleMode.Mini) // 小标题模式\n  }\n}", "leaked": true, "text_tokens": 378, "split": "valid"}
{"path": "AgileDevHOS~LZ9~110/pandora/src/main/ets/components/state/error/ErrorView.ets", "project_name": "AgileDevHOS~LZ9~110", "text": "import { ErrorViewVm } from \"./ErrorViewVm\"\n\n/**\n * 加载失败控件\n * Created by zhouL on 2025/7/24.\n */\n@ComponentV2\nexport struct ErrorView {\n  /** 属性 */\n  @Param public vm: ErrorViewVm = new ErrorViewVm()\n\n  build() {\n    Column() {\n      Image(this.vm.imgVm.src ?? $r('app.media.pandora_ic_data_fail'))\n        .width(this.vm.imgVm.width ?? 200)\n        .height(this.vm.imgVm.height ?? 200)\n        .objectFit(this.vm.imgVm.objectFit ?? ImageFit.Auto)\n        .visibility(this.vm.imgVm.visibility ?? Visibility.Visible)\n\n      Text(this.vm.textVm.content ?? $r('app.string.pandora_load_fail'))\n        .fontSize(this.vm.textVm.fontSize ?? 14)\n        .fontColor(this.vm.textVm.fontColor ?? Color.Gray)\n        .textAlign(this.vm.textVm.textAlign ?? TextAlign.Center)\n        .visibility(this.vm.textVm.visibility ?? Visibility.Visible)\n        .margin(10)\n    }\n    .width('100%')\n    .height('100%')\n    .backgroundColor(this.vm.textVm.backgroundColor ?? Color.White)\n    .justifyContent(FlexAlign.Center) // 垂直居中\n    .alignItems(HorizontalAlign.Center) // 水平居中\n  }\n}", "id": "925367c3df342ef6c68b9a52bf124a68672e9189d738d8946718e7208df99fad", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "结构清晰，生态耦合自然，类型与命名规范，具备良好学习价值", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 1566, "completion_tokens": 66, "total_tokens": 1632, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"结构清晰，生态耦合自然，类型与命名规范，具备良好学习价值\"\n}", "llm_formatted": "import { ErrorViewVm } from \"./ErrorViewVm\"\n\n/**\n * 加载失败控件\n */\n@ComponentV2\nexport struct ErrorView {\n  /** 属性 */\n  @Param public vm: ErrorViewVm = new ErrorViewVm()\n\n  build() {\n    Column() {\n      Image(this.vm.imgVm.src ?? $r('app.media.pandora_ic_data_fail'))\n        .width(this.vm.imgVm.width ?? 200)\n        .height(this.vm.imgVm.height ?? 200)\n        .objectFit(this.vm.imgVm.objectFit ?? ImageFit.Auto)\n        .visibility(this.vm.imgVm.visibility ?? Visibility.Visible)\n\n      Text(this.vm.textVm.content ?? $r('app.string.pandora_load_fail'))\n        .fontSize(this.vm.textVm.fontSize ?? 14)\n        .fontColor(this.vm.textVm.fontColor ?? Color.Gray)\n        .textAlign(this.vm.textVm.textAlign ?? TextAlign.Center)\n        .visibility(this.vm.textVm.visibility ?? Visibility.Visible)\n        .margin(10)\n    }\n    .width('100%')\n    .height('100%')\n    .backgroundColor(this.vm.textVm.backgroundColor ?? Color.White)\n    .justifyContent(FlexAlign.Center)\n    .alignItems(HorizontalAlign.Center)\n  }\n}", "leaked": true, "text_tokens": 298, "split": "valid"}
{"path": "JumpBetweenApps~harmonyos_samples~501/dependence/AppLinkingTestDemo/entry/src/main/ets/entryability/EntryAbilityNew.ets", "project_name": "JumpBetweenApps~harmonyos_samples~501", "text": "import { AbilityConstant, UIAbility, Want } from '@kit.AbilityKit';\nimport { JSON } from '@kit.ArkTS';\nimport { window } from '@kit.ArkUI';\nimport { hilog } from '@kit.PerformanceAnalysisKit';\n\n// [Start entry_ability]\nexport default class EntryAbility extends UIAbility {\n  handleParameters(want: Want) {\n    const targetPage = want.parameters?.targetPage;\n    AppStorage.setOrCreate('targetPage', targetPage);\n  }\n\n  onCreate(want: Want, launchParam: AbilityConstant.LaunchParam): void {\n    this.handleParameters(want);\n  }\n\n  onNewWant(want: Want, launchParam: AbilityConstant.LaunchParam): void {\n    this.handleParameters(want);\n  }\n\n  // [StartExclude entry_ability]\n  onDestroy(): void {\n    hilog.info(0x0000, 'testTag', '%{public}s', 'Ability onDestroy');\n  }\n\n  onWindowStageCreate(windowStage: window.WindowStage): void {\n    // Main window is created, set main page for this ability\n    hilog.info(0x0000, 'testTag', '%{public}s', 'Ability onWindowStageCreate');\n    let sysBarProps: window.SystemBarProperties = {\n      statusBarColor: '#FFFFFF',\n      navigationBarColor: '#F1F3F5',\n      statusBarContentColor: '#FF000000',\n      navigationBarContentColor: '#FF000000'\n    };\n\n    windowStage.loadContent('pages/Index', (err) => {\n      if (err.code) {\n        hilog.error(0x0000, 'testTag', 'Failed to load the content. Cause: %{public}s', JSON.stringify(err) ?? '');\n        return;\n      }\n    });\n  }\n\n  onWindowStageDestroy(): void {\n    // Main window is destroyed, release UI related resources\n    hilog.info(0x0000, 'testTag', '%{public}s', 'Ability onWindowStageDestroy');\n  }\n\n  onForeground(): void {\n    // Ability has brought to foreground\n    hilog.info(0x0000, 'testTag', '%{public}s', 'Ability onForeground');\n  }\n\n  onBackground(): void {\n    // Ability has back to background\n    hilog.info(0x0000, 'testTag', '%{public}s', 'Ability onBackground');\n  }\n  // [EndExclude entry_ability]\n}\n// [End entry_ability]", "id": "774af7448dccfaec75f36a713588ff370e523d1b0f1ff364c17929007941a112", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "符合ArkTS生态规范，结构完整，包含典型UIAbility生命周期方法与窗口管理逻辑。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2399, "completion_tokens": 69, "total_tokens": 2468, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"符合ArkTS生态规范，结构完整，包含典型UIAbility生命周期方法与窗口管理逻辑。\"\n}", "llm_formatted": "import { AbilityConstant, UIAbility, Want } from '@kit.AbilityKit';\nimport { JSON } from '@kit.ArkTS';\nimport { window } from '@kit.ArkUI';\nimport { hilog } from '@kit.PerformanceAnalysisKit';\n\nexport default class EntryAbility extends UIAbility {\n  handleParameters(want: Want) {\n    const targetPage = want.parameters?.targetPage;\n    AppStorage.setOrCreate('targetPage', targetPage);\n  }\n\n  onCreate(want: Want, launchParam: AbilityConstant.LaunchParam): void {\n    this.handleParameters(want);\n  }\n\n  onNewWant(want: Want, launchParam: AbilityConstant.LaunchParam): void {\n    this.handleParameters(want);\n  }\n\n  onDestroy(): void {\n    hilog.info(0x0000, 'testTag', '%{public}s', 'Ability onDestroy');\n  }\n\n  onWindowStageCreate(windowStage: window.WindowStage): void {\n    hilog.info(0x0000, 'testTag', '%{public}s', 'Ability onWindowStageCreate');\n    let sysBarProps: window.SystemBarProperties = {\n      statusBarColor: '#FFFFFF',\n      navigationBarColor: '#F1F3F5',\n      statusBarContentColor: '#FF000000',\n      navigationBarContentColor: '#FF000000'\n    };\n\n    windowStage.loadContent('pages/Index', (err) => {\n      if (err.code) {\n        hilog.error(0x0000, 'testTag', 'Failed to load the content. Cause: %{public}s', JSON.stringify(err) ?? '');\n        return;\n      }\n    });\n  }\n\n  onWindowStageDestroy(): void {\n    hilog.info(0x0000, 'testTag', '%{public}s', 'Ability onWindowStageDestroy');\n  }\n\n  onForeground(): void {\n    hilog.info(0x0000, 'testTag', '%{public}s', 'Ability onForeground');\n  }\n\n  onBackground(): void {\n    hilog.info(0x0000, 'testTag', '%{public}s', 'Ability onBackground');\n  }\n}", "leaked": true, "text_tokens": 530, "split": "valid"}
{"path": "component-collection~harmonyos_samples~391/entry/src/main/ets/pages/components/listAndGrid/listSample/ListSample.ets", "project_name": "component-collection~harmonyos_samples~391", "text": "import { IntroductionTitle } from '../../../../common/IntroductionTitle';\nimport { TitleBar } from '../../../../common/TitleBar';\nimport { LEFT_PADDING, RIGHT_PADDING } from '../../ComponentData';\nimport { ArgumentsControlPanel, PropertiesControlPanel } from './ListControlPanel';\n\n@Extend(Column)\nfunction backgroundStyle() {\n  .width('100%')\n  .padding(12)\n  .borderRadius(16)\n  .backgroundColor(Color.White)\n  .justifyContent(FlexAlign.SpaceAround)\n}\n\n@Extend(Text)\nfunction listItemTextStyle() {\n  .fontSize(15)\n  .borderRadius(8)\n  .textAlign(TextAlign.Center)\n  .backgroundColor($r('app.color.background_grey'))\n}\n\n@Entry\n@Component\nstruct ListSample {\n  @State listDirection: Axis = Axis.Vertical;\n  @State space: number = 10;\n  @State strokeWidth: number = 0;\n  @State color: Resource = $r('app.color.background_blue');\n  @State barState: BarState = BarState.Auto;\n  @State initIndex: number = (AppStorage.get('listSampleInitIndex') === undefined ? 0 : AppStorage.get('listSampleInitIndex')) as number;\n  @State edgeEffect: EdgeEffect = EdgeEffect.Spring;\n  @State isChainAnimation: boolean = false;\n  @State multiSelectable: boolean = false;\n  @State lanes: number = 1;\n  @State alignListItem: ListItemAlign = ListItemAlign.Center;\n  private controller: Scroller = new Scroller();\n  private numberArray: number[] = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n  @Styles\n  listItemTextDynamicSize(){\n    .height(this.listDirection === Axis.Horizontal ? '80%' : '20%')\n    .width(this.listDirection === Axis.Vertical ? '80%' : '20%')\n  }\n\n  build() {\n    Flex({ direction: FlexDirection.Column, alignItems: ItemAlign.Center, justifyContent: FlexAlign.Start }) {\n      TitleBar({ title: $r('app.string.list_title') })\n        .flexGrow(0)\n\n      // List\n      Column() {\n        List({ scroller: this.controller, initialIndex: this.initIndex, space: this.space }) {\n          ForEach(this.numberArray, (item: number, index) => {\n            ListItem() {\n              Text(item + ``)\n                .listItemTextStyle()\n                .listItemTextDynamicSize()\n            }\n          })\n        }\n        .alignListItem(this.alignListItem)\n        .height('100%')\n        .width('100%')\n        .listDirection(this.listDirection)\n        .scrollBar(this.barState)\n        .edgeEffect(this.edgeEffect)\n        .multiSelectable(this.multiSelectable)\n        .chainAnimation(this.isChainAnimation)\n        .lanes(this.lanes)\n        .divider(\n          {\n            strokeWidth: this.strokeWidth,\n            color: this.color\n          }\n        )\n      }\n      .padding({ left: LEFT_PADDING, right: RIGHT_PADDING })\n      .backgroundStyle()\n      .height(200)\n      .width('100%')\n      .flexGrow(0)\n\n      // Status bar\n      IntroductionTitle({ introduction: $r('app.string.list_introduction_state') })\n      Column() {\n        Text(this.getUIContext().getHostContext()!.resourceManager.getStringSync($r('app.string.status_bar_desc1')) + String(this.initIndex) + this.getUIContext().getHostContext()!.resourceManager.getStringSync($r('app.string.status_bar_desc2')))\n          .textAlign(TextAlign.Center)\n          .fontColor(Color.Red)\n      }\n      .backgroundStyle()\n      .height(100)\n      .width('100%')\n      .alignItems(HorizontalAlign.Center)\n      .justifyContent(FlexAlign.Center)\n      .flexGrow(0)\n\n      // Control Panel\n      Scroll() {\n        Column() {\n          // Parameter\n          IntroductionTitle({ introduction: $r('app.string.list_introduction_arguments') })\n          Column() {\n            ArgumentsControlPanel({\n              space: $space,\n              initIndex: $initIndex\n            })\n          }\n          .backgroundStyle()\n\n          // Property\n          IntroductionTitle({ introduction: $r('app.string.list_introduction_properties') })\n          Column() {\n            PropertiesControlPanel({\n              listDirection: $listDirection,\n              strokeWidth: $strokeWidth,\n              lineColor: $color,\n              barState: $barState,\n              edgeEffect: $edgeEffect,\n              isChainAnimation: $isChainAnimation,\n              multiSelectable: $multiSelectable,\n              lanes: $lanes,\n              alignListItem: $alignListItem\n            })\n          }\n          .backgroundStyle()\n        }\n        .width('100%')\n      }\n      .flexGrow(1)\n      .flexBasis(100)\n      .margin({ bottom: 10 })\n    }\n    .padding({ left: LEFT_PADDING, right: RIGHT_PADDING })\n    .height('100%')\n    .width('100%')\n    .backgroundColor($r('app.color.background_shallow_grey'))\n  }\n}", "id": "4de9ce0badabde0f963f2d1a48e9c320fc2c953a7df77935f07f260eacc9ed30", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 5.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "ArkTS生态完整，结构清晰，具备高质量UI示例与组件复用模式。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2958, "completion_tokens": 68, "total_tokens": 3026, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 5,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"ArkTS生态完整，结构清晰，具备高质量UI示例与组件复用模式。\"\n}", "llm_formatted": "import { IntroductionTitle } from '../../../../common/IntroductionTitle';\nimport { TitleBar } from '../../../../common/TitleBar';\nimport { LEFT_PADDING, RIGHT_PADDING } from '../../ComponentData';\nimport { ArgumentsControlPanel, PropertiesControlPanel } from './ListControlPanel';\n\n@Extend(Column)\nfunction backgroundStyle() {\n  .width('100%')\n  .padding(12)\n  .borderRadius(16)\n  .backgroundColor(Color.White)\n  .justifyContent(FlexAlign.SpaceAround)\n}\n\n@Extend(Text)\nfunction listItemTextStyle() {\n  .fontSize(15)\n  .borderRadius(8)\n  .textAlign(TextAlign.Center)\n  .backgroundColor($r('app.color.background_grey'))\n}\n\n@Entry\n@Component\nstruct ListSample {\n  @State listDirection: Axis = Axis.Vertical;\n  @State space: number = 10;\n  @State strokeWidth: number = 0;\n  @State color: Resource = $r('app.color.background_blue');\n  @State barState: BarState = BarState.Auto;\n  @State initIndex: number = (AppStorage.get('listSampleInitIndex') === undefined ? 0 : AppStorage.get('listSampleInitIndex')) as number;\n  @State edgeEffect: EdgeEffect = EdgeEffect.Spring;\n  @State isChainAnimation: boolean = false;\n  @State multiSelectable: boolean = false;\n  @State lanes: number = 1;\n  @State alignListItem: ListItemAlign = ListItemAlign.Center;\n  private controller: Scroller = new Scroller();\n  private numberArray: number[] = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n  @Styles\n  listItemTextDynamicSize(){\n    .height(this.listDirection === Axis.Horizontal ? '80%' : '20%')\n    .width(this.listDirection === Axis.Vertical ? '80%' : '20%')\n  }\n\n  build() {\n    Flex({ direction: FlexDirection.Column, alignItems: ItemAlign.Center, justifyContent: FlexAlign.Start }) {\n      TitleBar({ title: $r('app.string.list_title') })\n        .flexGrow(0)\n\n      // List\n      Column() {\n        List({ scroller: this.controller, initialIndex: this.initIndex, space: this.space }) {\n          ForEach(this.numberArray, (item: number, index) => {\n            ListItem() {\n              Text(item + ``)\n                .listItemTextStyle()\n                .listItemTextDynamicSize()\n            }\n          })\n        }\n        .alignListItem(this.alignListItem)\n        .height('100%')\n        .width('100%')\n        .listDirection(this.listDirection)\n        .scrollBar(this.barState)\n        .edgeEffect(this.edgeEffect)\n        .multiSelectable(this.multiSelectable)\n        .chainAnimation(this.isChainAnimation)\n        .lanes(this.lanes)\n        .divider(\n          {\n            strokeWidth: this.strokeWidth,\n            color: this.color\n          }\n        )\n      }\n      .padding({ left: LEFT_PADDING, right: RIGHT_PADDING })\n      .backgroundStyle()\n      .height(200)\n      .width('100%')\n      .flexGrow(0)\n\n      // Status bar\n      IntroductionTitle({ introduction: $r('app.string.list_introduction_state') })\n      Column() {\n        Text(this.getUIContext().getHostContext()!.resourceManager.getStringSync($r('app.string.status_bar_desc1')) + String(this.initIndex) + this.getUIContext().getHostContext()!.resourceManager.getStringSync($r('app.string.status_bar_desc2')))\n          .textAlign(TextAlign.Center)\n          .fontColor(Color.Red)\n      }\n      .backgroundStyle()\n      .height(100)\n      .width('100%')\n      .alignItems(HorizontalAlign.Center)\n      .justifyContent(FlexAlign.Center)\n      .flexGrow(0)\n\n      // Control Panel\n      Scroll() {\n        Column() {\n          // Parameter\n          IntroductionTitle({ introduction: $r('app.string.list_introduction_arguments') })\n          Column() {\n            ArgumentsControlPanel({\n              space: $space,\n              initIndex: $initIndex\n            })\n          }\n          .backgroundStyle()\n\n          // Property\n          IntroductionTitle({ introduction: $r('app.string.list_introduction_properties') })\n          Column() {\n            PropertiesControlPanel({\n              listDirection: $listDirection,\n              strokeWidth: $strokeWidth,\n              lineColor: $color,\n              barState: $barState,\n              edgeEffect: $edgeEffect,\n              isChainAnimation: $isChainAnimation,\n              multiSelectable: $multiSelectable,\n              lanes: $lanes,\n              alignListItem: $alignListItem\n            })\n          }\n          .backgroundStyle()\n        }\n        .width('100%')\n      }\n      .flexGrow(1)\n      .flexBasis(100)\n      .margin({ bottom: 10 })\n    }\n    .padding({ left: LEFT_PADDING, right: RIGHT_PADDING })\n    .height('100%')\n    .width('100%')\n    .backgroundColor($r('app.color.background_shallow_grey'))\n  }\n}", "leaked": true, "text_tokens": 1089, "split": "valid"}
{"path": "app_samples~openharmony~1421/data/Kvstore/entry/src/main/ets/MainAbility/model/RemoteDeviceModel.ets", "project_name": "app_samples~openharmony~1421", "text": "import deviceManager from '@ohos.distributedHardware.deviceManager'\n\nvar SUBSCRIBE_ID = 100\n\nexport class RemoteDeviceModel {\n  deviceList = []\n  discoverList = []\n  callback\n  authCallback\n  deviceManager\n\n  constructor() {\n  }\n\n  registerDeviceListCallback(callback) {\n    if (typeof (this.deviceManager) != 'undefined') {\n      this.registerDeviceListCallbackImplement(callback)\n      return\n    }\n    console.log('[RemoteDeviceModel] deviceManager.createDeviceManager begin')\n    let self = this\n    deviceManager.createDeviceManager(\"ohos.samples.etskvstore\", (error, value) => {\n      if (error) {\n        console.error('[RemoteDeviceModel] createDeviceManager failed.')\n        return;\n      }\n      self.deviceManager = value\n      self.registerDeviceListCallbackImplement(callback)\n      console.log('[RemoteDeviceModel] createDeviceManager callback returned, error=' + error + ' value=' + value)\n    });\n    console.log('[RemoteDeviceModel] deviceManager.createDeviceManager end')\n  }\n\n  deviceStateChangeActionOnline(device) {\n    this.deviceList[this.deviceList.length] = device\n    console.info('[RemoteDeviceModel] online, device list=' + JSON.stringify(this.deviceList))\n    this.callback()\n    if (this.authCallback != null) {\n      this.authCallback()\n      this.authCallback = null\n    }\n  }\n\n  deviceStateChangeActionReady(device) {\n    if (this.deviceList.length <= 0) {\n      this.callback()\n      return\n    }\n    let list = new Array()\n    for (let i = 0; i < this.deviceList.length; i++) {\n      if (this.deviceList[i].deviceId != device.deviceId) {\n        list[i] = device\n      }\n    }\n    this.deviceList = list\n    console.info('[RemoteDeviceModel] ready, device list=' + JSON.stringify(device))\n    this.callback()\n  }\n\n  deviceStateChangeActionOffline(device) {\n    if (this.deviceList.length <= 0) {\n      this.callback()\n      return\n    }\n    for (let j = 0; j < this.deviceList.length; j++) {\n      if (this.deviceList[j ].deviceId == device.deviceId) {\n        this.deviceList[j] = device\n        break\n      }\n    }\n    console.info('[RemoteDeviceModel] offline, device list=' + JSON.stringify(this.deviceList))\n    this.callback()\n  }\n\n  registerDeviceListCallbackImplement(callback) {\n    console.info('[RemoteDeviceModel] registerDeviceListCallback')\n    this.callback = callback\n    if (this.deviceManager === undefined) {\n      console.error('[RemoteDeviceModel] deviceManager has not initialized')\n      this.callback()\n      return\n    }\n    console.info('[RemoteDeviceModel] getTrustedDeviceListSync begin')\n    let list = this.deviceManager.getTrustedDeviceListSync()\n    console.info('[RemoteDeviceModel] getTrustedDeviceListSync end, deviceList=' + JSON.stringify(list))\n    if (typeof (list) != 'undefined' && typeof (list.length) != 'undefined') {\n      this.deviceList = list\n    }\n    this.callback()\n    console.info('[RemoteDeviceModel] callback finished');\n    let self = this;\n    this.deviceManager.on('deviceStateChange', (data) => {\n      if (data == null) {\n        return\n      }\n      console.info('[RemoteDeviceModel] deviceStateChange data=' + JSON.stringify(data))\n      switch (data.action) {\n        case deviceManager.DeviceStateChangeAction.ONLINE:\n          self.deviceStateChangeActionOnline(data.device)\n          break;\n        case deviceManager.DeviceStateChangeAction.READY:\n          self.deviceStateChangeActionReady(data.device)\n          break;\n        case deviceManager.DeviceStateChangeAction.OFFLINE:\n        case deviceManager.DeviceStateChangeAction.CHANGE:\n          self.deviceStateChangeActionOffline(data.device)\n          break\n        default:\n          break\n      }\n    });\n    this.deviceManager.on('deviceFound', (data) => {\n      if (data == null) {\n        return\n      }\n      console.info('[RemoteDeviceModel] deviceFound data=' + JSON.stringify(data))\n      self.deviceFound(data)\n    });\n    this.deviceManager.on('discoverFail', (data) => {\n      console.info('[RemoteDeviceModel] discoverFail data=' + JSON.stringify(data))\n    });\n    this.deviceManager.on('serviceDie', () => {\n      console.error('[RemoteDeviceModel] serviceDie')\n    });\n    this.startDeviceDiscovery()\n  }\n\n  deviceFound(data) {\n    for (var i = 0;i < this.discoverList.length; i++) {\n      if (this.discoverList[i].deviceId == data.device.deviceId) {\n        console.info('[RemoteDeviceModel] device founded ignored')\n        return\n      }\n    }\n    this.discoverList[this.discoverList.length] = data.device\n    console.info('[RemoteDeviceModel] deviceFound self.discoverList=' + this.discoverList)\n    this.callback();\n  }\n\n  startDeviceDiscovery() {\n    SUBSCRIBE_ID = Math.floor(65536 * Math.random())\n    var info = {\n      subscribeId: SUBSCRIBE_ID,\n      mode: 0xAA,\n      medium: 2,\n      freq: 2,\n      isSameAccount: false,\n      isWakeRemote: true,\n      capability: 0\n    };\n    console.info('[RemoteDeviceModel] startDeviceDiscovery ' + SUBSCRIBE_ID)\n    this.deviceManager.startDeviceDiscovery(info)\n  }\n\n  unregisterDeviceListCallback() {\n    console.info('[RemoteDeviceModel] stopDeviceDiscovery ' + SUBSCRIBE_ID)\n    this.deviceManager.stopDeviceDiscovery(SUBSCRIBE_ID);\n    this.deviceManager.off('deviceStateChange')\n    this.deviceManager.off('deviceFound')\n    this.deviceManager.off('discoverFail')\n    this.deviceManager.off('serviceDie')\n    this.deviceList = []\n    this.discoverList = []\n  }\n\n  authenticateDevice(device, callBack) {\n    console.info('[RemoteDeviceModel] authenticateDevice ' + JSON.stringify(device));\n    for (let i = 0; i < this.discoverList.length; i++) {\n      if (this.discoverList[i].deviceId != device.deviceId) {\n        continue\n      }\n      let extraInfo = {\n        'targetPkgName': 'ohos.samples.etskvstore',\n        'appName': 'Distributed kvstore',\n        'appDescription': 'Distributed kvstore',\n        'business': '0'\n      }\n      let authParam = {\n        'authType': 1,\n        'appIcon': '',\n        'appThumbnail': '',\n        'extraInfo': extraInfo\n      }\n      this.deviceManager.authenticateDevice(device, authParam, (err, data) => {\n        if (err) {\n          console.info('[RemoteDeviceModel] authenticateDevice error:' + JSON.stringify(err))\n          this.authCallback = null\n          return\n        }\n        console.info('[RemoteDeviceModel] authenticateDevice succeed:' + JSON.stringify(data))\n        this.authCallback = callBack\n      })\n    }\n  }\n}", "id": "b2e9f335455fe9b79e8407be81f9298e4b5501c90f0b48e7cac7697bc685ccc0", "replica": 1, "decision": "KEEP_WITH_TAG", "labels": [], "arkts_score": 4.0, "quality_score": 3.0, "confidence": 0.9, "rationale": "ArkTS生态耦合良好，结构完整，具一定学习价值", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2742, "completion_tokens": 68, "total_tokens": 2810, "raw_response": "```json\n{\n  \"decision\": \"KEEP_WITH_TAG\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 3,\n  \"confidence\": 0.9,\n  \"rationale\": \"ArkTS生态耦合良好，结构完整，具一定学习价值\"\n}\n```", "llm_formatted": "import deviceManager from '@ohos.distributedHardware.deviceManager'\n\nvar SUBSCRIBE_ID = 100\n\nexport class RemoteDeviceModel {\n  deviceList = []\n  discoverList = []\n  callback\n  authCallback\n  deviceManager\n\n  constructor() {\n  }\n\n  registerDeviceListCallback(callback) {\n    if (typeof (this.deviceManager) != 'undefined') {\n      this.registerDeviceListCallbackImplement(callback)\n      return\n    }\n    console.log('[RemoteDeviceModel] deviceManager.createDeviceManager begin')\n    let self = this\n    deviceManager.createDeviceManager(\"ohos.samples.etskvstore\", (error, value) => {\n      if (error) {\n        console.error('[RemoteDeviceModel] createDeviceManager failed.')\n        return;\n      }\n      self.deviceManager = value\n      self.registerDeviceListCallbackImplement(callback)\n      console.log('[RemoteDeviceModel] createDeviceManager callback returned, error=' + error + ' value=' + value)\n    });\n    console.log('[RemoteDeviceModel] deviceManager.createDeviceManager end')\n  }\n\n  deviceStateChangeActionOnline(device) {\n    this.deviceList[this.deviceList.length] = device\n    console.info('[RemoteDeviceModel] online, device list=' + JSON.stringify(this.deviceList))\n    this.callback()\n    if (this.authCallback != null) {\n      this.authCallback()\n      this.authCallback = null\n    }\n  }\n\n  deviceStateChangeActionReady(device) {\n    if (this.deviceList.length <= 0) {\n      this.callback()\n      return\n    }\n    let list = new Array()\n    for (let i = 0; i < this.deviceList.length; i++) {\n      if (this.deviceList[i].deviceId != device.deviceId) {\n        list[i] = device\n      }\n    }\n    this.deviceList = list\n    console.info('[RemoteDeviceModel] ready, device list=' + JSON.stringify(device))\n    this.callback()\n  }\n\n  deviceStateChangeActionOffline(device) {\n    if (this.deviceList.length <= 0) {\n      this.callback()\n      return\n    }\n    for (let j = 0; j < this.deviceList.length; j++) {\n      if (this.deviceList[j ].deviceId == device.deviceId) {\n        this.deviceList[j] = device\n        break\n      }\n    }\n    console.info('[RemoteDeviceModel] offline, device list=' + JSON.stringify(this.deviceList))\n    this.callback()\n  }\n\n  registerDeviceListCallbackImplement(callback) {\n    console.info('[RemoteDeviceModel] registerDeviceListCallback')\n    this.callback = callback\n    if (this.deviceManager === undefined) {\n      console.error('[RemoteDeviceModel] deviceManager has not initialized')\n      this.callback()\n      return\n    }\n    console.info('[RemoteDeviceModel] getTrustedDeviceListSync begin')\n    let list = this.deviceManager.getTrustedDeviceListSync()\n    console.info('[RemoteDeviceModel] getTrustedDeviceListSync end, deviceList=' + JSON.stringify(list))\n    if (typeof (list) != 'undefined' && typeof (list.length) != 'undefined') {\n      this.deviceList = list\n    }\n    this.callback()\n    console.info('[RemoteDeviceModel] callback finished');\n    let self = this;\n    this.deviceManager.on('deviceStateChange', (data) => {\n      if (data == null) {\n        return\n      }\n      console.info('[RemoteDeviceModel] deviceStateChange data=' + JSON.stringify(data))\n      switch (data.action) {\n        case deviceManager.DeviceStateChangeAction.ONLINE:\n          self.deviceStateChangeActionOnline(data.device)\n          break;\n        case deviceManager.DeviceStateChangeAction.READY:\n          self.deviceStateChangeActionReady(data.device)\n          break;\n        case deviceManager.DeviceStateChangeAction.OFFLINE:\n        case deviceManager.DeviceStateChangeAction.CHANGE:\n          self.deviceStateChangeActionOffline(data.device)\n          break\n        default:\n          break\n      }\n    });\n    this.deviceManager.on('deviceFound', (data) => {\n      if (data == null) {\n        return\n      }\n      console.info('[RemoteDeviceModel] deviceFound data=' + JSON.stringify(data))\n      self.deviceFound(data)\n    });\n    this.deviceManager.on('discoverFail', (data) => {\n      console.info('[RemoteDeviceModel] discoverFail data=' + JSON.stringify(data))\n    });\n    this.deviceManager.on('serviceDie', () => {\n      console.error('[RemoteDeviceModel] serviceDie')\n    });\n    this.startDeviceDiscovery()\n  }\n\n  deviceFound(data) {\n    for (var i = 0;i < this.discoverList.length; i++) {\n      if (this.discoverList[i].deviceId == data.device.deviceId) {\n        console.info('[RemoteDeviceModel] device founded ignored')\n        return\n      }\n    }\n    this.discoverList[this.discoverList.length] = data.device\n    console.info('[RemoteDeviceModel] deviceFound self.discoverList=' + this.discoverList)\n    this.callback();\n  }\n\n  startDeviceDiscovery() {\n    SUBSCRIBE_ID = Math.floor(65536 * Math.random())\n    var info = {\n      subscribeId: SUBSCRIBE_ID,\n      mode: 0xAA,\n      medium: 2,\n      freq: 2,\n      isSameAccount: false,\n      isWakeRemote: true,\n      capability: 0\n    };\n    console.info('[RemoteDeviceModel] startDeviceDiscovery ' + SUBSCRIBE_ID)\n    this.deviceManager.startDeviceDiscovery(info)\n  }\n\n  unregisterDeviceListCallback() {\n    console.info('[RemoteDeviceModel] stopDeviceDiscovery ' + SUBSCRIBE_ID)\n    this.deviceManager.stopDeviceDiscovery(SUBSCRIBE_ID);\n    this.deviceManager.off('deviceStateChange')\n    this.deviceManager.off('deviceFound')\n    this.deviceManager.off('discoverFail')\n    this.deviceManager.off('serviceDie')\n    this.deviceList = []\n    this.discoverList = []\n  }\n\n  authenticateDevice(device, callBack) {\n    console.info('[RemoteDeviceModel] authenticateDevice ' + JSON.stringify(device));\n    for (let i = 0; i < this.discoverList.length; i++) {\n      if (this.discoverList[i].deviceId != device.deviceId) {\n        continue\n      }\n      let extraInfo = {\n        'targetPkgName': 'ohos.samples.etskvstore',\n        'appName': 'Distributed kvstore',\n        'appDescription': 'Distributed kvstore',\n        'business': '0'\n      }\n      let authParam = {\n        'authType': 1,\n        'appIcon': '',\n        'appThumbnail': '',\n        'extraInfo': extraInfo\n      }\n      this.deviceManager.authenticateDevice(device, authParam, (err, data) => {\n        if (err) {\n          console.info('[RemoteDeviceModel] authenticateDevice error:' + JSON.stringify(err))\n          this.authCallback = null\n          return\n        }\n        console.info('[RemoteDeviceModel] authenticateDevice succeed:' + JSON.stringify(data))\n        this.authCallback = callBack\n      })\n    }\n  }\n}", "leaked": true, "text_tokens": 1474, "split": "valid"}
{"path": "sub-window-floating-window~harmonyos_samples~465/entry/src/main/ets/pages/ResizeWindowPage.ets", "project_name": "sub-window-floating-window~harmonyos_samples~465", "text": "import { display, inspector, window } from '@kit.ArkUI';\nimport CommonConstants from '../constants/CommonConstants';\nimport Logger from '../utils/Logger';\nimport { WindowPosition } from '../viewmodel/WindowPosition';\n\n@Entry\n@Component\nstruct ResizeWindowPage {\n  @State windowStage: window.WindowStage = AppStorage.get('windowStage') as window.WindowStage;\n  @State subWindow: window.Window = window.findWindow('ResizeWindowPage');\n  @State flag: boolean = true;\n  @State windowPosition: WindowPosition = {\n    x: CommonConstants.DEFAULT_WINDOW_X,\n    y: CommonConstants.DEFAULT_WINDOW_Y\n  };\n  @StorageLink('screenWidth') screenWidth: number = 0;\n  @StorageLink('screenHeight') screenHeight: number = 0;\n  listener: inspector.ComponentObserver = this.getUIContext().getUIInspector().createComponentObserver('COMPONENT_ID');\n  private panOption: PanGestureOptions = new PanGestureOptions({ direction: PanDirection.All });\n  private callback: () => void = () => {\n    if (!this.flag) {\n      this.subWindow.resize(this.getUIContext().vp2px(this.screenWidth * CommonConstants.WINDOW_COEFFICIENT),\n        this.getUIContext().vp2px(this.screenHeight * CommonConstants.WINDOW_COEFFICIENT));\n    } else {\n      this.subWindow.resize(this.getUIContext().vp2px(CommonConstants.DEFAULT_WINDOW_SIZE),\n        this.getUIContext().vp2px(CommonConstants.DEFAULT_WINDOW_SIZE));\n    }\n  };\n\n  onPageShow(): void {\n    setTimeout(() => {\n      try {\n        let subWindowID: number = window.findWindow('ResizeWindowPage').getWindowProperties().id;\n        let mainWindowID: number = this.windowStage.getMainWindowSync().getWindowProperties().id;\n        window.shiftAppWindowFocus(subWindowID, mainWindowID);\n      } catch (error) {\n        Logger.error('shiftAppWindowFocus failed' + JSON.stringify(error));\n      }\n    }, CommonConstants.TIME_DELAY)\n    this.listener.on('layout', this.callback);\n  }\n\n  onPageHide(): void {\n    this.listener.off('layout', this.callback);\n  }\n\n  /**\n   * Move the floating window to the specified position.\n   */\n  moveWindow() {\n    this.subWindow.moveWindowTo(this.windowPosition.x, this.windowPosition.y);\n  }\n\n  build() {\n    Row() {\n      Column() {\n        Image(this.flag ? $r('app.media.ic_public_video') : $r('app.media.ic_public_picture'))\n          .height(this.flag ? $r('app.float.common_image') : CommonConstants.FULL_PERCENT)\n          .id('COMPONENT_ID')\n          .borderRadius($r('app.float.common_radius'))\n          .onClick(() => {\n            this.flag = !this.flag;\n          })\n      }\n    }\n    .backgroundColor(Color.Transparent)\n    .gesture(\n      PanGesture(this.panOption)\n        .onActionStart((event: GestureEvent) => {})\n        .onActionUpdate((event: GestureEvent) => {\n          this.windowPosition.x += event.offsetX;\n          this.windowPosition.y += event.offsetY;\n          let top = this.getUIContext().vp2px(56);\n          let bottom = display.getDefaultDisplaySync().height - this.subWindow.getWindowProperties().windowRect.height\n            - top;\n          if (this.windowPosition.y < top) {\n            this.windowPosition.y = top;\n          } else if (this.windowPosition.y > bottom) {\n            this.windowPosition.y = bottom;\n          }\n          this.subWindow.moveWindowTo(this.windowPosition.x, this.windowPosition.y);\n        })\n        .onActionEnd((event: GestureEvent) => {\n          if (this.windowPosition.x >= display.getDefaultDisplaySync().width / 2) {\n            this.windowPosition.x = display.getDefaultDisplaySync().width -\n              this.subWindow.getWindowProperties().windowRect.width;\n          } else if (event.offsetX < display.getDefaultDisplaySync().width / 2) {\n            this.windowPosition.x = 0;\n          }\n          let top = this.getUIContext().vp2px(56);\n          let bottom = display.getDefaultDisplaySync().height - this.subWindow.getWindowProperties().windowRect.height\n            - top;\n          if (this.windowPosition.y < top) {\n            this.windowPosition.y = top;\n          } else if (this.windowPosition.y > bottom) {\n            this.windowPosition.y = bottom;\n          }\n          this.subWindow.moveWindowTo(this.windowPosition.x, this.windowPosition.y);\n        })\n    )\n  }\n}", "id": "eccd81201fa35b3a2619931eb4decc0d16cfe61b74bd3c96726946eca53659ec", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "ArkTS代码结构完整，生态耦合自然，具备良好的类型与逻辑设计。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2805, "completion_tokens": 67, "total_tokens": 2872, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"ArkTS代码结构完整，生态耦合自然，具备良好的类型与逻辑设计。\"\n}", "llm_formatted": "import { display, inspector, window } from '@kit.ArkUI';\nimport CommonConstants from '../constants/CommonConstants';\nimport Logger from '../utils/Logger';\nimport { WindowPosition } from '../viewmodel/WindowPosition';\n\n@Entry\n@Component\nstruct ResizeWindowPage {\n  @State windowStage: window.WindowStage = AppStorage.get('windowStage') as window.WindowStage;\n  @State subWindow: window.Window = window.findWindow('ResizeWindowPage');\n  @State flag: boolean = true;\n  @State windowPosition: WindowPosition = {\n    x: CommonConstants.DEFAULT_WINDOW_X,\n    y: CommonConstants.DEFAULT_WINDOW_Y\n  };\n  @StorageLink('screenWidth') screenWidth: number = 0;\n  @StorageLink('screenHeight') screenHeight: number = 0;\n  listener: inspector.ComponentObserver = this.getUIContext().getUIInspector().createComponentObserver('COMPONENT_ID');\n  private panOption: PanGestureOptions = new PanGestureOptions({ direction: PanDirection.All });\n  private callback: () => void = () => {\n    if (!this.flag) {\n      this.subWindow.resize(this.getUIContext().vp2px(this.screenWidth * CommonConstants.WINDOW_COEFFICIENT),\n        this.getUIContext().vp2px(this.screenHeight * CommonConstants.WINDOW_COEFFICIENT));\n    } else {\n      this.subWindow.resize(this.getUIContext().vp2px(CommonConstants.DEFAULT_WINDOW_SIZE),\n        this.getUIContext().vp2px(CommonConstants.DEFAULT_WINDOW_SIZE));\n    }\n  };\n\n  onPageShow(): void {\n    setTimeout(() => {\n      try {\n        let subWindowID: number = window.findWindow('ResizeWindowPage').getWindowProperties().id;\n        let mainWindowID: number = this.windowStage.getMainWindowSync().getWindowProperties().id;\n        window.shiftAppWindowFocus(subWindowID, mainWindowID);\n      } catch (error) {\n        Logger.error('shiftAppWindowFocus failed' + JSON.stringify(error));\n      }\n    }, CommonConstants.TIME_DELAY)\n    this.listener.on('layout', this.callback);\n  }\n\n  onPageHide(): void {\n    this.listener.off('layout', this.callback);\n  }\n\n  /**\n   * Move the floating window to the specified position.\n   */\n  moveWindow() {\n    this.subWindow.moveWindowTo(this.windowPosition.x, this.windowPosition.y);\n  }\n\n  build() {\n    Row() {\n      Column() {\n        Image(this.flag ? $r('app.media.ic_public_video') : $r('app.media.ic_public_picture'))\n          .height(this.flag ? $r('app.float.common_image') : CommonConstants.FULL_PERCENT)\n          .id('COMPONENT_ID')\n          .borderRadius($r('app.float.common_radius'))\n          .onClick(() => {\n            this.flag = !this.flag;\n          })\n      }\n    }\n    .backgroundColor(Color.Transparent)\n    .gesture(\n      PanGesture(this.panOption)\n        .onActionStart((event: GestureEvent) => {})\n        .onActionUpdate((event: GestureEvent) => {\n          this.windowPosition.x += event.offsetX;\n          this.windowPosition.y += event.offsetY;\n          let top = this.getUIContext().vp2px(56);\n          let bottom = display.getDefaultDisplaySync().height - this.subWindow.getWindowProperties().windowRect.height\n            - top;\n          if (this.windowPosition.y < top) {\n            this.windowPosition.y = top;\n          } else if (this.windowPosition.y > bottom) {\n            this.windowPosition.y = bottom;\n          }\n          this.subWindow.moveWindowTo(this.windowPosition.x, this.windowPosition.y);\n        })\n        .onActionEnd((event: GestureEvent) => {\n          if (this.windowPosition.x >= display.getDefaultDisplaySync().width / 2) {\n            this.windowPosition.x = display.getDefaultDisplaySync().width -\n              this.subWindow.getWindowProperties().windowRect.width;\n          } else if (event.offsetX < display.getDefaultDisplaySync().width / 2) {\n            this.windowPosition.x = 0;\n          }\n          let top = this.getUIContext().vp2px(56);\n          let bottom = display.getDefaultDisplaySync().height - this.subWindow.getWindowProperties().windowRect.height\n            - top;\n          if (this.windowPosition.y < top) {\n            this.windowPosition.y = top;\n          } else if (this.windowPosition.y > bottom) {\n            this.windowPosition.y = bottom;\n          }\n          this.subWindow.moveWindowTo(this.windowPosition.x, this.windowPosition.y);\n        })\n    )\n  }\n}", "leaked": true, "text_tokens": 936, "split": "valid"}
{"path": "component_collection_master~张兴华~1071/entry/src/main/ets/util/ShowToast.ets", "project_name": "component_collection_master~张兴华~1071", "text": "import { promptAction } from '@kit.ArkUI';\n\nclass ShowToast {\n  private longToastTime: number = 3000;\n  private shortToastTime: number = 1000;\n\n  showToast(message: ResourceStr, duration: number) {\n    promptAction.showToast({ message: message, duration: duration });\n  }\n\n  shortToast(message: ResourceStr) {\n    this.showToast(message, this.shortToastTime);\n  }\n\n  longToast(message: ResourceStr) {\n    this.showToast(message, this.longToastTime);\n  }\n}\n\nexport default new ShowToast();", "id": "ea75d278f3fae95154e8ba5aa765158ba505e47f80534a28b10ece316c0116ff", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 3.0, "confidence": 0.95, "rationale": "结构清晰，符合ArkTS规范，具备实用工具类特征，生态耦合自然。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 1989, "completion_tokens": 68, "total_tokens": 2057, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 3,\n  \"confidence\": 0.95,\n  \"rationale\": \"结构清晰，符合ArkTS规范，具备实用工具类特征，生态耦合自然。\"\n}", "llm_formatted": "import { promptAction } from '@kit.ArkUI';\n\nclass ShowToast {\n  private longToastTime: number = 3000;\n  private shortToastTime: number = 1000;\n\n  showToast(message: ResourceStr, duration: number) {\n    promptAction.showToast({ message: message, duration: duration });\n  }\n\n  shortToast(message: ResourceStr) {\n    this.showToast(message, this.shortToastTime);\n  }\n\n  longToast(message: ResourceStr) {\n    this.showToast(message, this.longToastTime);\n  }\n}\n\nexport default new ShowToast();", "leaked": true, "text_tokens": 120, "split": "valid"}
{"path": "Haoc_app_samples~Haoc_小源同学~1912/DistributedVideoPlayer_Stage/entry/src/main/ets/pages/Login.ets", "project_name": "Haoc_app_samples~Haoc_小源同学~1912", "text": "import prompt from '@ohos.prompt';\nimport router from '@ohos.router';\n@Entry\n@Component\nstruct Login {\n  @StorageLink('isLogin') isLogin: boolean = false\n  @State phoneNumber: string = ''\n  @State verifyCode: string = ''\n  @State account: string = ''\n  @State password: string = ''\n  @State phoneNumberIsEditing: boolean = false\n  @State verifyCodeIsEditing: boolean = false\n  @State credentialWithVerifyCode: boolean = true\n\n  build() {\n    Column() {\n      Row() {\n        Image($r(\"app.media.ic_public_back\"))\n          .width('8%')\n          .height('70%')\n          .margin({ right: 10 })\n          .objectFit(ImageFit.Contain)\n          .fillColor('#808080')\n          .onClick(() => {\n            router.back()\n          })\n        Text(this.credentialWithVerifyCode ? \"手机号登录注册\" : \"密码登录\")\n          .fontSize(16)\n        Blank()\n        Text(this.credentialWithVerifyCode ? \"密码登录\" : \"短信登录\")\n          .fontSize(14)\n          .fontColor(Color.Grey)\n          .onClick(() => {\n            this.credentialWithVerifyCode = !this.credentialWithVerifyCode\n          })\n      }.width('100%').height('10%').backgroundColor(Color.White).padding(10)\n\n      Divider().color('#d3d3d3').opacity(0.4)\n\n      Column({ space: 20 }) {\n        if (this.credentialWithVerifyCode) {\n          Row() {\n            Text('中国大陆')\n              .fontSize(16)\n            Blank()\n            Image($r('app.media.ic_public_arrow_right'))\n              .width(16)\n              .height(16)\n          }.width('100%').padding({ top: 20, left: 10, right: 10 })\n        }\n\n        Divider().color('#d3d3d3').opacity(0.4)\n        Column({ space: 20 }) {\n          Row() {\n            Text(this.credentialWithVerifyCode ? \"+86\" : \"账号\")\n              .width(54)\n              .fontSize(16)\n            TextInput({\n              placeholder: this.credentialWithVerifyCode ? \"请输入手机号码\" : \"请输入手机号或邮箱\",\n              text: this.credentialWithVerifyCode ? this.phoneNumber : this.account\n            })\n              .flexShrink(1)\n              .type(this.credentialWithVerifyCode ? InputType.PhoneNumber : InputType.Email)\n              .caretColor($r('app.color.app_theme_color'))\n              .borderRadius(0)\n              .backgroundColor(Color.White)\n              .maxLength(16)\n              .onChange((value: string) => {\n                if (this.credentialWithVerifyCode) {\n                  this.phoneNumber = value\n                } else {\n                  this.account = value\n                }\n              })\n              .onEditChange((isEditing: boolean) => {\n                this.phoneNumberIsEditing = isEditing\n              })\n            Blank()\n            if ((this.credentialWithVerifyCode ? this.phoneNumber !== '' : this.account !== '') && this.phoneNumberIsEditing) {\n              Image($r('app.media.ic_list_deleted'))\n                .width(16)\n                .height(16)\n                .margin({ right: 20 })\n                .onClick(() => {\n                  if (this.credentialWithVerifyCode) {\n                    this.phoneNumber = ''\n                  } else {\n                    this.account = ''\n                  }\n                })\n            }\n            if (this.credentialWithVerifyCode) {\n              Divider().vertical(true).color('#808080').opacity(0.4).height(20)\n              Text('获取验证码')\n                .width(104)\n                .align(Alignment.Center)\n                .fontSize(16)\n                .fontColor(this.phoneNumber.length > 0 ? $r('app.color.app_theme_color') : Color.Grey)\n                .onClick(() => {\n                  if (this.phoneNumber.length !== 11) {\n                    prompt.showToast({ message: \"手机号格式错误\" })\n                  }\n                })\n            }\n          }\n\n          Divider().color('#d3d3d3').opacity(0.4)\n\n          Row() {\n            Text(this.credentialWithVerifyCode ? \"验证码\" : \"密码\")\n              .width(54)\n              .fontSize(16)\n            TextInput({\n              placeholder: this.credentialWithVerifyCode ? \"请输入验证码\" : \"请输入密码\",\n              text: this.credentialWithVerifyCode ? this.verifyCode : this.password\n            })\n              .flexShrink(1)\n              .type(this.credentialWithVerifyCode ? InputType.Number : InputType.Password)\n              .caretColor($r('app.color.app_theme_color'))\n              .showPasswordIcon(false)\n              .borderRadius(0)\n              .backgroundColor(Color.White)\n              .onChange((value: string) => {\n                if (this.credentialWithVerifyCode) {\n                  this.verifyCode = value\n                } else {\n                  this.password = value\n                }\n              })\n              .onEditChange((isEditing: boolean) => {\n                this.verifyCodeIsEditing = isEditing\n              })\n            Blank()\n            if ((this.credentialWithVerifyCode ? this.verifyCode !== '' : this.password !== '') && this.verifyCodeIsEditing) {\n              Image($r('app.media.ic_list_deleted'))\n                .width(16)\n                .height(16)\n                .margin({ right: 20 })\n                .onClick(() => {\n                  if (this.credentialWithVerifyCode) {\n                    this.verifyCode = ''\n                  } else {\n                    this.password = ''\n                  }\n                })\n            }\n            if (!this.credentialWithVerifyCode) {\n              Text('忘记密码？')\n                .width(104)\n                .align(Alignment.Center)\n                .fontSize(16)\n                .fontColor($r('app.color.app_theme_color'))\n                .onClick(() => {\n                })\n            }\n          }.backgroundColor(Color.White)\n        }\n        .width('100%')\n        .padding({ left: 10 })\n\n        Divider().color('#d3d3d3').opacity(0.4)\n      }.backgroundColor(Color.White).margin({ bottom: 20 })\n\n      if (this.credentialWithVerifyCode) {\n        Button('验证登录', { type: ButtonType.Normal })\n          .width('95%')\n          .backgroundColor($r('app.color.app_theme_color'))\n          .borderRadius(3)\n          .opacity(this.phoneNumber === '' || this.verifyCode === '' ? 0.6 : 1)\n          .enabled(this.phoneNumber === '' || this.verifyCode === '' ? false : true)\n          .onClick(() => {\n            this.isLogin = true\n            prompt.showToast({ message: \"登录成功\" })\n            router.back()\n          })\n      } else {\n        Row() {\n          Button('注册', { type: ButtonType.Normal })\n            .width('45%')\n            .backgroundColor('#F2F3F0')\n            .fontColor($r('app.color.app_theme_color'))\n            .border({ width: 1, color: $r('app.color.app_theme_color'), style: BorderStyle.Solid })\n            .borderRadius(3)\n            .onClick(() => {\n              this.credentialWithVerifyCode = true\n            })\n          Blank()\n            .width('5%')\n          Button('登录', { type: ButtonType.Normal })\n            .width('45%')\n            .backgroundColor($r('app.color.app_theme_color'))\n            .borderRadius(3)\n            .opacity(this.account === '' || this.password === '' ? 0.6 : 1)\n            .enabled(this.account === '' || this.password === '' ? false : true)\n            .onClick(() => {\n              this.isLogin = true\n            })\n        }\n      }\n    }.height('100%').backgroundColor('#F2F3F0')\n  }\n}", "id": "91ab39eeff324abd6581ec4db288886f1971535956f132105748f16135f0f145", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "结构完整，符合ArkTS生态规范，具备良好的UI构建与交互逻辑，具有较高学习价值。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 3538, "completion_tokens": 71, "total_tokens": 3609, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"结构完整，符合ArkTS生态规范，具备良好的UI构建与交互逻辑，具有较高学习价值。\"\n}", "llm_formatted": "import prompt from '@ohos.prompt';\nimport router from '@ohos.router';\n@Entry\n@Component\nstruct Login {\n  @StorageLink('isLogin') isLogin: boolean = false\n  @State phoneNumber: string = ''\n  @State verifyCode: string = ''\n  @State account: string = ''\n  @State password: string = ''\n  @State phoneNumberIsEditing: boolean = false\n  @State verifyCodeIsEditing: boolean = false\n  @State credentialWithVerifyCode: boolean = true\n\n  build() {\n    Column() {\n      Row() {\n        Image($r(\"app.media.ic_public_back\"))\n          .width('8%')\n          .height('70%')\n          .margin({ right: 10 })\n          .objectFit(ImageFit.Contain)\n          .fillColor('#808080')\n          .onClick(() => {\n            router.back()\n          })\n        Text(this.credentialWithVerifyCode ? \"手机号登录注册\" : \"密码登录\")\n          .fontSize(16)\n        Blank()\n        Text(this.credentialWithVerifyCode ? \"密码登录\" : \"短信登录\")\n          .fontSize(14)\n          .fontColor(Color.Grey)\n          .onClick(() => {\n            this.credentialWithVerifyCode = !this.credentialWithVerifyCode\n          })\n      }.width('100%').height('10%').backgroundColor(Color.White).padding(10)\n\n      Divider().color('#d3d3d3').opacity(0.4)\n\n      Column({ space: 20 }) {\n        if (this.credentialWithVerifyCode) {\n          Row() {\n            Text('中国大陆')\n              .fontSize(16)\n            Blank()\n            Image($r('app.media.ic_public_arrow_right'))\n              .width(16)\n              .height(16)\n          }.width('100%').padding({ top: 20, left: 10, right: 10 })\n        }\n\n        Divider().color('#d3d3d3').opacity(0.4)\n        Column({ space: 20 }) {\n          Row() {\n            Text(this.credentialWithVerifyCode ? \"+86\" : \"账号\")\n              .width(54)\n              .fontSize(16)\n            TextInput({\n              placeholder: this.credentialWithVerifyCode ? \"请输入手机号码\" : \"请输入手机号或邮箱\",\n              text: this.credentialWithVerifyCode ? this.phoneNumber : this.account\n            })\n              .flexShrink(1)\n              .type(this.credentialWithVerifyCode ? InputType.PhoneNumber : InputType.Email)\n              .caretColor($r('app.color.app_theme_color'))\n              .borderRadius(0)\n              .backgroundColor(Color.White)\n              .maxLength(16)\n              .onChange((value: string) => {\n                if (this.credentialWithVerifyCode) {\n                  this.phoneNumber = value\n                } else {\n                  this.account = value\n                }\n              })\n              .onEditChange((isEditing: boolean) => {\n                this.phoneNumberIsEditing = isEditing\n              })\n            Blank()\n            if ((this.credentialWithVerifyCode ? this.phoneNumber !== '' : this.account !== '') && this.phoneNumberIsEditing) {\n              Image($r('app.media.ic_list_deleted'))\n                .width(16)\n                .height(16)\n                .margin({ right: 20 })\n                .onClick(() => {\n                  if (this.credentialWithVerifyCode) {\n                    this.phoneNumber = ''\n                  } else {\n                    this.account = ''\n                  }\n                })\n            }\n            if (this.credentialWithVerifyCode) {\n              Divider().vertical(true).color('#808080').opacity(0.4).height(20)\n              Text('获取验证码')\n                .width(104)\n                .align(Alignment.Center)\n                .fontSize(16)\n                .fontColor(this.phoneNumber.length > 0 ? $r('app.color.app_theme_color') : Color.Grey)\n                .onClick(() => {\n                  if (this.phoneNumber.length !== 11) {\n                    prompt.showToast({ message: \"手机号格式错误\" })\n                  }\n                })\n            }\n          }\n\n          Divider().color('#d3d3d3').opacity(0.4)\n\n          Row() {\n            Text(this.credentialWithVerifyCode ? \"验证码\" : \"密码\")\n              .width(54)\n              .fontSize(16)\n            TextInput({\n              placeholder: this.credentialWithVerifyCode ? \"请输入验证码\" : \"请输入密码\",\n              text: this.credentialWithVerifyCode ? this.verifyCode : this.password\n            })\n              .flexShrink(1)\n              .type(this.credentialWithVerifyCode ? InputType.Number : InputType.Password)\n              .caretColor($r('app.color.app_theme_color'))\n              .showPasswordIcon(false)\n              .borderRadius(0)\n              .backgroundColor(Color.White)\n              .onChange((value: string) => {\n                if (this.credentialWithVerifyCode) {\n                  this.verifyCode = value\n                } else {\n                  this.password = value\n                }\n              })\n              .onEditChange((isEditing: boolean) => {\n                this.verifyCodeIsEditing = isEditing\n              })\n            Blank()\n            if ((this.credentialWithVerifyCode ? this.verifyCode !== '' : this.password !== '') && this.verifyCodeIsEditing) {\n              Image($r('app.media.ic_list_deleted'))\n                .width(16)\n                .height(16)\n                .margin({ right: 20 })\n                .onClick(() => {\n                  if (this.credentialWithVerifyCode) {\n                    this.verifyCode = ''\n                  } else {\n                    this.password = ''\n                  }\n                })\n            }\n            if (!this.credentialWithVerifyCode) {\n              Text('忘记密码？')\n                .width(104)\n                .align(Alignment.Center)\n                .fontSize(16)\n                .fontColor($r('app.color.app_theme_color'))\n                .onClick(() => {\n                })\n            }\n          }.backgroundColor(Color.White)\n        }\n        .width('100%')\n        .padding({ left: 10 })\n\n        Divider().color('#d3d3d3').opacity(0.4)\n      }.backgroundColor(Color.White).margin({ bottom: 20 })\n\n      if (this.credentialWithVerifyCode) {\n        Button('验证登录', { type: ButtonType.Normal })\n          .width('95%')\n          .backgroundColor($r('app.color.app_theme_color'))\n          .borderRadius(3)\n          .opacity(this.phoneNumber === '' || this.verifyCode === '' ? 0.6 : 1)\n          .enabled(this.phoneNumber === '' || this.verifyCode === '' ? false : true)\n          .onClick(() => {\n            this.isLogin = true\n            prompt.showToast({ message: \"登录成功\" })\n            router.back()\n          })\n      } else {\n        Row() {\n          Button('注册', { type: ButtonType.Normal })\n            .width('45%')\n            .backgroundColor('#F2F3F0')\n            .fontColor($r('app.color.app_theme_color'))\n            .border({ width: 1, color: $r('app.color.app_theme_color'), style: BorderStyle.Solid })\n            .borderRadius(3)\n            .onClick(() => {\n              this.credentialWithVerifyCode = true\n            })\n          Blank()\n            .width('5%')\n          Button('登录', { type: ButtonType.Normal })\n            .width('45%')\n            .backgroundColor($r('app.color.app_theme_color'))\n            .borderRadius(3)\n            .opacity(this.account === '' || this.password === '' ? 0.6 : 1)\n            .enabled(this.account === '' || this.password === '' ? false : true)\n            .onClick(() => {\n              this.isLogin = true\n            })\n        }\n      }\n    }.height('100%').backgroundColor('#F2F3F0')\n  }\n}", "leaked": true, "text_tokens": 1669, "split": "valid"}
{"path": "arkui-linux~openEuler~2446/samples/arkui-test/Component/03_Scroll/entry/src/main/ets/pages/MainPage.ets", "project_name": "arkui-linux~openEuler~2446", "text": "import router from '@ohos.router';\n\n/* button 样式 */\n@Extend(Button) function buttonStyle(arkTSFileName) {\n  .fontSize(16)\n  .fontColor('#191919')\n  .borderWidth(1)\n  .borderColor('#a9a9a9')\n  .backgroundColor('#e9e9e9')\n  .width('100%')\n  .onClick(() => {\n    router.replaceUrl({ url: 'pages/' + arkTSFileName });\n  })\n}\n\n@Entry\n@Component\nstruct MainPage{\n  build() {\n      Column() {\n        /* 文本组件 */\n        Text('滚动类组件测试')\n          .fontSize(24)\n          .margin({ top: 100, bottom: 60 })\n          .width('100%') // 宽度大于文本内容长度，textAlign起作用\n          .textAlign(TextAlign.Center)\n\n        /* 弹性布局容器 Flex */\n        Flex({ direction: FlexDirection.Column }) {\n          /* 按钮 Button 组件 */\n          Button('单组件', { type: ButtonType.Normal })\n            .buttonStyle('ScrollTest')\n\n          Button('列表布局', { type: ButtonType.Normal })\n            .buttonStyle('ListTest')\n\n          Button('网格布局', { type: ButtonType.Normal })\n            .buttonStyle('GridTest')\n\n          Button('页面切换组件', { type: ButtonType.Normal })\n            .buttonStyle('SwiperTest')\n\n          Button('下拉刷新组件', { type: ButtonType.Normal })\n            .buttonStyle('RefreshTest')\n        }\n        .width('50%')\n      }\n      .backgroundColor($r('app.color.background'))\n  }\n}", "id": "fa52e1ee673a5745416071c925d34c9be4dff799d4a83a0a0fe5bb4f456158e3", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "符合ArkTS生态，结构清晰，具备实际组件使用与样式扩展示例。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2224, "completion_tokens": 67, "total_tokens": 2291, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"符合ArkTS生态，结构清晰，具备实际组件使用与样式扩展示例。\"\n}", "llm_formatted": "import router from '@ohos.router';\n\n/* button 样式 */\n@Extend(Button) function buttonStyle(arkTSFileName) {\n  .fontSize(16)\n  .fontColor('#191919')\n  .borderWidth(1)\n  .borderColor('#a9a9a9')\n  .backgroundColor('#e9e9e9')\n  .width('100%')\n  .onClick(() => {\n    router.replaceUrl({ url: 'pages/' + arkTSFileName });\n  })\n}\n\n@Entry\n@Component\nstruct MainPage{\n  build() {\n      Column() {\n        /* 文本组件 */\n        Text('滚动类组件测试')\n          .fontSize(24)\n          .margin({ top: 100, bottom: 60 })\n          .width('100%') // 宽度大于文本内容长度，textAlign起作用\n          .textAlign(TextAlign.Center)\n\n        /* 弹性布局容器 Flex */\n        Flex({ direction: FlexDirection.Column }) {\n          /* 按钮 Button 组件 */\n          Button('单组件', { type: ButtonType.Normal })\n            .buttonStyle('ScrollTest')\n\n          Button('列表布局', { type: ButtonType.Normal })\n            .buttonStyle('ListTest')\n\n          Button('网格布局', { type: ButtonType.Normal })\n            .buttonStyle('GridTest')\n\n          Button('页面切换组件', { type: ButtonType.Normal })\n            .buttonStyle('SwiperTest')\n\n          Button('下拉刷新组件', { type: ButtonType.Normal })\n            .buttonStyle('RefreshTest')\n        }\n        .width('50%')\n      }\n      .backgroundColor($r('app.color.background'))\n  }\n}", "leaked": true, "text_tokens": 355, "split": "valid"}
{"path": "language-base-class-library~harmonyos_samples~528/feature/capabilities/src/main/ets/components/utilcomponents/scopehelper/InputItem.ets", "project_name": "language-base-class-library~harmonyos_samples~528", "text": "@Component\nexport struct InputItem {\n  @Link value: number;\n  public textValue: Resource = $r('app.string.short_sleep');\n  public  placeHolder: Resource = $r('app.string.enter_sleep_time');\n\n  build() {\n    Row() {\n      Text(this.textValue)\n        .layoutWeight(1)\n        .fontSize(20)\n      TextInput({ placeholder: this.placeHolder })\n        .id('shortestSleepTime')\n        .layoutWeight(1)\n        .type(InputType.Normal)\n        .fontSize(20)\n        .fontStyle(FontStyle.Italic)\n        .maxLength(20)\n        .fontWeight(FontWeight.Bold)\n        .placeholderFont({ size: 16, weight: FontWeight.Normal })\n        .enterKeyType(EnterKeyType.Go)\n        .onChange((value: string) => {\n          this.value = Number(value);\n        })\n    }\n  }\n}", "id": "12432d8aae0b7625733fb4bddb937f90c2cb696118debfade9dee3754c6c06e3", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "ArkTS组件结构清晰，生态耦合自然，具备良好可迁移性", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 1452, "completion_tokens": 65, "total_tokens": 1517, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"ArkTS组件结构清晰，生态耦合自然，具备良好可迁移性\"\n}", "llm_formatted": "@Component\nexport struct InputItem {\n  @Link value: number;\n  public textValue: Resource = $r('app.string.short_sleep');\n  public  placeHolder: Resource = $r('app.string.enter_sleep_time');\n\n  build() {\n    Row() {\n      Text(this.textValue)\n        .layoutWeight(1)\n        .fontSize(20)\n      TextInput({ placeholder: this.placeHolder })\n        .id('shortestSleepTime')\n        .layoutWeight(1)\n        .type(InputType.Normal)\n        .fontSize(20)\n        .fontStyle(FontStyle.Italic)\n        .maxLength(20)\n        .fontWeight(FontWeight.Bold)\n        .placeholderFont({ size: 16, weight: FontWeight.Normal })\n        .enterKeyType(EnterKeyType.Go)\n        .onChange((value: string) => {\n          this.value = Number(value);\n        })\n    }\n  }\n}", "leaked": true, "text_tokens": 184, "split": "valid"}
{"path": "xts_acts~openharmony~1331/arkui/ace_c_arkui_test/entry/src/ohosTest/ets/MainAbility/pages/hybird/HybirdGetNodeHandleTest.ets", "project_name": "xts_acts~openharmony~1331", "text": "import render from 'libnativerender.so'\nimport { CommonView } from '../../componet/CommonView';\nimport { UIContext, ComponentContent   } from '@kit.ArkUI';\n@Builder\nfunction mixedRow() {\n  Row() {\n    Text('Hello, World!')\n      .backgroundColor(Color.Gray)\n  }\n  .id('row')\n  .width(200)\n  .height(200)\n  .backgroundColor(Color.Green)\n}\n\n// 提供创建ArkTS组件的入口函数。\nexport function createMixedRow(uiContent:UIContext): ComponentContent<[]> {\n  // 通过ComponentContent创建Row组件并将它封装起来。\n  return new ComponentContent<[]>(uiContent!, wrapBuilder<[]>(mixedRow));\n}\n\n@Entry\n@Component\nstruct HybirdGetNodeHandleTest {\n  PAGE_TAG: string = 'HybirdGetNodeHandleTest';\n\n  build() {\n    Column() {\n      CommonView({\n        pageTag: this.PAGE_TAG,\n      }).onAppear(() => {\n        render.hybirdGetNodeHandleTest(this.PAGE_TAG, createMixedRow, this.getUIContext());\n      })\n    }\n  }\n}\n", "id": "ef6766a03f49c6d4d710a3c35239e68e44e7d0ebd6e85ecb76c760da89f729ef", "replica": 1, "decision": "KEEP_WITH_TAG", "labels": ["BINARY_OR_GARBLED"], "arkts_score": 4.0, "quality_score": 3.0, "confidence": 0.85, "rationale": "含二进制导入但结构完整，具备ArkTS组件构建能力，具一定学习价值。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2106, "completion_tokens": 79, "total_tokens": 2185, "raw_response": "{\n  \"decision\": \"KEEP_WITH_TAG\",\n  \"labels\": [\"BINARY_OR_GARBLED\"],\n  \"arkts_score\": 4,\n  \"quality_score\": 3,\n  \"confidence\": 0.85,\n  \"rationale\": \"含二进制导入但结构完整，具备ArkTS组件构建能力，具一定学习价值。\"\n}", "llm_formatted": "import render from 'libnativerender.so'\nimport { CommonView } from '../../componet/CommonView';\nimport { UIContext, ComponentContent   } from '@kit.ArkUI';\n@Builder\nfunction mixedRow() {\n  Row() {\n    Text('Hello, World!')\n      .backgroundColor(Color.Gray)\n  }\n  .id('row')\n  .width(200)\n  .height(200)\n  .backgroundColor(Color.Green)\n}\n\n// 提供创建ArkTS组件的入口函数。\nexport function createMixedRow(uiContent:UIContext): ComponentContent<[]> {\n  // 通过ComponentContent创建Row组件并将它封装起来。\n  return new ComponentContent<[]>(uiContent!, wrapBuilder<[]>(mixedRow));\n}\n\n@Entry\n@Component\nstruct HybirdGetNodeHandleTest {\n  PAGE_TAG: string = 'HybirdGetNodeHandleTest';\n\n  build() {\n    Column() {\n      CommonView({\n        pageTag: this.PAGE_TAG,\n      }).onAppear(() => {\n        render.hybirdGetNodeHandleTest(this.PAGE_TAG, createMixedRow, this.getUIContext());\n      })\n    }\n  }\n}\n", "leaked": true, "text_tokens": 237, "split": "valid"}
{"path": "ComplexTypePass~HarmonyOS_Samples~65/entry/src/main/ets/pages/ObjectPage.ets", "project_name": "ComplexTypePass~HarmonyOS_Samples~65", "text": "import ParamPassing from 'libentry.so';\nimport { InputArea, InputField, OutputArea } from '../model/IOModel';\nimport { SampleInputObject, SampleOutputObject } from '../model/SampleObject';\n\n@Builder\nexport function objectPage(_entry: string, param: string) {\n  NavDestination() {\n    MainComponent()\n  }\n  .title(param)\n  .backgroundColor($r('app.color.sub_window_background'))\n}\n\n@Preview\n@Component\nstruct MainComponent {\n  @Provide inputArray: Array<InputField> = Array(2);\n  @Provide printStr: string = '';\n\n  aboutToAppear(): void {\n    this.inputArray[0] = {\n      label: 'Age',\n      inputStr: '',\n      inputType: InputType.Number,\n      maxLength: 4,\n    }\n    this.inputArray[1] = {\n      label: 'Name',\n      inputStr: '',\n      inputType: InputType.Normal,\n    }\n  }\n\n  object2String(obj: SampleOutputObject): string {\n    return `Type:${obj.isAdult ? 'Adult' : 'Child'} \\nNo.:${obj.code} \\nAge:${obj.age} \\nName:${obj.name}`;\n  }\n\n  paramPassing() {\n    let age: number;\n    let name: string;\n    try {\n      this.inputArray.forEach((inputField, i) => {\n        if (inputField.inputStr.length > 0) {\n          if (i === 0) {\n            let inputNumber = Number(inputField.inputStr);\n            if (isNaN(inputNumber) || inputNumber < 0 || inputNumber > 150) {\n              throw new Error('Please enter a reasonable age');\n            } else {\n              age = inputNumber;\n            }\n          } else {\n            name = inputField.inputStr;\n          }\n        } else {\n          throw new Error('Incomplete input');\n        }\n      })\n      let sendObject: SampleInputObject = {\n        age: age!,\n        name: name!,\n      };\n      this.printStr = this.object2String(ParamPassing.objectPassing(sendObject));\n    } catch (e) {\n      this.printStr = e?.message;\n    }\n  }\n\n  build() {\n    Column() {\n      InputArea()\n      OutputArea()\n      Blank()\n      Button($r('app.string.button_text_execute'))\n        .onClick(() => {\n          this.paramPassing();\n        })\n        .width($r('app.string.100percent'))\n    }\n    .padding($r(\"app.string.margin_l\"))\n    .width($r('app.string.100percent'))\n    .height($r('app.string.100percent'))\n  }\n}", "id": "bec1a990801aeed7a252b8d395db161ce009d609861d8e0cea28e2009f74df1c", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "ArkTS语法规范，生态耦合自然，逻辑完整，具学习价值", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 1825, "completion_tokens": 69, "total_tokens": 1894, "raw_response": "```json\n{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"ArkTS语法规范，生态耦合自然，逻辑完整，具学习价值\"\n}\n```", "llm_formatted": "import ParamPassing from 'libentry.so';\nimport { InputArea, InputField, OutputArea } from '../model/IOModel';\nimport { SampleInputObject, SampleOutputObject } from '../model/SampleObject';\n\n@Builder\nexport function objectPage(_entry: string, param: string) {\n  NavDestination() {\n    MainComponent()\n  }\n  .title(param)\n  .backgroundColor($r('app.color.sub_window_background'))\n}\n\n@Preview\n@Component\nstruct MainComponent {\n  @Provide inputArray: Array<InputField> = Array(2);\n  @Provide printStr: string = '';\n\n  aboutToAppear(): void {\n    this.inputArray[0] = {\n      label: 'Age',\n      inputStr: '',\n      inputType: InputType.Number,\n      maxLength: 4,\n    }\n    this.inputArray[1] = {\n      label: 'Name',\n      inputStr: '',\n      inputType: InputType.Normal,\n    }\n  }\n\n  object2String(obj: SampleOutputObject): string {\n    return `Type:${obj.isAdult ? 'Adult' : 'Child'} \\nNo.:${obj.code} \\nAge:${obj.age} \\nName:${obj.name}`;\n  }\n\n  paramPassing() {\n    let age: number;\n    let name: string;\n    try {\n      this.inputArray.forEach((inputField, i) => {\n        if (inputField.inputStr.length > 0) {\n          if (i === 0) {\n            let inputNumber = Number(inputField.inputStr);\n            if (isNaN(inputNumber) || inputNumber < 0 || inputNumber > 150) {\n              throw new Error('Please enter a reasonable age');\n            } else {\n              age = inputNumber;\n            }\n          } else {\n            name = inputField.inputStr;\n          }\n        } else {\n          throw new Error('Incomplete input');\n        }\n      })\n      let sendObject: SampleInputObject = {\n        age: age!,\n        name: name!,\n      };\n      this.printStr = this.object2String(ParamPassing.objectPassing(sendObject));\n    } catch (e) {\n      this.printStr = e?.message;\n    }\n  }\n\n  build() {\n    Column() {\n      InputArea()\n      OutputArea()\n      Blank()\n      Button($r('app.string.button_text_execute'))\n        .onClick(() => {\n          this.paramPassing();\n        })\n        .width($r('app.string.100percent'))\n    }\n    .padding($r(\"app.string.margin_l\"))\n    .width($r('app.string.100percent'))\n    .height($r('app.string.100percent'))\n  }\n}", "leaked": true, "text_tokens": 557, "split": "valid"}
{"path": "HarmonyOs~苏嘉伟~2014/HMOSWorld/Application/products/phone/src/main/ets/pages/MainPage.ets", "project_name": "HarmonyOs~苏嘉伟~2014", "text": "import { display } from '@kit.ArkUI';\nimport { common, ConfigurationConstant } from '@kit.AbilityKit';\nimport { fileIo } from '@kit.CoreFileKit';\nimport { image } from '@kit.ImageKit';\nimport { ConferenceView } from '@ohos/conference';\nimport { AudioPlayerService, AudioPlayerStatus } from '@ohos/audioplayer';\nimport { MapView } from '@ohos/challenge';\nimport { DiscoverView } from '@ohos/discover';\nimport { LearningView } from '@ohos/learning';\nimport {\n  BreakpointSystem,\n  BreakpointTypeEnum,\n  ContinueModel,\n  DarkModeUtil,\n  FileUtil,\n  GlobalContext,\n  Logger,\n  ResourcesType,\n  WebUrls,\n  WebUtil,\n  WindowUtil\n} from '@ohos/utils';\nimport { LearningResource, MineView, ProfileConstants, UserData, UserModel } from '@ohos/mine';\nimport { AppConstants } from '../constants/AppConstants';\nimport { CustomTabBar } from '../components/CustomTabBar';\nimport { TabBarType } from '../model/TabBarModel';\n\nconst TAG = '[MainPage]';\nconst context = (getContext(this) as common.UIAbilityContext);\n\n@Entry\n@Component\nstruct MainPage {\n  @State currentIndex: TabBarType = TabBarType.DISCOVER;\n  @State webViewController?: WebviewController = undefined;\n  @State learnedId: string = '';\n  @StorageLink('currentBreakpoint') currentBreakpoint: string = BreakpointTypeEnum.MD;\n  private breakpointSystem: BreakpointSystem = new BreakpointSystem();\n  @Provide('appPathStack') appPathStack: NavPathStack = new NavPathStack();\n  @Provide('minePathStack') minePathStack: NavPathStack = new NavPathStack();\n  @Provide('discoverPathStack') discoverPathStack: NavPathStack = new NavPathStack();\n  @Provide('settingPathStack') settingPathStack: NavPathStack = new NavPathStack();\n\n  aboutToAppear() {\n    // Preloading the web page.\n    //预先加载了两个网页\n    WebUtil.createNWeb(WebUrls.ACTIVITY_URL, this.getUIContext());\n    WebUtil.createNWeb(WebUrls.CHALLENGE_URL, this.getUIContext());\n    this.breakpointSystem.register();\n    try {\n      if (canIUse('SystemCapability.Window.SessionManager')) {\n        if (display.isFoldable()) {\n          this.changeOrientation(display.getFoldStatus());\n          display.on('foldStatusChange', (status: display.FoldStatus) => {\n            this.changeOrientation(status);\n          });\n        }\n      }\n    } catch (exception) {\n      Logger.error(TAG, 'Is not fold able device error: ' + JSON.stringify(exception));\n    }\n    // Set the current page to the transferable state.\n    //设置应用可以流转\n    WindowUtil.setMissionContinueActive(context, true);\n\n    if (ContinueModel.getInstance().isContinue) {\n      const userData: UserData = ContinueModel.getInstance().data.userData as UserData;\n      this.currentIndex = ContinueModel.getInstance().data.mainTabIndex as number;\n      UserModel.getInstance().saveDistributedUserData(userData);\n    }\n    this.createProfile()\n  }\n\n  async createProfile() {\n    // Copy the local avatar from the distributed file path to the app file path during transfer.\n    const isDisProfileAccess = fileIo.accessSync(ProfileConstants.getInstance().DISTRIBUTED_PROFILE_PATH);\n    Logger.info(TAG, 'isDisProfileAccess:' + isDisProfileAccess);\n    if (isDisProfileAccess) {\n      FileUtil.copyFile(ProfileConstants.getInstance().DISTRIBUTED_PROFILE_PATH,\n        ProfileConstants.getInstance().LOCAL_PROFILE_PATH)\n    }\n    const isLocalProfileAccess = fileIo.accessSync(ProfileConstants.getInstance().LOCAL_PROFILE_PATH);\n    Logger.info(TAG, 'isLocalProfileAccess:' + isLocalProfileAccess);\n    if (isLocalProfileAccess) {\n      const imageSource: image.ImageSource = image.createImageSource(ProfileConstants.getInstance().LOCAL_PROFILE_PATH);\n      imageSource.createPixelMap((err, pixelMap) => {\n        if (!err) {\n          AppStorage.setOrCreate('profilePixelMap', pixelMap);\n        }\n        Logger.error(TAG, `LOCAL_PROFILE_PATH : ${JSON.stringify(err)}`);\n      });\n      await imageSource.release();\n    }\n  }\n\n  changeOrientation(status: display.FoldStatus) {\n    if (status !== display.FoldStatus.FOLD_STATUS_FOLDED) {\n      AppStorage.setOrCreate('foldExpanded', true);\n      WindowUtil.setMainWindowRestricted(getContext(this));\n    } else {\n      AppStorage.setOrCreate('foldExpanded', false);\n      WindowUtil.setMainWindowPortrait(getContext(this));\n    }\n  }\n\n  aboutToDisappear() {\n    // Deregister the Listener.\n    this.breakpointSystem.unregister();\n    try {\n      display.off('foldStatusChange');\n      display.off('change');\n    } catch (exception) {\n      Logger.error(TAG, 'Failed to unregister callback. Code: ' + JSON.stringify(exception));\n    }\n    WindowUtil.setMissionContinueActive(context, false);\n  }\n\n  onPageShow() {\n    DarkModeUtil.getInstance().checkDarkModeSetting();\n    const jumpArticleId: string = GlobalContext.getContext().getObject('articleId') as string;\n    // If the app is started from a service card or notification message, the corresponding article page is displayed.\n    //如果有要打开的文章页面的id，就通过组件导航到页面详情，显示此文章\n    if (jumpArticleId) {\n      GlobalContext.getContext().deleteObject('articleId');\n      const article: LearningResource = new LearningResource();\n      article.id = jumpArticleId;\n      article.webUrl = GlobalContext.getContext().getObject('webUrl') as string;\n      article.type = GlobalContext.getContext().getObject('type') as ResourcesType;\n      //导航到详情页\n      this.appPathStack.pushPathByName('DiscoverArticleDetail',\n        new Object({\n          articleDetail: article,\n          onDestinationBack: () => {\n            this.appPathStack.pop();\n            return false;\n          }\n        }));\n    }\n    //状态栏颜色的改变\n    if (this.currentIndex === TabBarType.MINE) {\n      WindowUtil.updateStatusBarColor(getContext(this), true);\n    } else {\n      WindowUtil.updateStatusBarColor(getContext(this),\n        AppStorage.get('currentColorMode') === ConfigurationConstant.ColorMode.COLOR_MODE_DARK);\n    }\n    Logger.info(TAG, 'onPageShow');\n    if (AppStorage.get<boolean>('getHomeResource')) {\n      this.currentIndex = TabBarType.DISCOVER;\n    }\n  }\n\n  onBackPress(): boolean | void {\n    if (this.currentIndex === TabBarType.ACTIVITY) {\n      const webview = WebUtil.getController(WebUrls.ACTIVITY_URL);\n      // If the web has level-2 page. the web page is returned and the return event of the current page is intercepted.\n      if (webview?.accessBackward()) {\n        webview.backward();\n      }\n      return true;\n    }\n  }\n\n  build() {\n    Navigation(this.appPathStack) {\n      Stack() {\n        if (this.currentBreakpoint === BreakpointTypeEnum.LG) {\n          Image($r('app.media.ic_user_bg'))\n            .width(AppConstants.FULL_PERCENT)\n            .height(AppConstants.FULL_PERCENT)\n        }\n\n        Flex({\n          direction: this.currentBreakpoint === BreakpointTypeEnum.LG ? FlexDirection.RowReverse : FlexDirection.Column,\n        }) {\n          Tabs({ index: this.currentIndex }) {\n            TabContent() {\n              DiscoverView()\n            }\n\n            TabContent() {\n              LearningView({ learnedId: $learnedId })\n            }\n\n            TabContent() {\n              if (canIUse('SystemCapability.Map.Core')) {\n                MapView()\n              }\n            }\n\n            TabContent() {\n              ConferenceView()\n            }\n\n            TabContent() {\n              MineView()\n            }\n          }\n          .layoutWeight(1)\n          .barHeight(0)\n          .scrollable(false)\n          .onChange((index) => {\n            this.currentIndex = index;\n            ContinueModel.getInstance().data.mainTabIndex = index;\n\n            // Close Voice Player when switching tabs.\n            if (AppStorage.get('audioPlayerStatus') !== AudioPlayerStatus.IDLE) {\n              AudioPlayerService.getInstance().stop().then(() => {\n                AudioPlayerService.destroy();\n              });\n            }\n          })\n\n          CustomTabBar({ currentIndex: $currentIndex })\n        }\n        .width(AppConstants.FULL_PERCENT)\n        .height(AppConstants.FULL_PERCENT)\n        .backgroundColor((this.currentBreakpoint === BreakpointTypeEnum.LG && this.currentIndex === TabBarType.MINE) ?\n        $r('app.color.clear_color') : $r('sys.color.ohos_id_color_sub_background'))\n      }\n    }\n    .hideTitleBar(true)\n    .mode(NavigationMode.Stack)\n  }\n}", "id": "4b817bc60342a24aacd6ea1162016edc7ec070e7bd1558362bf47f5916e6ebb2", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 5.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "ArkTS生态耦合良好，结构完整，逻辑清晰，具备较高学习价值。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 3685, "completion_tokens": 67, "total_tokens": 3752, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 5,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"ArkTS生态耦合良好，结构完整，逻辑清晰，具备较高学习价值。\"\n}", "llm_formatted": "ts\nimport { display } from '@kit.ArkUI';\nimport { common, ConfigurationConstant } from '@kit.AbilityKit';\nimport { fileIo } from '@kit.CoreFileKit';\nimport { image } from '@kit.ImageKit';\nimport { ConferenceView } from '@ohos/conference';\nimport { AudioPlayerService, AudioPlayerStatus } from '@ohos/audioplayer';\nimport { MapView } from '@ohos/challenge';\nimport { DiscoverView } from '@ohos/discover';\nimport { LearningView } from '@ohos/learning';\nimport {\n  BreakpointSystem,\n  BreakpointTypeEnum,\n  ContinueModel,\n  DarkModeUtil,\n  FileUtil,\n  GlobalContext,\n  Logger,\n  ResourcesType,\n  WebUrls,\n  WebUtil,\n  WindowUtil\n} from '@ohos/utils';\nimport { LearningResource, MineView, ProfileConstants, UserData, UserModel } from '@ohos/mine';\nimport { AppConstants } from '../constants/AppConstants';\nimport { CustomTabBar } from '../components/CustomTabBar';\nimport { TabBarType } from '../model/TabBarModel';\n\nconst TAG = '[MainPage]';\nconst context = (getContext(this) as common.UIAbilityContext);\n\n@Entry\n@Component\nstruct MainPage {\n  @State currentIndex: TabBarType = TabBarType.DISCOVER;\n  @State webViewController?: WebviewController = undefined;\n  @State learnedId: string = '';\n  @StorageLink('currentBreakpoint') currentBreakpoint: string = BreakpointTypeEnum.MD;\n  private breakpointSystem: BreakpointSystem = new BreakpointSystem();\n  @Provide('appPathStack') appPathStack: NavPathStack = new NavPathStack();\n  @Provide('minePathStack') minePathStack: NavPathStack = new NavPathStack();\n  @Provide('discoverPathStack') discoverPathStack: NavPathStack = new NavPathStack();\n  @Provide('settingPathStack') settingPathStack: NavPathStack = new NavPathStack();\n\n  aboutToAppear() {\n    WebUtil.createNWeb(WebUrls.ACTIVITY_URL, this.getUIContext());\n    WebUtil.createNWeb(WebUrls.CHALLENGE_URL, this.getUIContext());\n    this.breakpointSystem.register();\n    try {\n      if (canIUse('SystemCapability.Window.SessionManager')) {\n        if (display.isFoldable()) {\n          this.changeOrientation(display.getFoldStatus());\n          display.on('foldStatusChange', (status: display.FoldStatus) => {\n            this.changeOrientation(status);\n          });\n        }\n      }\n    } catch (exception) {\n      Logger.error(TAG, 'Is not fold able device error: ' + JSON.stringify(exception));\n    }\n    WindowUtil.setMissionContinueActive(context, true);\n\n    if (ContinueModel.getInstance().isContinue) {\n      const userData: UserData = ContinueModel.getInstance().data.userData as UserData;\n      this.currentIndex = ContinueModel.getInstance().data.mainTabIndex as number;\n      UserModel.getInstance().saveDistributedUserData(userData);\n    }\n    this.createProfile()\n  }\n\n  async createProfile() {\n    const isDisProfileAccess = fileIo.accessSync(ProfileConstants.getInstance().DISTRIBUTED_PROFILE_PATH);\n    Logger.info(TAG, 'isDisProfileAccess:' + isDisProfileAccess);\n    if (isDisProfileAccess) {\n      FileUtil.copyFile(ProfileConstants.getInstance().DISTRIBUTED_PROFILE_PATH,\n        ProfileConstants.getInstance().LOCAL_PROFILE_PATH)\n    }\n    const isLocalProfileAccess = fileIo.accessSync(ProfileConstants.getInstance().LOCAL_PROFILE_PATH);\n    Logger.info(TAG, 'isLocalProfileAccess:' + isLocalProfileAccess);\n    if (isLocalProfileAccess) {\n      const imageSource: image.ImageSource = image.createImageSource(ProfileConstants.getInstance().LOCAL_PROFILE_PATH);\n      imageSource.createPixelMap((err, pixelMap) => {\n        if (!err) {\n          AppStorage.setOrCreate('profilePixelMap', pixelMap);\n        }\n        Logger.error(TAG, `LOCAL_PROFILE_PATH : ${JSON.stringify(err)}`);\n      });\n      await imageSource.release();\n    }\n  }\n\n  changeOrientation(status: display.FoldStatus) {\n    if (status !== display.FoldStatus.FOLD_STATUS_FOLDED) {\n      AppStorage.setOrCreate('foldExpanded', true);\n      WindowUtil.setMainWindowRestricted(getContext(this));\n    } else {\n      AppStorage.setOrCreate('foldExpanded', false);\n      WindowUtil.setMainWindowPortrait(getContext(this));\n    }\n  }\n\n  aboutToDisappear() {\n    this.breakpointSystem.unregister();\n    try {\n      display.off('foldStatusChange');\n      display.off('change');\n    } catch (exception) {\n      Logger.error(TAG, 'Failed to unregister callback. Code: ' + JSON.stringify(exception));\n    }\n    WindowUtil.setMissionContinueActive(context, false);\n  }\n\n  onPageShow() {\n    DarkModeUtil.getInstance().checkDarkModeSetting();\n    const jumpArticleId: string = GlobalContext.getContext().getObject('articleId') as string;\n    if (jumpArticleId) {\n      GlobalContext.getContext().deleteObject('articleId');\n      const article: LearningResource = new LearningResource();\n      article.id = jumpArticleId;\n      article.webUrl = GlobalContext.getContext().getObject('webUrl') as string;\n      article.type = GlobalContext.getContext().getObject('type') as ResourcesType;\n      this.appPathStack.pushPathByName('DiscoverArticleDetail',\n        new Object({\n          articleDetail: article,\n          onDestinationBack: () => {\n            this.appPathStack.pop();\n            return false;\n          }\n        }));\n    }\n    if (this.currentIndex === TabBarType.MINE) {\n      WindowUtil.updateStatusBarColor(getContext(this), true);\n    } else {\n      WindowUtil.updateStatusBarColor(getContext(this),\n        AppStorage.get('currentColorMode') === ConfigurationConstant.ColorMode.COLOR_MODE_DARK);\n    }\n    Logger.info(TAG, 'onPageShow');\n    if (AppStorage.get<boolean>('getHomeResource')) {\n      this.currentIndex = TabBarType.DISCOVER;\n    }\n  }\n\n  onBackPress(): boolean | void {\n    if (this.currentIndex === TabBarType.ACTIVITY) {\n      const webview = WebUtil.getController(WebUrls.ACTIVITY_URL);\n      if (webview?.accessBackward()) {\n        webview.backward();\n      }\n      return true;\n    }\n  }\n\n  build() {\n    Navigation(this.appPathStack) {\n      Stack() {\n        if (this.currentBreakpoint === BreakpointTypeEnum.LG) {\n          Image($r('app.media.ic_user_bg'))\n            .width(AppConstants.FULL_PERCENT)\n            .height(AppConstants.FULL_PERCENT)\n        }\n\n        Flex({\n          direction: this.currentBreakpoint === BreakpointTypeEnum.LG ? FlexDirection.RowReverse : FlexDirection.Column,\n        }) {\n          Tabs({ index: this.currentIndex }) {\n            TabContent() {\n              DiscoverView()\n            }\n\n            TabContent() {\n              LearningView({ learnedId: $learnedId })\n            }\n\n            TabContent() {\n              if (canIUse('SystemCapability.Map.Core')) {\n                MapView()\n              }\n            }\n\n            TabContent() {\n              ConferenceView()\n            }\n\n            TabContent() {\n              MineView()\n            }\n          }\n          .layoutWeight(1)\n          .barHeight(0)\n          .scrollable(false)\n          .onChange((index) => {\n            this.currentIndex = index;\n            ContinueModel.getInstance().data.mainTabIndex = index;\n\n            if (AppStorage.get('audioPlayerStatus') !== AudioPlayerStatus.IDLE) {\n              AudioPlayerService.getInstance().stop().then(() => {\n                AudioPlayerService.destroy();\n              });\n            }\n          })\n\n          CustomTabBar({ currentIndex: $currentIndex })\n        }\n        .width(AppConstants.FULL_PERCENT)\n        .height(AppConstants.FULL_PERCENT)\n        .backgroundColor((this.currentBreakpoint === BreakpointTypeEnum.LG && this.currentIndex === TabBarType.MINE) ?\n        $r('app.color.clear_color') : $r('sys.color.ohos_id_color_sub_background'))\n      }\n    }\n    .hideTitleBar(true)\n    .mode(NavigationMode.Stack)\n  }\n}", "leaked": true, "text_tokens": 1816, "split": "valid"}
{"path": "applications_mms~openharmony~1285/entry/src/main/ets/service/CallService.ets", "project_name": "applications_mms~openharmony~1285", "text": "import call from '@ohos.telephony.call';\nimport HiLog from '../utils/HiLog';\nimport common from '../data/commonData';\nimport LooseObject from '../data/LooseObject'\n\nconst TAG = 'CallService';\n\nexport default {\n\n    /**\n     * Calling\n     *\n     * @param telephone\n     * @callback callback\n     */\n    call(telephone, callback) {\n        if (telephone == null || telephone == common.string.EMPTY_STR) {\n            HiLog.i(TAG, 'telephone is null');\n            return;\n        }\n        let result: LooseObject = {};\n        call.dial(telephone).then((value) => {\n            result.code = common.int.SUCCESS;\n            result.value = value;\n            callback(result);\n        }).catch((err) => {\n            HiLog.e(TAG, 'dial error: ' + err.message);\n            result.code = common.int.FAILURE;\n            callback(result);\n        });\n    }\n}", "id": "f6cbe5570f8fab54fbbe188dc62b2d12815cbeb83e4ffe1eee3e79e15ed3561f", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 3.0, "confidence": 0.9, "rationale": "符合ArkTS规范，有生态耦合与错误处理，具备一定学习价值。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2060, "completion_tokens": 66, "total_tokens": 2126, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 3,\n  \"confidence\": 0.9,\n  \"rationale\": \"符合ArkTS规范，有生态耦合与错误处理，具备一定学习价值。\"\n}", "llm_formatted": "import call from '@ohos.telephony.call';\nimport HiLog from '../utils/HiLog';\nimport common from '../data/commonData';\nimport LooseObject from '../data/LooseObject';\n\nconst TAG = 'CallService';\n\nexport default {\n    /**\n     * Calling\n     *\n     * @param telephone\n     * @callback callback\n     */\n    call(telephone, callback) {\n        if (telephone == null || telephone == common.string.EMPTY_STR) {\n            HiLog.i(TAG, 'telephone is null');\n            return;\n        }\n        let result: LooseObject = {};\n        call.dial(telephone).then((value) => {\n            result.code = common.int.SUCCESS;\n            result.value = value;\n            callback(result);\n        }).catch((err) => {\n            HiLog.e(TAG, 'dial error: ' + err.message);\n            result.code = common.int.FAILURE;\n            callback(result);\n        });\n    }\n};", "leaked": true, "text_tokens": 191, "split": "valid"}
{"path": "BluetoothLowEnergy~harmonyos_samples~380/entry/src/main/ets/utils/DateUtils.ets", "project_name": "BluetoothLowEnergy~harmonyos_samples~380", "text": "const MAX_LENGTH: number = 2;\n\nexport default class DateUtils {\n  public static format(date: Date, format: string = 'yyyy-MM-dd HH:mm:ss'): string {\n    let year = date.getFullYear().toString();\n    let month = (date.getMonth() + 1).toString().padStart(MAX_LENGTH, '0');\n    let day = (date.getDate() + 1).toString().padStart(MAX_LENGTH, '0');\n    let hour = (date.getHours() + 1).toString().padStart(MAX_LENGTH, '0');\n    let minute = (date.getMinutes() + 1).toString().padStart(MAX_LENGTH, '0');\n    let second = (date.getSeconds() + 1).toString().padStart(MAX_LENGTH, '0');\n    let result = format.replace('yyyy', year);\n    result = result.replace('MM', month);\n    result = result.replace('dd', day);\n    result = result.replace('HH', hour);\n    result = result.replace('mm', minute);\n    result = result.replace('ss', second);\n    return result\n  }\n}", "id": "9d79a7a1cfe8077727fb6c5c787870bbd532622f8df695c867bc84552b6801bf", "replica": 1, "decision": "KEEP_WITH_TAG", "labels": ["SEMANTIC_NON_SENSE"], "arkts_score": 3.0, "quality_score": 3.0, "confidence": 0.85, "rationale": "代码功能有误（日期加1），但结构清晰，具备学习价值。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2093, "completion_tokens": 75, "total_tokens": 2168, "raw_response": "{\n  \"decision\": \"KEEP_WITH_TAG\",\n  \"labels\": [\"SEMANTIC_NON_SENSE\"],\n  \"arkts_score\": 3,\n  \"quality_score\": 3,\n  \"confidence\": 0.85,\n  \"rationale\": \"代码功能有误（日期加1），但结构清晰，具备学习价值。\"\n}", "llm_formatted": "const MAX_LENGTH: number = 2;\n\nexport default class DateUtils {\n  public static format(date: Date, format: string = 'yyyy-MM-dd HH:mm:ss'): string {\n    let year = date.getFullYear().toString();\n    let month = (date.getMonth() + 1).toString().padStart(MAX_LENGTH, '0');\n    let day = (date.getDate() + 1).toString().padStart(MAX_LENGTH, '0');\n    let hour = (date.getHours() + 1).toString().padStart(MAX_LENGTH, '0');\n    let minute = (date.getMinutes() + 1).toString().padStart(MAX_LENGTH, '0');\n    let second = (date.getSeconds() + 1).toString().padStart(MAX_LENGTH, '0');\n    let result = format.replace('yyyy', year);\n    result = result.replace('MM', month);\n    result = result.replace('dd', day);\n    result = result.replace('HH', hour);\n    result = result.replace('mm', minute);\n    result = result.replace('ss', second);\n    return result;\n  }\n}", "leaked": true, "text_tokens": 224, "split": "valid"}
{"path": "applications_call~OpenHarmony~771/entry/src/main/ets/common/struct/CallTimeListStruct.ets", "project_name": "applications_call~OpenHarmony~771", "text": "export default class CallTimeListStruct {\n  public callId\n  public callTime\n  public startTimestamp\n  public endTimestamp\n}", "id": "65d31e1b0c354ed6d55f3f1b012edc8268abb18ec480fc1e91e75f7275f450ee", "replica": 1, "decision": "KEEP_WITH_TAG", "labels": ["MINIMAL_STRUCT_DEF"], "arkts_score": 2.0, "quality_score": 1.0, "confidence": 0.85, "rationale": "基础类定义，无逻辑，但结构完整，符合TS/ArkTS规范。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 1898, "completion_tokens": 74, "total_tokens": 1972, "raw_response": "{\n  \"decision\": \"KEEP_WITH_TAG\",\n  \"labels\": [\"MINIMAL_STRUCT_DEF\"],\n  \"arkts_score\": 2,\n  \"quality_score\": 1,\n  \"confidence\": 0.85,\n  \"rationale\": \"基础类定义，无逻辑，但结构完整，符合TS/ArkTS规范。\"\n}", "llm_formatted": "export default class CallTimeListStruct {\n  public callId\n  public callTime\n  public startTimestamp\n  public endTimestamp\n}", "leaked": true, "text_tokens": 29, "split": "valid"}
{"path": "Haoc_app_samples~Haoc_小源同学~1912/DistributedVideoPlayer_Stage/entry/src/main/ets/pages/Setting.ets", "project_name": "Haoc_app_samples~Haoc_小源同学~1912", "text": "import router from '@ohos.router';\nimport preferences from '@ohos.data.preferences';\n\nconst TAG: string = 'Setting'\nconst PREFERENCES_NAME = 'setting'\nlet preferenceSetting: preferences.Preferences = null\n\n@Entry\n@Component\nstruct Setting {\n  @StorageLink('continuationMode') @Watch('continuationModeChange') continuationMode: string = 'continuation'\n\n  async aboutToAppear() {\n    preferenceSetting = await preferences.getPreferences(globalThis.context, PREFERENCES_NAME)\n  }\n\n  async continuationModeChange() {\n    await preferenceSetting.put('continuationMode', this.continuationMode)\n    await preferenceSetting.flush()\n  }\n\n  build() {\n    Column() {\n      Row() {\n        Image($r(\"app.media.ic_public_back\"))\n          .width('8%')\n          .height('50%')\n          .margin({ right: 4 })\n          .objectFit(ImageFit.Contain)\n          .onClick(() => {\n            router.back()\n          })\n\n        Text('设置')\n          .fontColor(Color.White)\n          .fontFamily('HarmonyHeiTi')\n          .fontSize(20)\n          .maxLines(1)\n      }\n      .width('100%')\n      .height('8%')\n      .constraintSize({ minHeight: 50 })\n      .padding({ left: 10, right: 10 })\n\n      Row({ space: 10 }) {\n        Text('流转模式')\n          .fontColor(Color.White)\n          .fontFamily('HarmonyHeiTi')\n          .fontSize(20)\n\n        Blank()\n\n        Radio({ value: 'continuation', group: 'continuationMode' })\n          .checked(this.continuationMode == 'continuation' ? true : false)\n          .height(25)\n          .width(25)\n          .onChange((isChecked: boolean) => {\n            if (isChecked) {\n              this.continuationMode = 'continuation'\n            }\n          })\n\n        Text('跨端迁移')\n          .fontColor(Color.White)\n          .fontFamily('HarmonyHeiTi')\n          .fontSize(20)\n\n        Radio({ value: 'synchronization', group: 'continuationMode' })\n          .checked(this.continuationMode == 'synchronization' ? true : false)\n          .height(25)\n          .width(25)\n          .onChange((isChecked: boolean) => {\n            if (isChecked) {\n              this.continuationMode = 'synchronization'\n            }\n          })\n\n        Text('多端协同')\n          .fontColor(Color.White)\n          .fontFamily('HarmonyHeiTi')\n          .fontSize(20)\n      }\n      .width('100%')\n      .height(100)\n      .padding(10)\n      .borderRadius(20)\n      .backgroundColor('#464646')\n      .alignItems(VerticalAlign.Center)\n    }\n    .height('100%')\n    .width('100%')\n    .backgroundColor('#7F000000')\n  }\n}", "id": "f208cdf30efe8df67bc344f049ef3e617717b5e1e690438d66b4f327d51a2635", "replica": 1, "decision": "KEEP", "labels": [], "arkts_score": 4.0, "quality_score": 4.0, "confidence": 0.95, "rationale": "ArkTS组件结构清晰，生态耦合自然，具备良好可迁移性与学习价值。", "model": "/data2/lyh/base_model/Qwen3-Coder-30B-A3B-Instruct", "temperature": 0.1, "prompt_tokens": 2510, "completion_tokens": 69, "total_tokens": 2579, "raw_response": "{\n  \"decision\": \"KEEP\",\n  \"labels\": [],\n  \"arkts_score\": 4,\n  \"quality_score\": 4,\n  \"confidence\": 0.95,\n  \"rationale\": \"ArkTS组件结构清晰，生态耦合自然，具备良好可迁移性与学习价值。\"\n}", "llm_formatted": "import router from '@ohos.router';\nimport preferences from '@ohos.data.preferences';\n\nconst TAG: string = 'Setting'\nconst PREFERENCES_NAME = 'setting'\nlet preferenceSetting: preferences.Preferences = null\n\n@Entry\n@Component\nstruct Setting {\n  @StorageLink('continuationMode') @Watch('continuationModeChange') continuationMode: string = 'continuation'\n\n  async aboutToAppear() {\n    preferenceSetting = await preferences.getPreferences(globalThis.context, PREFERENCES_NAME)\n  }\n\n  async continuationModeChange() {\n    await preferenceSetting.put('continuationMode', this.continuationMode)\n    await preferenceSetting.flush()\n  }\n\n  build() {\n    Column() {\n      Row() {\n        Image($r(\"app.media.ic_public_back\"))\n          .width('8%')\n          .height('50%')\n          .margin({ right: 4 })\n          .objectFit(ImageFit.Contain)\n          .onClick(() => {\n            router.back()\n          })\n\n        Text('设置')\n          .fontColor(Color.White)\n          .fontFamily('HarmonyHeiTi')\n          .fontSize(20)\n          .maxLines(1)\n      }\n      .width('100%')\n      .height('8%')\n      .constraintSize({ minHeight: 50 })\n      .padding({ left: 10, right: 10 })\n\n      Row({ space: 10 }) {\n        Text('流转模式')\n          .fontColor(Color.White)\n          .fontFamily('HarmonyHeiTi')\n          .fontSize(20)\n\n        Blank()\n\n        Radio({ value: 'continuation', group: 'continuationMode' })\n          .checked(this.continuationMode == 'continuation' ? true : false)\n          .height(25)\n          .width(25)\n          .onChange((isChecked: boolean) => {\n            if (isChecked) {\n              this.continuationMode = 'continuation'\n            }\n          })\n\n        Text('跨端迁移')\n          .fontColor(Color.White)\n          .fontFamily('HarmonyHeiTi')\n          .fontSize(20)\n\n        Radio({ value: 'synchronization', group: 'continuationMode' })\n          .checked(this.continuationMode == 'synchronization' ? true : false)\n          .height(25)\n          .width(25)\n          .onChange((isChecked: boolean) => {\n            if (isChecked) {\n              this.continuationMode = 'synchronization'\n            }\n          })\n\n        Text('多端协同')\n          .fontColor(Color.White)\n          .fontFamily('HarmonyHeiTi')\n          .fontSize(20)\n      }\n      .width('100%')\n      .height(100)\n      .padding(10)\n      .borderRadius(20)\n      .backgroundColor('#464646')\n      .alignItems(VerticalAlign.Center)\n    }\n    .height('100%')\n    .width('100%')\n    .backgroundColor('#7F000000')\n  }\n}", "leaked": true, "text_tokens": 641, "split": "valid"}
